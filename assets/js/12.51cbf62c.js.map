{"version":3,"sources":["webpack:///./docs/regular/02/03.md","webpack:///./docs/regular/02/03.md?ec1b","webpack:///./docs/regular/02/assets/083b6a8af68f56f3120b7c8875329340.png","webpack:///./docs/regular/02/assets/3119dea0ab1c2c93fb6bd2dc500476ab.png","webpack:///./docs/regular/02/assets/3951b939651d32402e9efe63a83e7de6.png","webpack:///./docs/regular/02/assets/4b14f91e4307580bb482c58232c3f1fb.png","webpack:///./docs/regular/02/assets/588f3618f31cb91dba29264ea0ab6f05.png","webpack:///./docs/regular/02/assets/87d896f423780c43199222e32c4e428a.png","webpack:///./docs/regular/02/assets/97ce94dbc562c7a5e9e9eeb9b9cfeb16.png","webpack:///./docs/regular/02/assets/a72ad4ccc3eb769562c331f230b9c6b2.png","webpack:///./docs/regular/02/assets/b2465f3f8c50432b622ec8704dc8a214.png","webpack:///./docs/regular/02/assets/ba18101e2109df87288d935b5767c83c.png","webpack:///./docs/regular/02/assets/ccdbb32b1e41ce365fc7a296feba2699.png","webpack:///./docs/regular/02/assets/d6a3d486a8c575bc1961b7db5a153d18.png","webpack:///./docs/regular/02/assets/dbe5ce11d8968387402bb48b733a5146.png","webpack:///./docs/regular/02/assets/e54e9cedb2fe132b206c3eb3ba0fae43.png","webpack:///./docs/regular/02/assets/fdb97d69e376306e68c4e36d5ddbf830.png","webpack:///./docs/regular/02/assets/image-20201230141321649.png","webpack:///./docs/regular/02/assets/image-20201230143059874.png","webpack:///./docs/regular/02/03.md?5f02"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAgF;AAChF;;;AAGA;AAC6F;AAC7F,gBAAgB,2GAAU;AAC1B;AACA,EAAE,4EAAM;AACR,EAAE,qFAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,gF;;;;;;;;;;;;ACjBf;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACAA,iBAAiB,qBAAuB,8D;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,8D;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,8D;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,8D;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,8D;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,8D;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,8D;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,8D;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,8D;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,8D;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,8D;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,8D;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,8D;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,8D;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,8D;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,qD;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,qD;;;;;;;;;;;;ACAxC;AAAA;AAAA;AAAA,0BAA0B,aAAa,0BAA0B,wBAAwB,qCAAqC,OAAO,gCAAgC,WAAW,OAAO,qCAAqC,UAAU,mCAAmC,wCAAwC,qPAAqP,GAAG,KAAK,GAAG,wGAAwG,OAAO,MAAM,mBAAO,CAAC,oHAA+C,eAAe,wGAAwG,GAAG,KAAK,GAAG,6DAA6D,OAAO,MAAM,mBAAO,CAAC,oHAA+C,eAAe,mEAAmE,0CAA0C,YAAY,gBAAgB,yBAAyB,uFAAuF,mCAAmC,aAAa,0BAA0B,oCAAoC,0BAA0B,0EAA0E,MAAM,wWAAwW,OAAO,MAAM,mBAAO,CAAC,oHAA+C,eAAe,iEAAiE,0CAA0C,YAAY,gBAAgB,yBAAyB,4EAA4E,mCAAmC,aAAa,0BAA0B,oCAAoC,0BAA0B,iIAAiI,GAAG,IAAI,EAAE,2HAA2H,EAAE,iIAAiI,GAAG,IAAI,EAAE,+CAA+C,EAAE,gIAAgI,GAAG,KAAK,EAAE,4CAA4C,EAAE,gMAAgM,EAAE,uDAAuD,GAAG,KAAK,EAAE,mPAAmP,OAAO,cAAc,UAAU,mCAAmC,iBAAiB,2YAA2Y,OAAO,MAAM,mBAAO,CAAC,oHAA+C,eAAe,oHAAoH,OAAO,cAAc,UAAU,mCAAmC,iBAAiB,8pBAA8pB,OAAO,MAAM,mBAAO,CAAC,oHAA+C,eAAe,kCAAkC,OAAO,MAAM,mBAAO,CAAC,oHAA+C,eAAe,yBAAyB,OAAO,aAAa,UAAU,mCAAmC,gBAAgB,mSAAmS,OAAO,MAAM,mBAAO,CAAC,oHAA+C,eAAe,oHAAoH,OAAO,aAAa,UAAU,mCAAmC,gBAAgB,oYAAoY,0CAA0C,YAAY,gBAAgB,yBAAyB,oGAAoG,mCAAmC,aAAa,0BAA0B,+LAA+L,OAAO,aAAa,UAAU,mCAAmC,gBAAgB,uaAAua,aAAa,uBAAuB,wCAAwC,aAAa,uBAAuB,2CAA2C,aAAa,uBAAuB,oEAAoE,aAAa,uBAAuB,0CAA0C,aAAa,uBAAuB,kGAAkG,aAAa,uBAAuB,6GAA6G,aAAa,uBAAuB,sCAAsC,aAAa,uBAAuB,yCAAyC,aAAa,uBAAuB,oDAAoD,aAAa,uBAAuB,wCAAwC,aAAa,uBAAuB,kGAAkG,aAAa,uBAAuB,2GAA2G,aAAa,uBAAuB,8CAA8C,aAAa,uBAAuB,gGAAgG,aAAa,uBAAuB,2GAA2G,aAAa,uBAAuB,uCAAuC,aAAa,uBAAuB,kGAAkG,aAAa,uBAAuB,6GAA6G,aAAa,uBAAuB,wCAAwC,aAAa,uBAAuB,kGAAkG,aAAa,uBAAuB,4OAA4O,OAAO,mBAAmB,UAAU,mCAAmC,sBAAsB,yWAAyW,OAAO,MAAM,mBAAO,CAAC,oHAA+C,eAAe,gEAAgE,0CAA0C,YAAY,gBAAgB,yBAAyB,mGAAmG,mCAAmC,aAAa,0BAA0B,sCAAsC,OAAO,mBAAmB,UAAU,mCAAmC,sBAAsB,qOAAqO,OAAO,MAAM,mBAAO,CAAC,oHAA+C,eAAe,gEAAgE,0CAA0C,YAAY,gBAAgB,yBAAyB,uEAAuE,mCAAmC,aAAa,0BAA0B,8EAA8E,0CAA0C,YAAY,gBAAgB,yBAAyB,0BAA0B,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,+FAA+F,mCAAmC,aAAa,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,uPAAuP,gDAAgD,YAAY,gBAAgB,2BAA2B,wBAAwB,gBAAgB,0BAA0B,4BAA4B,gBAAgB,0BAA0B,uCAAuC,gBAAgB,yBAAyB,gDAAgD,gBAAgB,0BAA0B,4BAA4B,gBAAgB,0BAA0B,gDAAgD,gBAAgB,0BAA0B,uCAAuC,gBAAgB,wBAAwB,8DAA8D,gBAAgB,0BAA0B,4BAA4B,gBAAgB,0BAA0B,6CAA6C,gBAAgB,0BAA0B,uCAAuC,gBAAgB,wBAAwB,mBAAmB,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,iCAAiC,gBAAgB,0BAA0B,4BAA4B,gBAAgB,0BAA0B,6CAA6C,gBAAgB,0BAA0B,uCAAuC,gBAAgB,wBAAwB,mFAAmF,gBAAgB,0BAA0B,4BAA4B,gBAAgB,0BAA0B,yCAAyC,gBAAgB,6BAA6B,yCAAyC,gBAAgB,6BAA6B,2CAA2C,gBAAgB,6BAA6B,4CAA4C,gBAAgB,6BAA6B,+CAA+C,gBAAgB,6BAA6B,wCAAwC,gBAAgB,wBAAwB,uGAAuG,mCAAmC,aAAa,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,sCAAsC,OAAO,kBAAkB,UAAU,mCAAmC,qBAAqB,4DAA4D,OAAO,0BAA0B,UAAU,mCAAmC,6BAA6B,mZAAmZ,OAAO,MAAM,mBAAO,CAAC,oHAA+C,eAAe,2JAA2J,OAAO,MAAM,mBAAO,CAAC,oHAA+C,eAAe,yBAAyB,OAAO,mBAAmB,UAAU,mCAAmC,sBAAsB,qOAAqO,OAAO,MAAM,mBAAO,CAAC,oHAA+C,eAAe,+SAA+S,OAAO,oBAAoB,UAAU,mCAAmC,uBAAuB,uIAAuI,0CAA0C,YAAY,gBAAgB,yBAAyB,qGAAqG,mCAAmC,aAAa,0BAA0B,8LAA8L,OAAO,MAAM,mBAAO,CAAC,oHAA+C,eAAe,iNAAiN,OAAO,MAAM,mBAAO,CAAC,oHAA+C,eAAe,6LAA6L,OAAO,WAAW,UAAU,mCAAmC,cAAc,yeAAye,OAAO,MAAM,mBAAO,CAAC,kGAAsC,mCAAmC,yBAAyB,OAAO,aAAa,UAAU,mCAAmC,gBAAgB,sIAAsI,0CAA0C,YAAY,gBAAgB,yBAAyB,yGAAyG,mCAAmC,aAAa,0BAA0B,oGAAoG,0CAA0C,YAAY,gBAAgB,yBAAyB,6FAA6F,mCAAmC,aAAa,0BAA0B,+CAA+C,OAAO,MAAM,mBAAO,CAAC,oHAA+C,eAAe,mNAAmN,0CAA0C,YAAY,gBAAgB,yBAAyB,yGAAyG,mCAAmC,aAAa,0BAA0B,mFAAmF,OAAO,MAAM,mBAAO,CAAC,kGAAsC,mCAAmC,0BAA0B,0CAA0C,YAAY,gBAAgB,yBAAyB,mHAAmH,mCAAmC,aAAa,0BAA0B,oCAAoC,0BAA0B;AAC9znB","file":"assets/js/12.51cbf62c.js","sourcesContent":["import { render, staticRenderFns } from \"./03.md?vue&type=template&id=461e028a&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/@vuepress/core/node_modules/.cache/vuepress\\\",\\\"cacheIdentifier\\\":\\\"2e9acca5-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??ref--1-1!../../../node_modules/@vuepress/markdown-loader/index.js??ref--1-2!./03.md?vue&type=template&id=461e028a&\"","module.exports = __webpack_public_path__ + \"assets/img/083b6a8af68f56f3120b7c8875329340.083b6a8a.png\";","module.exports = __webpack_public_path__ + \"assets/img/3119dea0ab1c2c93fb6bd2dc500476ab.3119dea0.png\";","module.exports = __webpack_public_path__ + \"assets/img/3951b939651d32402e9efe63a83e7de6.3951b939.png\";","module.exports = __webpack_public_path__ + \"assets/img/4b14f91e4307580bb482c58232c3f1fb.4b14f91e.png\";","module.exports = __webpack_public_path__ + \"assets/img/588f3618f31cb91dba29264ea0ab6f05.588f3618.png\";","module.exports = __webpack_public_path__ + \"assets/img/87d896f423780c43199222e32c4e428a.87d896f4.png\";","module.exports = __webpack_public_path__ + \"assets/img/97ce94dbc562c7a5e9e9eeb9b9cfeb16.97ce94db.png\";","module.exports = __webpack_public_path__ + \"assets/img/a72ad4ccc3eb769562c331f230b9c6b2.a72ad4cc.png\";","module.exports = __webpack_public_path__ + \"assets/img/b2465f3f8c50432b622ec8704dc8a214.b2465f3f.png\";","module.exports = __webpack_public_path__ + \"assets/img/ba18101e2109df87288d935b5767c83c.ba18101e.png\";","module.exports = __webpack_public_path__ + \"assets/img/ccdbb32b1e41ce365fc7a296feba2699.ccdbb32b.png\";","module.exports = __webpack_public_path__ + \"assets/img/d6a3d486a8c575bc1961b7db5a153d18.d6a3d486.png\";","module.exports = __webpack_public_path__ + \"assets/img/dbe5ce11d8968387402bb48b733a5146.dbe5ce11.png\";","module.exports = __webpack_public_path__ + \"assets/img/e54e9cedb2fe132b206c3eb3ba0fae43.e54e9ced.png\";","module.exports = __webpack_public_path__ + \"assets/img/fdb97d69e376306e68c4e36d5ddbf830.fdb97d69.png\";","module.exports = __webpack_public_path__ + \"assets/img/image-20201230141321649.c9aa7936.png\";","module.exports = __webpack_public_path__ + \"assets/img/image-20201230143059874.5c0b3570.png\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{\"slot-key\":_vm.$parent.slotKey}},[_c('h1',{attrs:{\"id\":\"_03丨分组与引用-如何用正则实现更复杂的查找和替换操作\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#_03丨分组与引用-如何用正则实现更复杂的查找和替换操作\"}},[_vm._v(\"#\")]),_vm._v(\" 03丨分组与引用：如何用正则实现更复杂的查找和替换操作？\")]),_vm._v(\" \"),_c('p',[_vm._v(\"今天我打算和你聊聊分组与引用。那什么场合下会用到分组呢？\")]),_vm._v(\" \"),_c('p',[_vm._v(\"假设我们现在要去查找 15 位或 18 位数字。根据前面学习的知识，使用量词可以表示出现次数，使用管道符号可以表示多个选择，你应该很快就能写出 \"),_c('code',[_vm._v(\"\\\\d{15}|\\\\d{18}\")]),_vm._v(\"。但经过测试，你会发现，这个正则并不能很好地完成任务，因为 18 位数字也会匹配上前 15 位，具体如下图所示。\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/a72ad4ccc3eb769562c331f230b9c6b2.png\"),\"alt\":\"img\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"为了解决这个问题，你灵机一动，很快就想到了办法，就是把 15 和 18 调换顺序，即写成  \"),_c('code',[_vm._v(\"\\\\d{18}|\\\\d{15}\")]),_vm._v(\"。你发现，这回符合要求了。\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/ba18101e2109df87288d935b5767c83c.png\"),\"alt\":\"img\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"上述测试文本为：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"123456789012345\\n123456789012345678\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br')])]),_c('p',[_vm._v(\"使用 \"),_c('code',[_vm._v(\"\\\\d{15,18}\")]),_vm._v(\" 也可以实现要求。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"为什么会出现这种情况呢？\"),_c('strong',[_vm._v(\"因为在大多数正则实现中，多分支选择都是左边的优先\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"类似地，你可以使用 \"),_c('code',[_vm._v(\"北京市|北京\")]),_vm._v(\" 来查找 「北京」 和 「北京市」。另外我们前面学习过，问号可以表示出现 0 次或 1 次，你发现可以使用 \"),_c('code',[_vm._v(\"北京市?\")]),_vm._v(\" 来实现来查找「北京」 和 「北京市」\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/fdb97d69e376306e68c4e36d5ddbf830.png\"),\"alt\":\"img\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"测试文本为：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"北京市，简称“京”，古称燕京、北平\\n北京有长城\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br')])]),_c('p',[_vm._v(\"同样，针对 15 或 18 位数字这个问题，可以看成是 15 位数字，后面 3 位数据有或者没有，你应该很快写出了 \"),_c('code',[_vm._v(\"\\\\d{15}\\\\d{3}?\")]),_vm._v(\" 。但这样写对不对呢？我们来看一下。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在上一节我们学习了量词后面加问号表示非贪婪，而我们现在想要的是 \"),_c('code',[_vm._v(\"\\\\d{3}\")]),_vm._v(\" 出现 0 次或 1 次。\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('p',[_vm._v(\"示例一：\")]),_vm._v(\" \"),_c('p',[_c('code',[_vm._v(\"\\\\d{15}\\\\d{3}?\")]),_vm._v(\"   由于  \"),_c('code',[_vm._v(\"\\\\d{3}\")]),_vm._v(\"  表示三次，加问号非贪婪还是 3 次\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"示例二：\")]),_vm._v(\" \"),_c('p',[_c('code',[_vm._v(\"\\\\d{15}(\\\\d{3})?\")]),_vm._v(\" 在 \"),_c('code',[_vm._v(\"\\\\d{3}\")]),_vm._v(\" 整体后加问号，表示后面三位有或无\")])])]),_vm._v(\" \"),_c('p',[_vm._v(\"这时候，必须使用 \"),_c('strong',[_vm._v(\"括号\")]),_vm._v(\" 将来把表示 \"),_c('strong',[_vm._v(\"三个数字\")]),_vm._v(\" 的 \"),_c('code',[_vm._v(\"\\\\d{3}\")]),_vm._v(\" 这一部分括起来，也就是表示成 \"),_c('code',[_vm._v(\"\\\\d{15}(\\\\d{3})?\")]),_vm._v(\" 这样。现在就比较清楚了：\"),_c('strong',[_vm._v(\"括号在正则中的功能就是用于分组\")]),_vm._v(\"。简单来理解就是，由多个元字符组成某个部分，应该被看成一个整体的时候，可以用括号括起来表示一个整体，这是括号的一个重要功能。其实用括号括起来还有另外一个作用，那就是 \"),_c('strong',[_vm._v(\"复用\")]),_vm._v(\"，我接下来会给你讲讲这个作用。\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"分组与编号\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#分组与编号\"}},[_vm._v(\"#\")]),_vm._v(\" 分组与编号\")]),_vm._v(\" \"),_c('p',[_vm._v(\"括号在正则中可以 \"),_c('strong',[_vm._v(\"用于分组\")]),_vm._v(\"，被括号括起来的部分 「子表达式」会被保存成一个 \"),_c('strong',[_vm._v(\"子组\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"那分组和编号的规则是怎样的呢？其实很简单，用一句话来说就是，第几个括号就是第几个分组。这么说可能不好理解，我们来举一个例子看一下。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"这里有个时间格式 2020-05-10 20:23:05。假设我们想要使用正则提取出里面的日期和时间。\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/87d896f423780c43199222e32c4e428a.png\"),\"alt\":\"img\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"我们可以写出如图所示的正则，将日期和时间都括号括起来。这个正则中一共有两个分组，日期是第 1 个，时间是第 2 个。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"不保存子组\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#不保存子组\"}},[_vm._v(\"#\")]),_vm._v(\" 不保存子组\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"在括号里面的会保存成子组\")]),_vm._v(\"，但有些情况下，你可能只想用括号将某些部分看成一个整体，\"),_c('strong',[_vm._v(\"后续不用再用它\")]),_vm._v(\"，类似这种情况，在实际使用时，是没必要保存子组的。这时我们可以在括号里面使用 \"),_c('code',[_vm._v(\"?:\")]),_vm._v(\"  不保存子组。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"如果正则中出现了括号，那么我们就认为，\"),_c('strong',[_vm._v(\"这个子表达式在后续可能会再次被引用\")]),_vm._v(\"，所以 \"),_c('strong',[_vm._v(\"不保存子组可以提高正则的性能\")]),_vm._v(\"。除此之外呢，这么做还有一些好处，由于子组变少了，正则性能会更好，在 \"),_c('strong',[_vm._v(\"子组计数时也更不容易出错\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"那到底啥是不保存子组呢？我们可以理解成，\"),_c('strong',[_vm._v(\"括号只用于归组，把某个部分当成「单个元素」，不分配编号，后面不会再进行这部分的引用\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/d6a3d486a8c575bc1961b7db5a153d18.png\"),\"alt\":\"img\"}})]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/4b14f91e4307580bb482c58232c3f1fb.png\"),\"alt\":\"img\"}})]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"括号嵌套\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#括号嵌套\"}},[_vm._v(\"#\")]),_vm._v(\" 括号嵌套\")]),_vm._v(\" \"),_c('p',[_vm._v(\"前面讲完了子组和编号，但有些情况会比较复杂，比如在括号嵌套的情况里，我们要看某个括号里面的内容是第几个分组怎么办？不要担心，其实方法很简单，我们只需要数左括号（开括号）是第几个，就可以确定是第几个子组。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在阿里云简单日志系统中，我们可以使用正则来匹配一行日志的行首。假设时间格式是 2020-05-10 20:23:05 。\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/083b6a8af68f56f3120b7c8875329340.png\"),\"alt\":\"img\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"日期分组编号是 1，时间分组编号是 5，年月日对应的分组编号分别是 2，3，4，时分秒的分组编号分别是 6，7，8。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"命名分组\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#命名分组\"}},[_vm._v(\"#\")]),_vm._v(\" 命名分组\")]),_vm._v(\" \"),_c('p',[_vm._v(\"前面我们讲了分组编号，但由于编号得数在第几个位置，后续如果发现正则有问题，改动了括号的个数，还 \"),_c('strong',[_vm._v(\"可能导致编号发生变化\")]),_vm._v(\"，因此一些编程语言提供了 \"),_c('strong',[_vm._v(\"命名分组（named grouping）\")]),_vm._v(\"，这样和数字相比更容易辨识，不容易出错。命名分组的格式为 \"),_c('code',[_vm._v(\"(?P<分组名>正则)\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"比如在 Django 的路由中，命名分组示例如下：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"url(r'^profile/(?P<username>\\\\w+)/$', view_func)\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('p',[_vm._v(\"需要注意的是，刚刚提到的方式命名分组和前面一样，给这个分组分配一个编号，不过你可以使用名称，不用编号，实际上命名分组的编号已经分配好了。不过命名分组并不是所有语言都支持的，在使用时，你需要查阅所用语言正则说明文档，如果支持，那你才可以使用。\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"分组引用\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#分组引用\"}},[_vm._v(\"#\")]),_vm._v(\" 分组引用\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在知道了分组引用的编号 （number）后，大部分情况下，我们就可以使用 \"),_c('code',[_vm._v(\"反斜扛 + 编号\")]),_vm._v(\"，即  \"),_c('code',[_vm._v(\"\\\\number\")]),_vm._v(\"  的方式来进行引用，而 JavaScript 中是通过 \"),_c('code',[_vm._v(\"$编号\")]),_vm._v(\" 来引用，如 \"),_c('code',[_vm._v(\"$1\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"我给到了你一些在常见的编程语言中，分组查找和替换的引用方式：\")]),_vm._v(\" \"),_c('table',[_c('thead',[_c('tr',[_c('th',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"变成语言\")]),_vm._v(\" \"),_c('th',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"查找时引用方式\")]),_vm._v(\" \"),_c('th',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"替换时引用方式\")])])]),_vm._v(\" \"),_c('tbody',[_c('tr',[_c('td',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"Python\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"center\"}},[_c('code',[_vm._v(\"\\\\number\")]),_vm._v(\" 如 \"),_c('code',[_vm._v(\"\\\\1\")])]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"center\"}},[_c('code',[_vm._v(\"\\\\number\")]),_vm._v(\" 如 \"),_c('code',[_vm._v(\"\\\\1\")])])]),_vm._v(\" \"),_c('tr',[_c('td',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"Go\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"官方不支持\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"官方不支持\")])]),_vm._v(\" \"),_c('tr',[_c('td',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"Java\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"center\"}},[_c('code',[_vm._v(\"\\\\number\")]),_vm._v(\" 如 \"),_c('code',[_vm._v(\"\\\\1\")])]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"center\"}},[_c('code',[_vm._v(\"$number\")]),_vm._v(\" 如 \"),_c('code',[_vm._v(\"$1\")])])]),_vm._v(\" \"),_c('tr',[_c('td',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"JavaScript\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"center\"}},[_c('code',[_vm._v(\"$number\")]),_vm._v(\" 如 \"),_c('code',[_vm._v(\"$1\")])]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"center\"}},[_c('code',[_vm._v(\"$number\")]),_vm._v(\" 如 \"),_c('code',[_vm._v(\"$1\")])])]),_vm._v(\" \"),_c('tr',[_c('td',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"PHP\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"center\"}},[_c('code',[_vm._v(\"\\\\number\")]),_vm._v(\" 如 \"),_c('code',[_vm._v(\"\\\\1\")])]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"center\"}},[_c('code',[_vm._v(\"\\\\number\")]),_vm._v(\" 如 \"),_c('code',[_vm._v(\"\\\\1\")])])]),_vm._v(\" \"),_c('tr',[_c('td',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"Ruby\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"center\"}},[_c('code',[_vm._v(\"\\\\number\")]),_vm._v(\" 如 \"),_c('code',[_vm._v(\"\\\\1\")])]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"center\"}},[_c('code',[_vm._v(\"\\\\number\")]),_vm._v(\" 如 \"),_c('code',[_vm._v(\"\\\\1\")])])])])]),_vm._v(\" \"),_c('p',[_vm._v(\"这些内容不要求你完全记住，只要有个印象就好，最关键的是要知道正则可以实现这样的功能，\")]),_vm._v(\" \"),_c('p',[_vm._v(\"需要用到的时候查一下相应的文档，就知道怎么用了。\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"分组引用在查找中使用\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#分组引用在查找中使用\"}},[_vm._v(\"#\")]),_vm._v(\" 分组引用在查找中使用\")]),_vm._v(\" \"),_c('p',[_vm._v(\"前面介绍了子组和引用的基本知识，现在我们来看下在 \"),_c('strong',[_vm._v(\"正则查找时如何使用分组引用\")]),_vm._v(\"。比如我们要找重复出现的单词，我们使用正则可以很方便地使「前面出现的单词再次出现」，具体要怎么操作呢？我们可以使用  \"),_c('code',[_vm._v(\"\\\\w+\")]),_vm._v(\"  来表示一个单词，针对刚刚的问题，我们就可以很容易写出 \"),_c('code',[_vm._v(\"(\\\\w+) \\\\1\")]),_vm._v(\"  这个正则表达式了。\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/3951b939651d32402e9efe63a83e7de6.png\"),\"alt\":\"img\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"练习文本为\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"the little cat cat is in the hat hat,we like it\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('h2',{attrs:{\"id\":\"分组引用在替换中使用\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#分组引用在替换中使用\"}},[_vm._v(\"#\")]),_vm._v(\" 分组引用在替换中使用\")]),_vm._v(\" \"),_c('p',[_vm._v(\"和查找类似，我们可以使用 \"),_c('strong',[_vm._v(\"反向引用\")]),_vm._v(\"，在得到的结果中，去拼出来我们想要的结果。还是使用刚刚日期时间的例子，我们可以很方便地将它替换成， 2020 年 05 月 10 日这样的格式。\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/b2465f3f8c50432b622ec8704dc8a214.png\"),\"alt\":\"img\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"练习文本为\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"2020-05-10 20:23:05\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('p',[_vm._v(\"表达式与应用\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"(\\\\d{4})-(\\\\d{2})-(\\\\d{2}) (\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\n\\n\\\\1 年 \\\\2 月 \\\\3 日 \\\\4 时 \\\\5 分 \\\\6 秒\\n\\n这里和图上的不完全一样，自己尝试去练习的\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br')])]),_c('p',[_vm._v(\"练习示例：https://regex101.com/r/2RVPTJ/2。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"不知道学到这里，你有没有觉得子组和引用非常强大呢？\")]),_vm._v(\" \"),_c('p',[_vm._v(\"你可能很好奇，那在编程语言中如何实现这个功能呢？我下面以 Python3 为例，给出一个示例。\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-python line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-python\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\">>\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\">\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"import\")]),_vm._v(\" re\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\">>\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\">\")]),_vm._v(\" test_str \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"2020-05-10 20:23:05\\\"\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\">>\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\">\")]),_vm._v(\" regex \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"r\\\"((\\\\d{4})-(\\\\d{2})-(\\\\d{2})) ((\\\\d{2}):(\\\\d{2}):(\\\\d{2}))\\\"\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\">>\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\">\")]),_vm._v(\" subst \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"r\\\"日期\\\\1 时间\\\\5   \\\\2年\\\\3月\\\\4日 \\\\6时\\\\7分\\\\8秒\\\"\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\">>\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\">\")]),_vm._v(\" re\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"sub\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"regex\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" subst\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" test_str\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'日期2020-05-10 时间20:23:05   2020年05月10日 20时23分05秒'\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br')])]),_c('h2',{attrs:{\"id\":\"在文本编辑器中使用\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#在文本编辑器中使用\"}},[_vm._v(\"#\")]),_vm._v(\" 在文本编辑器中使用\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"sublime-text-3-简介\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#sublime-text-3-简介\"}},[_vm._v(\"#\")]),_vm._v(\" Sublime Text 3 简介\")]),_vm._v(\" \"),_c('p',[_vm._v(\"接下来我用 Sublime Text 3 来当例子，给你讲解一下正则查找和替换的使用方式。Sublime Text 3 是一个跨平台编辑器，非常小巧、强悍，虽然是一个收费软件，但可以永久试用，你自行可以下载安装。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"当熟练使用编辑器之后，你会发现在很多工作里都可以使用它，不需要编写代码就可以完成。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"下面我以文本编辑器 Sublime Text 3 为例，来讲解正则查找和替换的使用方式。首先，我们要使用的「查找」或「替换」功能，在菜单 Find 中可以找到。\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/e54e9cedb2fe132b206c3eb3ba0fae43.png\"),\"alt\":\"img\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"下面是对编辑器查找 - 替换界面的图标简介，Find 输入栏第一个 \"),_c('code',[_vm._v(\".*\")]),_vm._v(\"  图标，表示开启或关闭正则支持。\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/588f3618f31cb91dba29264ea0ab6f05.png\"),\"alt\":\"img\"}})]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"编辑器中进行正则查找\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#编辑器中进行正则查找\"}},[_vm._v(\"#\")]),_vm._v(\" 编辑器中进行正则查找\")]),_vm._v(\" \"),_c('p',[_vm._v(\"接下来，我们来演示用编辑器查找引号引起来的内容，课程中使用到的文本，建议你用 chrome 等浏览器等，打开极客时间网页版本 https://time.geekbang.org，点击右键查看源代码，把看到的代码复制到 Sublime Text 3 中。\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/3119dea0ab1c2c93fb6bd2dc500476ab.png\"),\"alt\":\"img\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"输入相应的正则，我们就可以看到查找的效果了。这里给一个小提示，如果你点击 Find All，然后进行剪切，具体操作可以在菜单中找到 \"),_c('code',[_vm._v(\"Edit -> Cut\")]),_vm._v(\"，也可以使用快捷键操作。剪切之后，找一个空白的地方，粘贴就可以看到提取出的所有内容了。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"我们可以使用正则进行资源链接提取，比如从一个图片网站的源代码中查找到图片链接，然后再使用下载工具批量下载这些图片。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"在编辑器中进行正则替换\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#在编辑器中进行正则替换\"}},[_vm._v(\"#\")]),_vm._v(\" 在编辑器中进行正则替换\")]),_vm._v(\" \"),_c('p',[_vm._v(\"接着，我们再来看一下在编辑器中进行文本替换工作。你可以在编辑器中输入这些文本：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"the little cat cat is in the hat hat, we like it.\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('p',[_vm._v(\"如果我们要尝试从中查找连续重复出现两次的单词，我们可以用 \\\\w+ 代表单词，利用我们刚刚学习的知识，相信你可以很快写出正则  \"),_c('code',[_vm._v(\"(\\\\w+) \\\\1\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/dbe5ce11d8968387402bb48b733a5146.png\"),\"alt\":\"img\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"接着点击菜单中的 \"),_c('code',[_vm._v(\"Find -> Replace\")]),_vm._v(\"，在替换栏中输入子组的引用  \"),_c('code',[_vm._v(\"\\\\1\")]),_vm._v(\" ，然后点击 Replace All 就可以完成替换工作了。\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/ccdbb32b1e41ce365fc7a296feba2699.png\"),\"alt\":\"img\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"这样，通过少量的正则，我们就完成了文本的处理工作了。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"几乎所有主流编辑器都是支持正则的，你可以在你喜欢的编辑器中尝试一下这个例子，在后面的工作中，也可以尝试使用它来完成一些复杂的文本查找和替换工作。\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"总结\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#总结\"}},[_vm._v(\"#\")]),_vm._v(\" 总结\")]),_vm._v(\" \"),_c('p',[_vm._v(\"好了，今天的内容讲完了，我来带你总结回顾一下。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"今天我们学习到了正则中的分组和子组编号相关内容。括号可以将某部分括起来，看成一个整体，也可以保存成一个子组，在后续查找替换的时候使用。分组编号是指，在正则中第几个括号内就是第几个分组，而嵌套括号我们只要看左括号是第几个就可以了。如果不想将括号里面的内容保存成子组，可以在括号里面加上 \"),_c('code',[_vm._v(\"?:\")]),_vm._v(\"  来解决。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"搞懂了分组的内容，我们就可以利用分组引用，来实现将「原文本部分内容」，在查找或替换时进行再次利用，达到实现复杂文本的查找和替换工作。甚至在使用一些文本编辑器的时候，不写代码，我们就可以完成文本的查找替换处理工作，这往往可以节约很多开发时间。\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/image-20201230141321649.png\"),\"alt\":\"image-20201230141321649\"}})]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"课后思考\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#课后思考\"}},[_vm._v(\"#\")]),_vm._v(\" 课后思考\")]),_vm._v(\" \"),_c('p',[_vm._v(\"有一篇英文文章，里面有一些单词连续出现了多次，我们认为连续出现多次的单词应该是一次，比如：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"the little cat cat is in the hat hat hat, we like it.\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('p',[_vm._v(\"其中 cat 和 hat 连接出现多次，要求处理后结果是\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"the little cat is in the hat, we like it.\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/97ce94dbc562c7a5e9e9eeb9b9cfeb16.png\"),\"alt\":\"img\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"这个题目我给出了相应的地址 https://regex101.com/r/2RVPTJ/3，你可以直接在网页上进行测试，写入相应的 「正则查找部分」 和 「正则替换部分」，让结果符合预期。多动手练习，你才能更好地掌握学习的内容。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"练习文本为\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"the little cat cat is in the hat hat hat, we like it.\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('p',[_vm._v(\"答案为\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/image-20201230143059874.png\"),\"alt\":\"image-20201230143059874\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"正则部分： (\\\\w+)((\\\\s+)+\\\\1)+   这个更精简  (\\\\w+)(\\\\s+\\\\1)+\\n正则替换部分：\\\\1\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br')])]),_c('p',[_vm._v(\"解释：\")]),_vm._v(\" \"),_c('p',[_vm._v(\"正则部分：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('p',[_c('code',[_vm._v(\"\\\\w+\")]),_vm._v(\"：匹配每个单词，默认是贪婪模式，可以匹配到每个单词\")]),_vm._v(\" \"),_c('p',[_vm._v(\"因为单词中间是用空格分割的，而 \"),_c('code',[_vm._v(\"\\\\w\")]),_vm._v(\" 中不包含空格\")])]),_vm._v(\" \"),_c('li',[_c('p',[_c('code',[_vm._v(\"\\\\s+\")]),_vm._v(\" 匹配的是 1 到 多个空格，hat 前面最多是有 2 个空格的\")])]),_vm._v(\" \"),_c('li',[_c('p',[_c('code',[_vm._v(\"\\\\1\")]),_vm._v(\" 应用了 \"),_c('code',[_vm._v(\"(\\\\w+)\")]),_vm._v(\", 来组成重复的效果\")])]),_vm._v(\" \"),_c('li',[_c('p',[_c('code',[_vm._v(\"(\\\\s+\\\\1)+\")]),_vm._v(\"：另外用了括号嵌套，将任意空格和重复单词，看成是一个整体，可以出现 1 到多次\")])])]),_vm._v(\" \"),_c('p',[_vm._v(\"替换部分： \"),_c('code',[_vm._v(\"\\\\1\")]),_vm._v(\" 引用的是 \"),_c('code',[_vm._v(\"(\\\\w+)\")]),_vm._v(\" 这组，不包含空格的单词。笔者这里不太理解直接使用引用，怎么就显示全文了？\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"sourceRoot":""}