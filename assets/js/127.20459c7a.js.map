{"version":3,"sources":["webpack:///./docs/cache-pdp/redis/032.md","webpack:///./docs/cache-pdp/redis/032.md?f918","webpack:///./docs/cache-pdp/redis/assets/markdown-img-paste-20190328214951341.png","webpack:///./docs/cache-pdp/redis/assets/markdown-img-paste-20190328215011777.png","webpack:///./docs/cache-pdp/redis/032.md?6142"],"names":[],"mappings":"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","file":"assets/js/127.20459c7a.js","sourcesContent":["import { render, staticRenderFns } from \"./032.md?vue&type=template&id=476fee2e&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/@vuepress/core/node_modules/.cache/vuepress\\\",\\\"cacheIdentifier\\\":\\\"2e9acca5-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??ref--1-1!../../../node_modules/@vuepress/markdown-loader/index.js??ref--1-2!./032.md?vue&type=template&id=476fee2e&\"","module.exports = __webpack_public_path__ + \"assets/img/markdown-img-paste-20190328214951341.586a2733.png\";","module.exports = __webpack_public_path__ + \"assets/img/markdown-img-paste-20190328215011777.b2c960d5.png\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{\"slot-key\":_vm.$parent.slotKey}},[_c('h1',{attrs:{\"id\":\"_032-redis-cluster-的核心原理分析-gossip-通信、jedis-smart-定位、主备切换\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#_032-redis-cluster-的核心原理分析-gossip-通信、jedis-smart-定位、主备切换\"}},[_vm._v(\"#\")]),_vm._v(\" 032. redis cluster 的核心原理分析：gossip 通信、jedis smart 定位、主备切换\")]),_vm._v(\" \"),_c('p'),_c('div',{staticClass:\"table-of-contents\"},[_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"#节点间的内部通信机制\"}},[_vm._v(\"节点间的内部通信机制\")]),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"#基础通信原理\"}},[_vm._v(\"基础通信原理\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#gossip-协议\"}},[_vm._v(\"gossip 协议\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#ping-消息深入\"}},[_vm._v(\"ping 消息深入\")])])])]),_c('li',[_c('a',{attrs:{\"href\":\"#面向集群的-jedis-内部实现原理\"}},[_vm._v(\"面向集群的 jedis 内部实现原理\")]),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"#基于重定向的客户端\"}},[_vm._v(\"基于重定向的客户端\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#smart-jedis\"}},[_vm._v(\"smart jedis\")])])])]),_c('li',[_c('a',{attrs:{\"href\":\"#高可用性与主备切换原理\"}},[_vm._v(\"高可用性与主备切换原理\")]),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"#与哨兵比较\"}},[_vm._v(\"与哨兵比较\")])])])])])]),_c('p'),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"节点间的内部通信机制\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#节点间的内部通信机制\"}},[_vm._v(\"#\")]),_vm._v(\" 节点间的内部通信机制\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"基础通信原理\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#基础通信原理\"}},[_vm._v(\"#\")]),_vm._v(\" 基础通信原理\")]),_vm._v(\" \"),_c('h4',{attrs:{\"id\":\"redis-cluster-节点间采取-gossip-协议进行通信\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#redis-cluster-节点间采取-gossip-协议进行通信\"}},[_vm._v(\"#\")]),_vm._v(\" redis cluster 节点间采取 gossip 协议进行通信\")]),_vm._v(\" \"),_c('p',[_vm._v(\"gossip：互相之间不断通信，保持整个集群所有节点的数据是完整的\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/markdown-img-paste-20190328214951341.png\"),\"alt\":\"\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"而集中式是将集群元数据（节点信息，故障，等等）集中存储在某个节点上；\")]),_vm._v(\" \"),_c('p',[_vm._v(\"经典的集中式中间件 zookeeper\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/markdown-img-paste-20190328215011777.png\"),\"alt\":\"\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"他们基本上都用于维护集群的元数据\")]),_vm._v(\" \"),_c('p',[_vm._v(\"集中式：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('p',[_vm._v(\"优点：数据更新及时，时效好\")]),_vm._v(\" \"),_c('p',[_vm._v(\"元数据的更新和读取，时效性非常好，一旦元数据出现了变更，立即就更新到集中式的存储中，其他节点读取的时候立即就可以感知到;\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"缺点：数据更新压力集中\")]),_vm._v(\" \"),_c('p',[_vm._v(\"所有的元数据的跟新压力全部集中在一个地方，可能会导致元数据的存储有压力\")])])]),_vm._v(\" \"),_c('p',[_vm._v(\"gossip：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('p',[_vm._v(\"优点：数据更新压力分散\")]),_vm._v(\" \"),_c('p',[_vm._v(\"元数据的更新比较分散，不是集中在一个地方，更新请求会陆陆续续，打到所有节点上去更新，有一定的延时，降低了压力;\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"缺点：数据更新延迟\")]),_vm._v(\" \"),_c('p',[_vm._v(\"元数据更新有延时，可能导致集群的一些操作会有一些滞后\")])])]),_vm._v(\" \"),_c('p',[_vm._v(\"可见 集中式 与 gossip 的优缺点是相互的。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"gossip 的延迟在我们上一章节中迁移 slots 时（reshard），去做另外一个操作，会发现 configuration error，需要等待一会才能达成一致，配置数据才能同步成功\")]),_vm._v(\" \"),_c('h4',{attrs:{\"id\":\"_10000-端口\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#_10000-端口\"}},[_vm._v(\"#\")]),_vm._v(\" 10000 端口\")]),_vm._v(\" \"),_c('p',[_vm._v(\"每个节点都有一个专门用于节点间通信的端口，就是自己提供服务的端口号 + 10000，比如 7001，那么用于节点间通信的就是 17001 端口\")]),_vm._v(\" \"),_c('p',[_vm._v(\"每个节点每隔一段时间都会往另外几个节点发送 ping 消息，同时其他几点接收到 ping 之后返回 pong\")]),_vm._v(\" \"),_c('h4',{attrs:{\"id\":\"交换的信息\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#交换的信息\"}},[_vm._v(\"#\")]),_vm._v(\" 交换的信息\")]),_vm._v(\" \"),_c('p',[_vm._v(\"交换的信息有：故障信息、节点的增加和移除、hash slot 信息，等等\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"gossip-协议\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#gossip-协议\"}},[_vm._v(\"#\")]),_vm._v(\" gossip 协议\")]),_vm._v(\" \"),_c('p',[_vm._v(\"gossip 协议包含多种消息，包括 ping、pong、meet、fail，等等\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('p',[_vm._v(\"meet:\")]),_vm._v(\" \"),_c('p',[_vm._v(\"某个节点发送 meet 给新加入的节点，让新节点加入集群中，然后新节点就会开始与其他节点进行通信\")]),_vm._v(\" \"),_c('p',[_vm._v(\"redis-trib.rb add-node\")]),_vm._v(\" \"),_c('p',[_vm._v(\"其实内部就是发送了一个 gossip meet 消息，给新加入的节点，通知那个节点去加入我们的集群\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"ping:\")]),_vm._v(\" \"),_c('p',[_vm._v(\"每个节点都会频繁给其他节点发送 ping，其中包含自己的状态还有自己维护的集群元数据，互相通过 ping 交换元数据\")]),_vm._v(\" \"),_c('p',[_vm._v(\"每个节点每秒都会频繁发送 ping 给其他的集群，ping，频繁的互相之间交换数据，互相进行元数据的更新\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"pong:\")]),_vm._v(\" \"),_c('p',[_vm._v(\"返回 ping 和 meet，包含自己的状态和其他信息，也可以用于信息广播和更新\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"fail:\")]),_vm._v(\" \"),_c('p',[_vm._v(\"某个节点判断另一个节点 fail 之后，就发送 fail 给其他节点，通知其他节点，指定的节点宕机了\")])])]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"ping-消息深入\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#ping-消息深入\"}},[_vm._v(\"#\")]),_vm._v(\" ping 消息深入\")]),_vm._v(\" \"),_c('p',[_vm._v(\"ping 很频繁，而且要携带一些元数据，所以可能会加重网络负担\")]),_vm._v(\" \"),_c('p',[_vm._v(\"每个节点每秒会执行 10 次 ping，每次会选择 5 个最久没有通信的其他节点\")]),_vm._v(\" \"),_c('p',[_vm._v(\"当然如果发现某个节点通信延时达到了 cluster_node_timeout / 2，那么立即发送 ping，避免数据交换延时过长，落后的时间太长了\")]),_vm._v(\" \"),_c('p',[_vm._v(\"比如说，两个节点之间都 10 分钟没有交换数据了，那么整个集群处于严重的元数据不一致的情况，就会有问题\")]),_vm._v(\" \"),_c('p',[_vm._v(\"所以 cluster_node_timeout 可以调节，如果调节比较大，那么会降低发送的频率\")]),_vm._v(\" \"),_c('p',[_vm._v(\"每次 ping，一个是带上自己节点的信息，还有就是带上 1/10 其他节点的信息，发送出去，进行数据交换\")]),_vm._v(\" \"),_c('p',[_vm._v(\"至少包含 3 个其他节点的信息，最多包含总节点 -2 个其他节点的信息\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"面向集群的-jedis-内部实现原理\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#面向集群的-jedis-内部实现原理\"}},[_vm._v(\"#\")]),_vm._v(\" 面向集群的 jedis 内部实现原理\")]),_vm._v(\" \"),_c('p',[_vm._v(\"后面会使用 jedis，它是 redis 的 java client 客户端，支持 redis cluster\")]),_vm._v(\" \"),_c('p',[_vm._v(\"这里会讲解 jedis cluster api 与 redis cluster 集群交互的一些基本原理\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"基于重定向的客户端\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#基于重定向的客户端\"}},[_vm._v(\"#\")]),_vm._v(\" 基于重定向的客户端\")]),_vm._v(\" \"),_c('p',[_vm._v(\"redis-cli -c，可以提供自动重定的功能，那么对于 jedis 来说，下面是他的实现原理\")]),_vm._v(\" \"),_c('h4',{attrs:{\"id\":\"请求重定向\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#请求重定向\"}},[_vm._v(\"#\")]),_vm._v(\" 请求重定向\")]),_vm._v(\" \"),_c('p',[_vm._v(\"客户端可能会挑选任意一个 redis 实例去发送命令，每个 redis 实例接收到命令，都会计算 key 对应的 hash slot\")]),_vm._v(\" \"),_c('p',[_vm._v(\"如果在本地就在本地处理，否则返回 moved 给客户端，让客户端进行重定向\")]),_vm._v(\" \"),_c('p',[_vm._v(\"cluster keyslot mykey，可以查看一个 key 对应的 hash slot 是什么\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_vm._v(\"root@eshop-cache01 ~\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"# redis-cli -h 192.168.99.170 -p 7001\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"192.168\")]),_vm._v(\".99.170:700\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_c('span',{pre:true,attrs:{\"class\":\"token file-descriptor important\"}},[_vm._v(\"1\")]),_vm._v(\">\")]),_vm._v(\" cluster keyslot myke1\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"integer\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"12435\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"192.168\")]),_vm._v(\".99.170:700\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_c('span',{pre:true,attrs:{\"class\":\"token file-descriptor important\"}},[_vm._v(\"1\")]),_vm._v(\">\")]),_vm._v(\" cluster keyslot myke2\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"integer\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"240\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br')])]),_c('p',[_vm._v(\"用 redis-cli 的时候，可以加入 -c 参数，支持自动的请求重定向，redis-cli 接收到 moved 之后，会自动重定向到对应的节点执行命令\")]),_vm._v(\" \"),_c('p',[_vm._v(\"但是这样会有一个问题，可能会出现大部分命令都会接受到 moved 响应，也就是说可能一次写入会有两次请求，这个就很浪费性能\")]),_vm._v(\" \"),_c('h4',{attrs:{\"id\":\"计算-hash-slot\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#计算-hash-slot\"}},[_vm._v(\"#\")]),_vm._v(\" 计算 hash slot\")]),_vm._v(\" \"),_c('p',[_vm._v(\"计算 hash slot 的算法，就是根据 key 计算 CRC16 值，然后对 16384 取模，拿到对应的 hash slot\")]),_vm._v(\" \"),_c('p',[_vm._v(\"用 hash tag 可以手动指定 key 对应的 slot，同一个 hash tag 下的 key，都会在一个 hash slot 中，比如 set mykey1:{100} 和 set mykey2:{100}\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"192.168\")]),_vm._v(\".99.170:700\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_c('span',{pre:true,attrs:{\"class\":\"token file-descriptor important\"}},[_vm._v(\"1\")]),_vm._v(\">\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token builtin class-name\"}},[_vm._v(\"set\")]),_vm._v(\" mykey1:\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"100\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_vm._v(\"\\nOK\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"192.168\")]),_vm._v(\".99.170:700\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_c('span',{pre:true,attrs:{\"class\":\"token file-descriptor important\"}},[_vm._v(\"1\")]),_vm._v(\">\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token builtin class-name\"}},[_vm._v(\"set\")]),_vm._v(\" mykey2:\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"100\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2\")]),_vm._v(\"\\nOK\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"192.168\")]),_vm._v(\".99.170:700\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_c('span',{pre:true,attrs:{\"class\":\"token file-descriptor important\"}},[_vm._v(\"1\")]),_vm._v(\">\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token builtin class-name\"}},[_vm._v(\"set\")]),_vm._v(\" mykey1 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_vm._v(\"\\nOK\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"192.168\")]),_vm._v(\".99.170:700\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_c('span',{pre:true,attrs:{\"class\":\"token file-descriptor important\"}},[_vm._v(\"1\")]),_vm._v(\">\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token builtin class-name\"}},[_vm._v(\"set\")]),_vm._v(\" mykey2 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"error\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" MOVED \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"14119\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"192.168\")]),_vm._v(\".99.172:7005\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"192.168\")]),_vm._v(\".99.170:700\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_c('span',{pre:true,attrs:{\"class\":\"token file-descriptor important\"}},[_vm._v(\"1\")]),_vm._v(\">\")]),_vm._v(\" get mykey2\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"error\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" MOVED \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"14119\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"192.168\")]),_vm._v(\".99.172:7005\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"192.168\")]),_vm._v(\".99.170:700\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_c('span',{pre:true,attrs:{\"class\":\"token file-descriptor important\"}},[_vm._v(\"1\")]),_vm._v(\">\")]),_vm._v(\" get mykey2:\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"100\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"2\\\"\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"8\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"9\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"10\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"11\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"12\")]),_c('br')])]),_c('p',[_vm._v(\"可以看到，这个 tag 相当于你手动指定这个 key 路由到哪一个 solt 上去，那么只要手动了，以后查询也需要手动指定才行，所以这里需要先计算出 hash slot 的值，相当于在 redis 服务端的工作挪动到客户端来做了，这样减少了大量的 moved 请求\")]),_vm._v(\" \"),_c('h4',{attrs:{\"id\":\"hash-slot-查找\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#hash-slot-查找\"}},[_vm._v(\"#\")]),_vm._v(\" hash slot 查找\")]),_vm._v(\" \"),_c('p',[_vm._v(\"节点间通过 gossip 协议进行数据交换，就知道每个 hash slot 在哪个节点上\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"smart-jedis\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#smart-jedis\"}},[_vm._v(\"#\")]),_vm._v(\" smart jedis\")]),_vm._v(\" \"),_c('h4',{attrs:{\"id\":\"什么是-smart-jedis\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#什么是-smart-jedis\"}},[_vm._v(\"#\")]),_vm._v(\" 什么是 smart jedis\")]),_vm._v(\" \"),_c('p',[_vm._v(\"基于重定向的客户端，很消耗网络 IO，因为大部分情况下，可能都会出现一次请求重定向，才能找到正确的节点\")]),_vm._v(\" \"),_c('p',[_vm._v(\"所以大部分的客户端，比如 java redis 客户端（jedis），就是 smart 的\")]),_vm._v(\" \"),_c('p',[_vm._v(\"本地维护一份 hashslot -> node 的映射表，缓存起来，大部分情况下，直接走本地缓存就可以找到 hashslot -> node，不需要通过节点进行 moved 重定向\")]),_vm._v(\" \"),_c('h4',{attrs:{\"id\":\"jediscluster-的工作原理\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#jediscluster-的工作原理\"}},[_vm._v(\"#\")]),_vm._v(\" JedisCluster 的工作原理\")]),_vm._v(\" \"),_c('ol',[_c('li',[_c('p',[_vm._v(\"在 JedisCluster 初始化的时候，就会随机选择一个 node，初始化 hashslot -> node 映射表，同时为每个节点创建一个 JedisPool 连接池\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"每次基于 JedisCluster 执行操作，首先 JedisCluster 都会在本地计算 key的 hashslot，然后在本地映射表找到对应的节点\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"如果那个 node 正好还是持有那个 hashslot，那么就 ok; 如果说进行了 reshard 这样的操作，可能 hashslot 已经不在那个 node 上了，就会返回 moved\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"如果 JedisCluter API 发现对应的节点返回 moved，那么利用该节点的元数据，更新本地的 hashslot -> node 映射表缓存\")])])]),_vm._v(\" \"),_c('p',[_vm._v(\"重复上面几个步骤，直到找到对应的节点，如果重试超过 5 次，那么就报错 JedisClusterMaxRedirectionException\")]),_vm._v(\" \"),_c('p',[_vm._v(\"jedis 老版本，可能会出现在集群某个节点故障还没完成自动切换恢复时，频繁更新 hash slot，频繁 ping 节点检查活跃，导致大量网络 IO 开销\")]),_vm._v(\" \"),_c('p',[_vm._v(\"jedis 最新版本，对于这些过度的 hash slot 更新和 ping，都进行了优化，避免了类似问题\")]),_vm._v(\" \"),_c('h4',{attrs:{\"id\":\"hashslot-迁移和-ask-重定向\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#hashslot-迁移和-ask-重定向\"}},[_vm._v(\"#\")]),_vm._v(\" hashslot 迁移和 ask 重定向\")]),_vm._v(\" \"),_c('p',[_vm._v(\"如果 hash slot 正在迁移，那么会返回 ask 重定向给 jedis\")]),_vm._v(\" \"),_c('p',[_vm._v(\"jedis 接收到 ask 重定向之后，会重新定位到目标节点去执行，但是因为 ask 发生在 hash slot 迁移过程中，所以 JedisCluster API 收到 ask 是不会更新 hashslot 本地缓存\")]),_vm._v(\" \"),_c('p',[_vm._v(\"已经可以确定 hashslot 已经迁移完了，访问会返回 moved， 那么是会更新本地 hashslot->node 映射表缓存的\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"高可用性与主备切换原理\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#高可用性与主备切换原理\"}},[_vm._v(\"#\")]),_vm._v(\" 高可用性与主备切换原理\")]),_vm._v(\" \"),_c('p',[_vm._v(\"redis cluster 的高可用的原理，几乎跟哨兵是类似的\")]),_vm._v(\" \"),_c('ol',[_c('li',[_c('p',[_vm._v(\"判断节点宕机\")]),_vm._v(\" \"),_c('p',[_vm._v(\"如果一个节点认为另外一个节点宕机，那么就是 pfail，主观宕机\")]),_vm._v(\" \"),_c('p',[_vm._v(\"如果多个节点都认为另外一个节点宕机了，那么就是 fail，客观宕机，跟哨兵的原理几乎一样，sdown、odown\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在 cluster-node-timeout 内，某个节点一直没有返回 pong，那么就被认为 pfail\")]),_vm._v(\" \"),_c('p',[_vm._v(\"如果一个节点认为某个节点 pfail 了，那么会在 gossip ping 消息中，ping 给其他节点，如果超过半数的节点都认为 pfail 了，那么就会变成 fail\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"从节点过滤\")]),_vm._v(\" \"),_c('p',[_vm._v(\"对宕机的 master node，从其所有的 slave node 中，选择一个切换成 master node\")]),_vm._v(\" \"),_c('p',[_vm._v(\"检查每个 slave node 与 master node 断开连接的时间，如果超过了 cluster-node-timeout * cluster-slave-validity-factor，那么就没有资格切换成 master\")]),_vm._v(\" \"),_c('p',[_vm._v(\"这个也是跟哨兵是一样的，从节点超时过滤的步骤\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"从节点选举\")]),_vm._v(\" \"),_c('p',[_vm._v(\"哨兵：对所有从节点进行排序，slave priority，offset，run id\")]),_vm._v(\" \"),_c('p',[_vm._v(\"每个从节点，都根据自己对 master 复制数据的 offset，来设置一个选举时间，offset 越大（复制数据越多）的从节点，选举时间越靠前，优先进行选举\")]),_vm._v(\" \"),_c('p',[_vm._v(\"所有的 master node 开始 slave 选举投票，给要进行选举的 slave 进行投票，如果大部分 master node（N/2 + 1）都投票给了某个从节点，那么选举通过，那个从节点可以切换成 master\")]),_vm._v(\" \"),_c('p',[_vm._v(\"从节点执行主备切换，从节点切换为主节点\")])])]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"与哨兵比较\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#与哨兵比较\"}},[_vm._v(\"#\")]),_vm._v(\" 与哨兵比较\")]),_vm._v(\" \"),_c('p',[_vm._v(\"整个流程跟哨兵相比，非常类似，所以说，redis cluster 功能强大，直接集成了 replication 和 sentinal 的功能\")]),_vm._v(\" \"),_c('p',[_vm._v(\"没有办法去给大家深入讲解 redis 底层的设计的细节，核心原理和设计的细节，那个除非单独开一门课，redis 底层原理深度剖析，redis 源码\")]),_vm._v(\" \"),_c('p',[_vm._v(\"对于咱们这个架构课来说，主要关注的是架构，不是底层的细节，对于架构来说，核心的原理的基本思路，是要梳理清晰的\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"sourceRoot":""}