{"version":3,"sources":["webpack:///./docs/back-end-storage/01/07.md","webpack:///./docs/back-end-storage/01/07.md?73bb","webpack:///./docs/back-end-storage/01/assets/04ff6bce8f5b607950fc469a606433ac.jpg","webpack:///./docs/back-end-storage/01/07.md?c7ae"],"names":[],"mappings":"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","file":"assets/js/150.2ebe6c39.js","sourcesContent":["import { render, staticRenderFns } from \"./07.md?vue&type=template&id=3a41a44a&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/@vuepress/core/node_modules/.cache/vuepress\\\",\\\"cacheIdentifier\\\":\\\"2e9acca5-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??ref--1-1!../../../node_modules/@vuepress/markdown-loader/index.js??ref--1-2!./07.md?vue&type=template&id=3a41a44a&\"","module.exports = __webpack_public_path__ + \"assets/img/04ff6bce8f5b607950fc469a606433ac.04ff6bce.jpg\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{\"slot-key\":_vm.$parent.slotKey}},[_c('h1',{attrs:{\"id\":\"mysql-ha-如何将「删库跑路」的损失降到最低\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#mysql-ha-如何将「删库跑路」的损失降到最低\"}},[_vm._v(\"#\")]),_vm._v(\" MySQL HA：如何将「删库跑路」的损失降到最低？\")]),_vm._v(\" \"),_c('p',[_vm._v(\"对于任何一个企业来说，数据安全的重要性是不言而喻的。我在开篇词中也曾经强调过，凡是涉及到数据的问题，都是损失惨重的大问题。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"能够影响数据安全的事件，都是极小概率的事件，比如说：数据库宕机、磁盘损坏甚至机房着火，还有最近频繁出现在段子中「程序员不满老板删库跑路」的梗儿，但这些事儿一旦发生了，我们的业务就会损失惨重。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"一般来说，存储系统导致的比较严重的损失主要有两种情况：\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"数据丢失造成的直接财产损失，比如大量的坏账；\")]),_vm._v(\" \"),_c('li',[_vm._v(\"由于存储系统损坏，造成整个业务系统停止服务而带来的损失。\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"所谓防患于未然，你从设计一个系统的第一天起，就需要考虑在出现各种问题的时候，如何来保证这个系统的数据安全性。今天我们来聊一聊，如何提前预防，将「删库跑路」等这类问题导致的损失尽量降到最低。\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"如何更安全地做数据备份和恢复\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#如何更安全地做数据备份和恢复\"}},[_vm._v(\"#\")]),_vm._v(\" 如何更安全地做数据备份和恢复？\")]),_vm._v(\" \"),_c('p',[_vm._v(\"保证数据安全，\"),_c('strong',[_vm._v(\"最简单而且有效的手段就是定期备份数据\")]),_vm._v(\"，这样出现任何问题导致的数据损失，都可以通过备份来恢复数据。但是，\"),_c('strong',[_vm._v(\"如何备份，才能最大程度地保证数据安全\")]),_vm._v(\"，并不是一个简单的事儿。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"2018 年还出现过某个著名的云服务商因为硬盘损坏，导致多个客户数据全部丢失的重大故障。这么大的云服务商，数据是不可能没有备份的，按说硬盘损坏，不会导致数据丢失的，但是因为各种各样的原因，最终的结果是数据的三个副本都被删除，数据丢失无法找回。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"所以说，不是简单地定期把数据备份一下就可以高枕无忧了。接下来我们还是以大家最常用的 MySQL 为例来说一下，如何更安全地来做数据备份和恢复。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"最简单的备份方式就是全量备份。备份的时候，把所有的数据复制一份，存放到文件中，恢复的时候再把文件中的数据复制回去，这样可以保证恢复之后数据库中的数据和备份时是完全一样的。在 MySQL 中，你可以使用\"),_c('a',{attrs:{\"href\":\"https://dev.mysql.com/doc/refman/8.0/en/mysqldump.html\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"mysqldump\"),_c('OutboundLink')],1),_vm._v(\" 命令来执行全量备份。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"比如我们要全量备份数据库 test：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token variable\"}},[_vm._v(\"$mysqldump\")]),_vm._v(\" -uroot -p \"),_c('span',{pre:true,attrs:{\"class\":\"token builtin class-name\"}},[_vm._v(\"test\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\">\")]),_vm._v(\" test.sql\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('p',[_vm._v(\"备份出来的文件就是一个 SQL 文件，就是创建数据库、表，写入数据等等这些 SQL，如果要恢复数据，直接执行这个备份的 SQL 文件就可以了：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token variable\"}},[_vm._v(\"$mysql\")]),_vm._v(\" -uroot \"),_c('span',{pre:true,attrs:{\"class\":\"token builtin class-name\"}},[_vm._v(\"test\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"<\")]),_vm._v(\" test.sql\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('p',[_vm._v(\"不过，\"),_c('strong',[_vm._v(\"全量备份的代价非常高\")]),_vm._v(\"，为什么这么说呢？\")]),_vm._v(\" \"),_c('p',[_vm._v(\"首先，备份文件包含数据库中的所有数据，占用的磁盘空间非常大；其次，每次备份操作都要拷贝大量数据，备份过程中会占用数据库服务器大量的 CPU、磁盘 IO 资源，并且为了保证数据一致性，还有可能会锁表，这些都会导致备份期间，数据库本身的性能严重下降。\"),_c('strong',[_vm._v(\"所以，我们不能经常对数据库执行全量备份\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"一般来说，每天执行一次全量备份已经是非常频繁了。那这就意味着，如果数据库中的数据丢了，那只能恢复到最近一次全量备份的那个时间点，这个时间点之后的数据还是丢了。也就是说，\"),_c('strong',[_vm._v(\"全量备份不能做到完全无损地恢复\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"既然全量备份代价太高，不能频繁执行，那有没有代价低一点儿的备份方法，能让我们少丢甚至不丢数据呢？还真有，那就是 \"),_c('strong',[_vm._v(\"增量备份\")]),_vm._v(\"。相比于全量备份，增量备份每次只备份相对于上一次备份变化的那部分数据，所以每次增量备份速度更快。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"MySQL 自带了 Binlog，就是一种实时的增量备份。Binlog 里面记录的就是 MySQL 数据的变更的操作日志，开启 Binlog 之后，我们 \"),_c('strong',[_vm._v(\"对 MySQL 中的每次更新数据操作，都会被记录到 Binlog 中\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Binlog 是可以回放的，回放 Binlog，就相当于把之前对数据库所有数据更新操作按照顺序重新执行了一遍，回放完成之后数据自然就恢复了。这就是 Binlog 增量备份的基本原理。很多数据库都有类似于 MySQL Binlog 的日志，原理和 Binlog 是一样的，备份和恢复方法也是类似的。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"下面通过一个例子看一下如何使用 Binlog 进行备份和恢复。首先使用 \"),_c('code',[_vm._v(\"show variables like '%log_bin%'\")]),_vm._v(\" 命令确认一下是否开启了 Binlog 功能：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"\\nmysql\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\">\")]),_vm._v(\" show variables like \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'%log_bin%'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n+---------------------------------+-----------------------------------+\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\" Variable_name                   \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\" Value                             \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\"\\n+---------------------------------+-----------------------------------+\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\" log_bin                         \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\" ON                                \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\" log_bin_basename                \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\" /usr/local/var/mysql/binlog       \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\"\\n+---------------------------------+-----------------------------------+\\nmysql\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\">\")]),_vm._v(\" show master status\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n+---------------+----------+--------------+------------------+-------------------+\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\" File          \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\" Position \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\" Binlog_Do_DB \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\" Binlog_Ignore_DB \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\" Executed_Gtid_Set \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\"\\n+---------------+----------+--------------+------------------+-------------------+\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\" binlog.000001 \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\"    \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"18745\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\"              \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\"                  \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\"                   \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\"\\n+---------------+----------+--------------+------------------+-------------------+\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"8\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"9\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"10\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"11\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"12\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"13\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"14\")]),_c('br')])]),_c('p',[_vm._v(\"可以看到当前这个数据库已经开启了 Binlog，log_bin_basename 表示 Binlog 文件在服务器磁盘上的具体位置。然后用 \"),_c('code',[_vm._v(\"show master status\")]),_vm._v(\" 命令可查看当前 Binlog 的状态，显示正在写入的 Binlog 文件，及当前的位置。假设我们每天凌晨用 mysqldump 做一个全量备份，然后开启了 Binlog，有了这些，我们就可以把数据恢复到全量备份之后的任何一个时刻。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"下面我们做一个简单的备份恢复演示。我们先模拟一次「删库跑路」的场景，直接把账户余额表清空：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"mysql\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\">\")]),_vm._v(\" truncate table account_balance\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\nQuery OK, \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_vm._v(\" rows affected \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0.02\")]),_vm._v(\" sec\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\nmysql\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\">\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"select\")]),_vm._v(\" * from  account_balance\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\nEmpty \"),_c('span',{pre:true,attrs:{\"class\":\"token builtin class-name\"}},[_vm._v(\"set\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0.00\")]),_vm._v(\" sec\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br')])]),_c('p',[_vm._v(\"然后我们来进行数据恢复，首先执行一次全量恢复，把数据库恢复到今天凌晨的状态。\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token variable\"}},[_vm._v(\"$mysql\")]),_vm._v(\" -uroot \"),_c('span',{pre:true,attrs:{\"class\":\"token builtin class-name\"}},[_vm._v(\"test\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"<\")]),_vm._v(\" dump.sql\\nmysql\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\">\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"select\")]),_vm._v(\" * from  account_balance\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n+---------+---------+---------------------+--------+\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\" user_id \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\" balance \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\" timestamp           \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\" log_id \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\"\\n+---------+---------+---------------------+--------+\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\"       \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\"     \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"100\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2020\")]),_vm._v(\"-02-13 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"20\")]),_vm._v(\":24:33 \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\"      \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"3\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\"\\n+---------+---------+---------------------+--------+\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br')])]),_c('p',[_vm._v(\"可以看到，表里面的数据已经恢复了，但还是比较旧的数据。然后我们再用 Binlog 把数据恢复到删库跑路之前的那个时刻：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token variable\"}},[_vm._v(\"$mysqlbinlog\")]),_vm._v(\" --start-datetime \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"2020-02-20 00:00:00\\\"\")]),_vm._v(\" --stop-datetime \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"2020-02-20 15:09:00\\\"\")]),_vm._v(\" /usr/local/var/mysql/binlog.000001 \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\" mysql -uroot\\nmysql\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\">\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"select\")]),_vm._v(\" * from  account_balance\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n+---------+---------+---------------------+--------+\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\" user_id \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\" balance \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\" timestamp           \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\" log_id \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\"\\n+---------+---------+---------------------+--------+\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\"       \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\"     \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"200\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2020\")]),_vm._v(\"-02-20 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"15\")]),_vm._v(\":08:12 \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\"      \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\"\\n+---------+---------+---------------------+--------+\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br')])]),_c('p',[_vm._v(\"这时候，数据已经恢复到当天的 15 点了。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"通过定期的全量备份，配合 Binlog，我们就可以把数据恢复到任意一个时间点，再也不怕程序员删库跑路了。详细的命令你可以参考 \"),_c('a',{attrs:{\"href\":\"https://dev.mysql.com/doc/refman/8.0/en/backup-and-recovery.html\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"MySQL 的官方文档中「备份和恢复」\"),_c('OutboundLink')],1),_vm._v(\" 这一章。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在执行备份和恢复的时候，有几个要点你需要特别的注意。\")]),_vm._v(\" \"),_c('ol',[_c('li',[_c('p',[_c('strong',[_vm._v(\"不要把所有的鸡蛋放在同一个篮子中\")])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"无论是全量备份还是 Binlog，都不要和数据库存放在同一个服务器上\")]),_vm._v(\"。最好能做到不同机房，甚至不同城市，离得越远越好。这样即使出现机房着火、光缆被挖断甚至地震也不怕。\")])]),_vm._v(\" \"),_c('li',[_c('p',[_c('strong',[_vm._v(\"在回放 Binlog 的时候，指定的起始时间可以比全量备份的时间稍微提前一点儿\")])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"确保全量备份之后的所有操作都在恢复的 Binlog 范围内，这样可以保证恢复的数据的完整性\")])])])]),_vm._v(\" \"),_c('p',[_vm._v(\"因为回放 Binlog 的操作是具备幂等性的（为了确保回放幂等，需要设置 Binlog 的格式为 ROW 格式)，关于幂等性，我们在《\"),_c('RouterLink',{attrs:{\"to\":\"/back-end-storage/01/01.html\"}},[_vm._v(\"创建和更新订单时，如何保证数据准确无误？\")]),_vm._v(\"》这节课中讲到过，多次操作和一次操作对系统的影响是一样的，所以重复回放的那部分 Binlog 并不会影响数据的准确性。\")],1),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"配置-mysql-ha-实现高可用\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#配置-mysql-ha-实现高可用\"}},[_vm._v(\"#\")]),_vm._v(\" 配置 MySQL HA 实现高可用\")]),_vm._v(\" \"),_c('p',[_vm._v(\"通过全量备份加上 Binlog，我们可以将数据库恢复到任何一个时间点，这样至少不会丢数据了。如果说，数据库服务器宕机了，因为我们有备份数据，完全可以启动一个新的数据库服务器，把备份数据恢复到新的数据库上，这样新的数据库就可以替代宕机的数据库，继续提供服务。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"但是，这个恢复数据的时间是很长的，如果数据量比较大的话，有可能需要恢复几个小时。这几个小时，我们的系统是一直不可用的，这样肯定不行。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"这个问题怎么解决？很简单，你不要等着数据库宕机了，才开始做恢复，我们完全可以提前来做恢复这些事儿。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"我们 \"),_c('strong',[_vm._v(\"准备一台备用的数据库\")]),_vm._v(\"，把它的数据恢复成主库一样，然后 \"),_c('strong',[_vm._v(\"实时地在主备数据库之间来同步 Binlog\")]),_vm._v(\"，主库做了一次数据变更，生成一条 Binlog，我们就把这一条 Binlog 复制到备用库并立即回放，这样就可以让备用库里面的数据和主库中的数据一直保持是一样的。一旦主库宕机，就可以立即切换到备用库上继续提供服务。这就是 MySQL 的高可用方案，也叫 MySQL HA。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"MySQL 自身就提供了主从复制的功能，通过配置就可以让一主一备两台 MySQL 的数据库保持数据同步，具体的配置方法你可以参考 \"),_c('a',{attrs:{\"href\":\"https://dev.mysql.com/doc/refman/8.0/en/replication.html\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"MySQ 官方文档中「复制」\"),_c('OutboundLink')],1),_vm._v(\" 这一章。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"接下来我们说这个方案的问题。当我们对主库执行一次更新操作的时候，主从两个数据库更新数据实际的时序是这样的：\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"在主库的磁盘上写入 Binlog；\")]),_vm._v(\" \"),_c('li',[_vm._v(\"主库更新存储引擎中的数据；\")]),_vm._v(\" \"),_c('li',[_vm._v(\"给客户端返回成功响应；\")]),_vm._v(\" \"),_c('li',[_vm._v(\"主库把 Binlog 复制到从库；\")]),_vm._v(\" \"),_c('li',[_vm._v(\"从库回放 Binlog，更新存储引擎中的数据。\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"也就是说，\"),_c('strong',[_vm._v(\"从库的数据是有可能比主库上的数据旧一些的\")]),_vm._v(\"，这个主从之间复制数据的延迟，称为「\"),_c('strong',[_vm._v(\"主从延迟\")]),_vm._v(\"」。正常情况下，主从延迟基本都是毫秒级别，你可以认为主从就是实时保持同步的。麻烦的是不正常的情况，一旦主库或者从库繁忙的时候，有可能会出现明显的主从延迟。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"而很多情况下，数据库都不是突然宕机的，而是先繁忙，性能下降，最终宕机。这种情况下，很有可能主从延迟很大，如果我们把业务直接切到从库上继续读写，主从延迟这部分数据就丢了，并且这个数据丢失是不可逆的。即使事后你找回了当时主库的 Binlog 也是没法做到自动恢复的，因为它和从库的数据是冲突的。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"简单地说，如果主库宕机并且主从存在延迟的情况下，切换到从库继续读写，可以保证业务的可用性，但是主从延迟这部分数据就丢失了。\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"这个时候你就需要做一个选择题了：\")])]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"第一个选项是，保证不丢数据，牺牲可用性，暂时停止服务，想办法把主库的 Binlog 恢复到从库上之后再提供服务。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"第二个选项就是，冒着丢一些数据的风险，保证可用性，第一时间切换到从库继续提供服务。\")])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"那能不能既保证数据不丢，还能做到高可用\")]),_vm._v(\" 呢？也是可以的，那你 \"),_c('strong',[_vm._v(\"就要牺牲一些性能\")]),_vm._v(\"。MySQL 也支持 \"),_c('a',{attrs:{\"href\":\"https://dev.mysql.com/doc/refman/8.0/en/replication-semisync.html\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"同步复制\"),_c('OutboundLink')],1),_vm._v(\"，开启同步复制时，\"),_c('strong',[_vm._v(\"MySQL 主库会等待数据成功复制到从库之后，再给客户端返回响应\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"如果说，牺牲的这点儿性能我不在乎，这个方案是不是就完美了呢？也不是，新的问题又来了！你想一下，这种情况下从库宕机了怎么办？本来从库宕机对主库是完全没影响的，因为现在主库要等待从库写入成功再返回，从库宕机，主库就会一直等待从库，主库也卡死了。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"这个问题也有解决办法，那就是再加一个从库，\"),_c('strong',[_vm._v(\"把主库配置成：成功复制到任意一个从库就返回，只要有一个从库还活着，就不会影响主库写入数据，这样就解决了从库宕机阻塞主库的问题\")]),_vm._v(\"。如果主库发生宕机，在两个从库中，至少有一个从库中的数据是和主库完全一样的，可以把这个库作为新的主库，继续提供服务。为此你需要付出的代价是，你要至少用三台数据库服务器，并且这三台服务器提供的服务性能，还不如一台服务器高。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"我把上面这三种典型的 HA 方案总结成下面这个表格，便于你对比选择：\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/04ff6bce8f5b607950fc469a606433ac.jpg\"),\"alt\":\"img\"}})]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"小结\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#小结\"}},[_vm._v(\"#\")]),_vm._v(\" 小结\")]),_vm._v(\" \"),_c('p',[_vm._v(\"今天这节课讲了两件事儿，一是 \"),_c('strong',[_vm._v(\"如何备份和恢复数据库中的数据\")]),_vm._v(\"，\"),_c('strong',[_vm._v(\"确保数据安全\")]),_vm._v(\"；二是 \"),_c('strong',[_vm._v(\"如何来实现数据库的高可用，避免宕机停服\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"虽然这是两个不同的问题，但你要知道，解决这两个问题背后的实现原理是一样的。高可用依赖的是数据复制，数据复制的本质就是从一个库备份数据，然后恢复到另外一个库中去。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"数据备份时，使用低频度的全量备份配合 Binlog 增量备份是一种常用而且非常实用的方法，使用这种备份方法，我们可以把数据库的数据精确地恢复到历史上任意一个时刻，不仅能解决数据损坏的问题，也不用怕误操作、删库跑路这些事儿了。特别要注意的是，让备份数据尽量地远离数据库。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"我们今天讲到的几种 MySQL 典型的 HA 方案，在数据可靠性、数据库可用性、性能和成本几个方面，各有利弊，你需要根据业务情况，做一个最优的选择，并且为可能存在的风险做好准备。\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"思考题\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#思考题\"}},[_vm._v(\"#\")]),_vm._v(\" 思考题\")]),_vm._v(\" \"),_c('p',[_vm._v(\"你现在负责系统的数据库是如何来实现高可用的，有什么风险和问题，学习了这节课之后，你会如何来改进这个高可用方案？\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"额外知识点\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#额外知识点\"}},[_vm._v(\"#\")]),_vm._v(\" 额外知识点\")]),_vm._v(\" \"),_c('ol',[_c('li',[_c('p',[_vm._v(\"比较好的监控 mysql 性能还有主从延迟之类的工具\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"如果只是看一下，可以连接到主库上用 \"),_c('code',[_vm._v(\"show slave status\")]),_vm._v(\" 命令查看，\")]),_vm._v(\" \"),_c('li',[_vm._v(\"如果你需要实时监控主从延迟，可以用 \"),_c('code',[_vm._v(\"pt-heartbeat\")]),_vm._v(\" 这个工具。\")])])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"同步复制性能差，哪到底差到一个什么样的程度呢？\")]),_vm._v(\" \"),_c('p',[_vm._v(\"同步复制时延 = 异步复制的时延 + 最慢的那个从库的复制时延\")]),_vm._v(\" \"),_c('p',[_vm._v(\"理论上同步复制的时延大概是异步复制的 2-3 倍左右。\")])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"sourceRoot":""}