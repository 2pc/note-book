{"version":3,"sources":["webpack:///./docs/cache-pdp/dr/128.md","webpack:///./docs/cache-pdp/dr/128.md?c5a3","webpack:///./docs/cache-pdp/dr/assets/markdown-img-paste-20190712230951795.png","webpack:///./docs/cache-pdp/dr/128.md?0350"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAiF;AACjF;;;AAGA;AAC6F;AAC7F,gBAAgB,2GAAU;AAC1B;AACA,EAAE,6EAAM;AACR,EAAE,sFAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,gF;;;;;;;;;;;;ACjBf;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACAA,iBAAiB,qBAAuB,kE;;;;;;;;;;;;ACAxC;AAAA;AAAA;AAAA,0BAA0B,aAAa,0BAA0B,wBAAwB,qCAAqC,OAAO,gCAAgC,WAAW,OAAO,4CAA4C,UAAU,mCAAmC,+CAA+C,gKAAgK,OAAO,aAAa,UAAU,mCAAmC,gBAAgB,wxBAAwxB,OAAO,qBAAqB,UAAU,mCAAmC,wBAAwB,g9BAAg9B,OAAO,MAAM,mBAAO,CAAC,8HAAmD,YAAY;AAC78E","file":"assets/js/169.b85f3178.js","sourcesContent":["import { render, staticRenderFns } from \"./128.md?vue&type=template&id=593812a0&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/@vuepress/core/node_modules/.cache/vuepress\\\",\\\"cacheIdentifier\\\":\\\"2e9acca5-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??ref--1-1!../../../node_modules/@vuepress/markdown-loader/index.js??ref--1-2!./128.md?vue&type=template&id=593812a0&\"","module.exports = __webpack_public_path__ + \"assets/img/markdown-img-paste-20190712230951795.e29f442d.png\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{\"slot-key\":_vm.$parent.slotKey}},[_c('h1',{attrs:{\"id\":\"_128-商品详情页动态渲染系统-大型网站的多机房-4级-缓存架构设计\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#_128-商品详情页动态渲染系统-大型网站的多机房-4级-缓存架构设计\"}},[_vm._v(\"#\")]),_vm._v(\" 128. 商品详情页动态渲染系统：大型网站的多机房 4级 缓存架构设计\")]),_vm._v(\" \"),_c('p',[_vm._v(\"多机房缓存，主从缓存集群通过同步，各个机房读取自己机房的从集群，防止跨集群访问集群\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"本地缓存\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#本地缓存\"}},[_vm._v(\"#\")]),_vm._v(\" 本地缓存\")]),_vm._v(\" \"),_c('p',[_vm._v(\"使用 nginx shared dict 作为 local cache，http-lua-module 的 shared dict 可以作为缓存，\\n\"),_c('strong',[_vm._v(\"而且 reload nginx 不会丢失\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"也可以使用 nginx proxy cache 做 local cache\")]),_vm._v(\" \"),_c('p',[_vm._v(\"双层 nginx 部署，一层接入，一层应用，接入层用 hash 路由策略提升缓存命中率，比如\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"库存缓存数据的 TP99 为 5s，本地缓存命中率 25%，redis 命中率 28%，回源命中率 47% （回源就是数据直连服务 + 主集群）\")]),_vm._v(\" \"),_c('li',[_vm._v(\"一次普通秒杀活动的命中率，本地缓存 55%，分布式 redis 命中率 15%，回源命中率 27%\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"使用 hash 路由策略，最高可以提升命中率达到 10%；（分发层把同一个商品 ID 分发到同一个应用层 nginx 上）\")]),_vm._v(\" \"),_c('p',[_vm._v(\"全缓存链路维度化存储，如果有 3个 维度的数据，只有其中 1个 过期了，那么只要获取那 1个 过期的数据即可，\\nnginx local cache 的过期时间一般设置为 30min，到后端的流量会减少至少 3 倍\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"_4-级缓存的作用是什么\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#_4-级缓存的作用是什么\"}},[_vm._v(\"#\")]),_vm._v(\" 4 级缓存的作用是什么？\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('p',[_vm._v(\"nginx 本地缓存：抗热点数据，小内存缓存访问最频繁的数据\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"各个机房的 redis 集群：\")]),_vm._v(\" \"),_c('p',[_vm._v(\"抗大量离散数据，采用一致性 hash 策略构建分布式 redis 缓存集群\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"tomcat 中的动态服务本地 jvm 堆缓存\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"支持在一个请求中多次读取一个数据，或者与该数据相关的数据\")]),_vm._v(\" \"),_c('li',[_vm._v(\"作为 redis 崩溃的备用防线\")]),_vm._v(\" \"),_c('li',[_vm._v(\"固定缓存一些访问频繁更改较少的数据，比如分类、品牌等数据\")]),_vm._v(\" \"),_c('li',[_vm._v(\"对缓存过期时间为 redis 过期时间的一半\")])])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"主 redis 集群\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"命中率非常低，小于 5%； （为什么?应该是跟过期时间有关系把？前 2级 缓存都没有到这里一般也不会有？）\")]),_vm._v(\" \"),_c('li',[_vm._v(\"防止主从同步延迟导致的数据读取 miss；从集群还未同步到，会通过数据直连服务请求主集群\")]),_vm._v(\" \"),_c('li',[_vm._v(\"防止各个机房的从 redis 集群崩溃之后，全量走依赖服务会导致雪崩，主 redis 集群是后背防线\")])])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"主 redis 集群：采取多机房一主三从的高可用部署架构\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/markdown-img-paste-20190712230951795.png\"),\"alt\":\"\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"如上图：redis 集群部署采取双机房一主三活的架构：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"机房 A ：部署主集群 + 一个从集群，\")]),_vm._v(\" \"),_c('li',[_vm._v(\"机房 B ：部署一个从集群（从机房 A 主集群）+ 一个从集群（从机房 B 从集群）\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"双机房一主三活的架构，保证了机房 A 彻底故障的时候，机房 B 还有一套备用的集群，可以升级为一主一从\")]),_vm._v(\" \"),_c('p',[_vm._v(\"如果采取机房 A 部署一主一从，机房 B 一从，那么机房 A 故障时，机房 B 的一从承载所有读写压力，压力过大，很难承受\")])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"sourceRoot":""}