{"version":3,"sources":["webpack:///./docs/cache-pdp/storm/064.md","webpack:///./docs/cache-pdp/storm/064.md?5c5d","webpack:///./docs/cache-pdp/storm/assets/markdown-img-paste-20190519112250644.png","webpack:///./docs/cache-pdp/storm/064.md?6756"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAiF;AACjF;;;AAGA;AAC6F;AAC7F,gBAAgB,2GAAU;AAC1B;AACA,EAAE,6EAAM;AACR,EAAE,sFAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,gF;;;;;;;;;;;;ACjBf;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACAA,iBAAiB,qBAAuB,kE;;;;;;;;;;;;ACAxC;AAAA;AAAA;AAAA,0BAA0B,aAAa,0BAA0B,wBAAwB,qCAAqC,OAAO,gCAAgC,WAAW,OAAO,yBAAyB,UAAU,mCAAmC,4BAA4B,kpCAAkpC,OAAO,MAAM,mBAAO,CAAC,iIAAmD,YAAY,01BAA01B,kDAAkD;AAC34E","file":"assets/js/198.1fc260ec.js","sourcesContent":["import { render, staticRenderFns } from \"./064.md?vue&type=template&id=b9fef5ec&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/@vuepress/core/node_modules/.cache/vuepress\\\",\\\"cacheIdentifier\\\":\\\"2e9acca5-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??ref--1-1!../../../node_modules/@vuepress/markdown-loader/index.js??ref--1-2!./064.md?vue&type=template&id=b9fef5ec&\"","module.exports = __webpack_public_path__ + \"assets/img/markdown-img-paste-20190519112250644.fffa8c71.png\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{\"slot-key\":_vm.$parent.slotKey}},[_c('h1',{attrs:{\"id\":\"_064-大白话讲并行度和流分组\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#_064-大白话讲并行度和流分组\"}},[_vm._v(\"#\")]),_vm._v(\" 064. 大白话讲并行度和流分组\")]),_vm._v(\" \"),_c('p',[_vm._v(\"对于 java 工程师来说，先不说精通 storm ，本教程希望达到的一个效果如下：\")]),_vm._v(\" \"),_c('ol',[_c('li',[_c('p',[_vm._v(\"对 storm 的核心的基本原理要清楚：集群架构、核心概念、并行度和流分组\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"掌握最常见的 storm 开发范式\")]),_vm._v(\" \"),_c('p',[_vm._v(\"spout 消费 kafka，后面跟一堆 bolt，bolt 之间设定好流分组的策略，\\nbolt 中填充各种代码逻辑\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"了解如何将 storm 拓扑打包后提交到 storm 集群上去运行\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"掌握如何能够通过 storm ui 去查看你的实时计算拓扑的运行现状\")])])]),_vm._v(\" \"),_c('p',[_vm._v(\"如果你所在公司有大数据团队并且维护了一个 storm 集群，那么掌握如何开发和部署即可，\\n如果没有，那么你就需要去深入学习下 storm 了。如果你的场景不是特别复杂，\\n整个数据量也不是特别大，其实自己主要研究一下，怎么部署 storm 集群也可以，本教程也会讲解\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Storm 的并行度以及流分组是重要的一个概念，但是没有几个人能说的清楚。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"好多年前，我第一次接触 storm 的时候，真的我觉得都没几个人能彻底讲清楚，用一句话讲清楚什么是并行度，什么是流分组，\\n很多时候，你以外你明白了，其实你不明白，比如我经常面试一些做过 storm 的人过来，我就问一个问题，\\n就知道它的水深水浅，流分组的时候，数据在 storm 集群中的流向，你画一下，比如你自己随便设想一个拓扑结果出来，\\n几个 spout，几个 bolt，各种流分组情况下，数据是怎么流向的，要求具体画出集群架构中的流向，\\nworker，executor，task，supervisor，数据是怎么流转的；几乎没几个人能画对，为什么呢，\\n很多人就没搞明白这个并行度和流分组到底是什么\")]),_vm._v(\" \"),_c('p',[_vm._v(\"那么这里一句话总结：\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/markdown-img-paste-20190519112250644.png\"),\"alt\":\"\"}})]),_vm._v(\" \"),_c('ul',[_c('li',[_c('p',[_c('strong',[_vm._v(\"并行度：Worker->Executor->Task，没错，是 Task\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"默认情况下，一个 Executor 对应一个 Task\")]),_vm._v(\" \"),_c('p',[_vm._v(\"简单说就是 task 越多，并行度越高\")])]),_vm._v(\" \"),_c('li',[_c('p',[_c('strong',[_vm._v(\"流分组：Task 与 Task 之间的数据流向关系\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"一个拓扑中，可以有很多 Spout + Bolt，那么 bolt1 的数据流向 bolt2 的时候的一个策略\\n就是流分组\")]),_vm._v(\" \"),_c('p',[_vm._v(\"流分组策略：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('p',[_vm._v(\"Shuffle Grouping：随机发射，负载均衡\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"Fields Grouping：根据一个或多个字段进行分组\")]),_vm._v(\" \"),_c('p',[_vm._v(\"那一个或者多个 fields 如果值完全相同的话，那么这些 tuple，就会发送给下游 bolt 的其中固定的一个 task\")]),_vm._v(\" \"),_c('p',[_vm._v(\"你发射的每条数据是一个 tuple，每个 tuple 中有多个 field 作为字段\")]),_vm._v(\" \"),_c('p',[_vm._v(\"比如 tuple 3 个字段，name，age，salary\")]),_vm._v(\" \"),_c('p',[_c('code',[_vm._v(\"{\\\"name\\\": \\\"tom\\\", \\\"age\\\": 25, \\\"salary\\\": 10000}\")]),_vm._v(\" -> tuple -> 3个 field，name，age，salary\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"All Grouping：广播分发\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"Global Grouping：选择其中一个 task 最小的 id 分发\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"None Grouping：与 shuffle 类似\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"Direct Grouping：指定一个 task id 发送\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"Local or Shuffle Grouping： 只在本地同一个进程（worker）中国随机分发\")])])]),_vm._v(\" \"),_c('p',[_vm._v(\"最常用的是前两种\")])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"sourceRoot":""}