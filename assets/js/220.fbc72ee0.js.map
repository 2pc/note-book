{"version":3,"sources":["webpack:///./docs/git-scm/08/01.md","webpack:///./docs/git-scm/08/01.md?8860","webpack:///./docs/git-scm/08/assets/c8e2b459f94c0ed96506b877771b96da.png","webpack:///./docs/git-scm/08/01.md?a678"],"names":[],"mappings":"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","file":"assets/js/220.fbc72ee0.js","sourcesContent":["import { render, staticRenderFns } from \"./01.md?vue&type=template&id=4bdd4634&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/@vuepress/core/node_modules/.cache/vuepress\\\",\\\"cacheIdentifier\\\":\\\"2e9acca5-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??ref--1-1!../../../node_modules/@vuepress/markdown-loader/index.js??ref--1-2!./01.md?vue&type=template&id=4bdd4634&\"","module.exports = __webpack_public_path__ + \"assets/img/c8e2b459f94c0ed96506b877771b96da.db6fac31.png\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{\"slot-key\":_vm.$parent.slotKey}},[_c('h1',{attrs:{\"id\":\"配置-git\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#配置-git\"}},[_vm._v(\"#\")]),_vm._v(\" 配置 Git\")]),_vm._v(\" \"),_c('p',[_vm._v(\"你在 \"),_c('RouterLink',{attrs:{\"to\":\"/git-scm/01/\"}},[_vm._v(\"起步\")]),_vm._v(\" 中看到，可以用  \"),_c('code',[_vm._v(\"git config\")]),_vm._v(\"  配置 Git。 \"),_c('strong',[_vm._v(\"首先要做的事情就是设置你的名字和邮件地址\")]),_vm._v(\"：\")],1),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" config --global user.name \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"John Doe\\\"\")]),_vm._v(\"\\n$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" config --global user.email johndoe@example.com\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br')])]),_c('p',[_vm._v(\"现在，你会了解到许多更有趣的选项，并用类似的方式来定制 Git。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"首先，快速回忆下：\"),_c('strong',[_vm._v(\"Git 使用一系列配置文件来保存你自定义的行为\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('ol',[_c('li',[_c('p',[_vm._v(\"系统：\"),_c('code',[_vm._v(\"/etc/gitconfig\")]),_vm._v(\" 会被首先查找\")]),_vm._v(\" \"),_c('p',[_vm._v(\"该文件含有系统里每位用户及他们所拥有的仓库的配置值。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"如果你传递  \"),_c('code',[_vm._v(\"–system\")]),_vm._v(\"  选项给  \"),_c('code',[_vm._v(\"git config\")]),_vm._v(\"，它就会读写该文件。\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"全局：\"),_c('code',[_vm._v(\"~/.gitconfig\")]),_vm._v(\" 文件（或者  \"),_c('code',[_vm._v(\"~/.config/git/config\")]),_vm._v(\" 文件），该文件属于每个用户\")]),_vm._v(\" \"),_c('p',[_vm._v(\"你可以传递 \"),_c('code',[_vm._v(\"–global\")]),_vm._v(\"  选项让 Git 读写该文件。\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"本地：你正在操作的版本库所对应的 Git 目录下的配置文件（ \"),_c('code',[_vm._v(\".git/config\")]),_vm._v(\"）\")]),_vm._v(\" \"),_c('p',[_vm._v(\"这个文件中的值只对该版本库有效。\")])])]),_vm._v(\" \"),_c('p',[_vm._v(\"以上三个层次中每层的配置（系统、全局、本地）都会覆盖掉上一层次的配置，所以 \"),_c('code',[_vm._v(\".git/config\")]),_vm._v(\"  中的值会覆盖掉 \"),_c('code',[_vm._v(\"/etc/gitconfig\")]),_vm._v(\"  中所对应的值。\")]),_vm._v(\" \"),_c('div',{staticClass:\"custom-block tip\"},[_c('p',{staticClass:\"custom-block-title\"},[_vm._v(\"TIP\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Git 的配置文件是纯文本的，所以你可以直接手动编辑这些配置文件，输入合乎语法的值。 但是运行 \"),_c('code',[_vm._v(\"git config\")]),_vm._v(\" 命令会更简单些。\")])]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"客户端基本配置\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#客户端基本配置\"}},[_vm._v(\"#\")]),_vm._v(\" 客户端基本配置\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Git 能够识别的配置项分为两大类：\"),_c('strong',[_vm._v(\"客户端\")]),_vm._v(\" 和 \"),_c('strong',[_vm._v(\"服务器端\")]),_vm._v(\"。 其中大部分属于客户端配置 —— 可以依你个人的工作偏好进行配置。 尽管 Git 支持的选项 \"),_c('em',[_vm._v(\"繁多\")]),_vm._v(\"，但其中大部分仅仅在某些罕见的情况下有意义。 \"),_c('strong',[_vm._v(\"我们只讲述最平常和最有用的选项\")]),_vm._v(\"。 如果想得到你当前版本的 Git 支持的选项列表，请运行\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"$ man git-config\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('p',[_vm._v(\"这个命令列出了所有可用的选项，以及与之相关的介绍。 你也可以在 http://git-scm.com/docs/git-config.html 找到同样的内容。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"core-editor-文本编辑器\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#core-editor-文本编辑器\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('code',[_vm._v(\"core.editor\")]),_vm._v(\"  文本编辑器\")]),_vm._v(\" \"),_c('p',[_vm._v(\"默认情况下，Git 会调用环境变量（\"),_c('code',[_vm._v(\"$VISUAL\")]),_vm._v(\"  或 \"),_c('code',[_vm._v(\"$EDITOR\")]),_vm._v(\"）设置的任意文本编辑器，如果没有设置，会调用 vi 来创建和编辑你的提交以及标签信息。 你可以使用 \"),_c('code',[_vm._v(\"core.editor\")]),_vm._v(\" 选项来修改默认的编辑器：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" config --global core.editor emacs\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('p',[_vm._v(\"现在，无论你定义了什么终端编辑器，Git 都会调用 Emacs 编辑信息。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"commit-template-提交模板\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#commit-template-提交模板\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('code',[_vm._v(\"commit.template\")]),_vm._v(\" 提交模板\")]),_vm._v(\" \"),_c('p',[_vm._v(\"如果把此项指定为你的系统上某个文件的路径，当你提交的时候， Git 会使用该文件的内容作为提交的默认信息。 例如：假设你创建了一个叫 \"),_c('code',[_vm._v(\"~/.gitmessage.txt\")]),_vm._v(\" 的模板文件，类似这样：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"subject line\\n\\nwhat happened\\n\\n[ticket: X]\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br')])]),_c('p',[_vm._v(\"要想让 Git 把它作为运行 \"),_c('code',[_vm._v(\"git commit\")]),_vm._v(\"  时显示在你的编辑器中的默认信息， 如下设置 \"),_c('code',[_vm._v(\"commit.template\")]),_vm._v(\" ：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" config --global commit.template ~/.gitmessage.txt\\n$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" commit\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br')])]),_c('p',[_vm._v(\"然后当你提交时，编辑器中就会显示如下的提交信息占位符：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"subject line\\n\\nwhat happened\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_vm._v(\"ticket: X\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"# Please enter the commit message for your changes. Lines starting\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"# with '#' will be ignored, and an empty message aborts the commit.\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"# On branch master\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"# Changes to be committed:\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"#   (use \\\"git reset HEAD <file>...\\\" to unstage)\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"#\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"# modified:   lib/test.rb\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"#\")]),_vm._v(\"\\n~\\n~\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\".git/COMMIT_EDITMSG\\\"\")]),_vm._v(\" 14L, 297C\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"8\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"9\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"10\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"11\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"12\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"13\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"14\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"15\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"16\")]),_c('br')])]),_c('p',[_vm._v(\"如果你的团队对提交信息有格式要求，可以在系统上创建一个文件，并配置 Git 把它作为默认的模板，这样可以更加容易地使提交信息遵循格式。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"core-pager-分页器\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#core-pager-分页器\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('code',[_vm._v(\"core.pager\")]),_vm._v(\" 分页器\")]),_vm._v(\" \"),_c('p',[_vm._v(\"该配置项指定 Git 运行诸如 log 和 diff 等命令所使用的分页器。 你可以把它设置成用 \"),_c('code',[_vm._v(\"more\")]),_vm._v(\" 或者任何你喜欢的分页器（\"),_c('strong',[_vm._v(\"默认用的是 less\")]),_vm._v(\"），当然也可以设置成空字符串，关闭该选项：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" config --global core.pager \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"''\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('p',[_vm._v(\"这样不管命令的输出量多少，Git 都会在一页显示所有内容。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"user-signingkey-密匙-id\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#user-signingkey-密匙-id\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('code',[_vm._v(\"user.signingkey\")]),_vm._v(\" 密匙 ID\")]),_vm._v(\" \"),_c('p',[_vm._v(\"如果你要创建经签署的含附注的标签（正如 \"),_c('RouterLink',{attrs:{\"to\":\"/git-scm/07/04.html\"}},[_vm._v(\"签署工作\")]),_vm._v(\" 所述），那么把你的 GPG 签署密钥设置为配置项会更好。 如下设置你的密钥 ID：\")],1),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" config --global user.signingkey \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"<\")]),_vm._v(\"gpg-key-id\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\">\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('p',[_vm._v(\"现在，你每次运行 \"),_c('code',[_vm._v(\"git tag\")]),_vm._v(\"  命令时，即可直接签署标签，而无需定义密钥：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" tag -s \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"<\")]),_vm._v(\"tag-name\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\">\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('h3',{attrs:{\"id\":\"core-excludesfile-忽略文件\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#core-excludesfile-忽略文件\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('code',[_vm._v(\"core.excludesfile\")]),_vm._v(\" 忽略文件\")]),_vm._v(\" \"),_c('p',[_vm._v(\"正如 \"),_c('RouterLink',{attrs:{\"to\":\"/git-scm/02/02.html#忽略文件\"}},[_vm._v(\"忽略文件\")]),_vm._v(\" 所述，你可以在你的项目的  \"),_c('code',[_vm._v(\".gitignore\")]),_vm._v(\"  文件里面规定无需纳入 Git 管理的文件的模板，这样它们既不会出现在未跟踪列表，也不会在你运行  \"),_c('code',[_vm._v(\"git add\")]),_vm._v(\" 后被暂存。\")],1),_vm._v(\" \"),_c('p',[_vm._v(\"不过有些时候，你想要在你所有的版本库中忽略掉某一类文件。 如果你的操作系统是 \"),_c('code',[_vm._v(\"OS X\")]),_vm._v(\"，很可能就是指 \"),_c('code',[_vm._v(\".DS_Store\")]),_vm._v(\"。 如果你把 Emacs 或 Vim 作为首选的编辑器，你肯定知道以 \"),_c('code',[_vm._v(\"~\")]),_vm._v(\" 结尾的临时文件。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"这个配置允许你设置类似于全局生效的 \"),_c('code',[_vm._v(\".gitignore\")]),_vm._v(\"  文件。 如果你按照下面的内容创建一个 \"),_c('code',[_vm._v(\"~/.gitignore_global\")]),_vm._v(\" 文件：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"*~\\n.DS_Store\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br')])]),_c('p',[_vm._v(\"……然后运行 \"),_c('code',[_vm._v(\"git config –global core.excludesfile ~/.gitignore_global\")]),_vm._v(\" ，Git 将把那些文件永远地拒之门外。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"help-autocorrect-自动修正错误指令\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#help-autocorrect-自动修正错误指令\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('code',[_vm._v(\"help.autocorrect\")]),_vm._v(\" 自动修正错误指令\")]),_vm._v(\" \"),_c('p',[_vm._v(\"假如你打错了一条命令，会显示：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"$ git chekcout master\\ngit：'chekcout' 不是一个 git 命令。参见 'git --help'。\\n\\n您指的是这个么？\\n  checkout\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br')])]),_c('p',[_vm._v(\"Git 会尝试猜测你的意图，但是它不会越俎代庖。 如果你把 \"),_c('code',[_vm._v(\"help.autocorrect\")]),_vm._v(\"  设置成 1，那么只要有一个命令被模糊匹配到了，Git 会自动运行该命令。\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"$ git chekcout master\\n警告：您运行一个不存在的 Git 命令 'chekcout'。继续执行假定您要要运行的\\n是 'checkout'\\n在 0.1 秒钟后自动运行...\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br')])]),_c('p',[_vm._v(\"注意提示信息中的 「0.1 秒」。\"),_c('code',[_vm._v(\"help.autocorrect\")]),_vm._v(\"  接受一个代表十分之一秒的整数。 所以如果你把它设置为 50, Git 将在自动执行命令前给你 5 秒的时间改变主意。\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"git-中的着色\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#git-中的着色\"}},[_vm._v(\"#\")]),_vm._v(\" Git 中的着色\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Git 充分支持对终端内容着色，对你凭肉眼简单、快速分析命令输出有很大帮助。 你可以设置许多的相关选项来满足自己的偏好。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"color-ui\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#color-ui\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('code',[_vm._v(\"color.ui\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"Git 会自动着色大部分输出内容，但如果你不喜欢花花绿绿，也可以关掉。 要想关掉 Git 的终端颜色输出，试一下这个：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" config --global color.ui \"),_c('span',{pre:true,attrs:{\"class\":\"token boolean\"}},[_vm._v(\"false\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('p',[_vm._v(\"这个设置的默认值是 auto，它会着色直接输出到终端的内容；而当内容被重定向到一个管道或文件时，则忽略着色功能。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"你也可以设置成 \"),_c('code',[_vm._v(\"always\")]),_vm._v(\"，来忽略掉管道和终端的不同，即在任何情况下着色输出。 你很少会这么设置，在大多数场合下，如果你想在被重定向的输出中插入颜色码，可以传递  \"),_c('code',[_vm._v(\"–color\")]),_vm._v(\"  标志给 Git 命令来强制它这么做。 默认设置就已经能满足大多数情况下的需求了。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"color\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#color\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('code',[_vm._v(\"color.*\")])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"要想具体到哪些命令输出需要被着色以及怎样着色\")]),_vm._v(\"，你需要用到和具体命令有关的颜色配置选项。 它们都能被置为 true、false 或 always：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"color.branch\\ncolor.diff\\ncolor.interactive\\ncolor.status\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br')])]),_c('p',[_vm._v(\"另外，以上每个配置项都有子选项，它们可以被用来覆盖其父设置，以达到为输出的各个部分着色的目的。 例如，为了让 \"),_c('code',[_vm._v(\"diff\")]),_vm._v(\"  的输出信息以 \"),_c('strong',[_vm._v(\"蓝色前景\")]),_vm._v(\"、\"),_c('strong',[_vm._v(\"黑色背景\")]),_vm._v(\"和 \"),_c('strong',[_vm._v(\"粗体显示\")]),_vm._v(\"，你可以运行\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" config --global color.diff.meta \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"blue black bold\\\"\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('p',[_vm._v(\"你能设置的颜色有：\"),_c('code',[_vm._v(\"normal\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"black\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"red\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"green\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"yellow\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"blue\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"magenta\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"cyan\")]),_vm._v(\" 或 \"),_c('code',[_vm._v(\"white\")]),_vm._v(\"。 正如以上例子设置的粗体属性，想要设置字体属性的话，可以选择包括：\"),_c('code',[_vm._v(\"bold\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"dim\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"ul\")]),_vm._v(\"（下划线）、\"),_c('code',[_vm._v(\"blink\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"reverse\")]),_vm._v(\"（交换前景色和背景色）。\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"外部的合并与比较工具\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#外部的合并与比较工具\"}},[_vm._v(\"#\")]),_vm._v(\" 外部的合并与比较工具\")]),_vm._v(\" \"),_c('p',[_vm._v(\"虽然 Git 自己内置了一个 diff 实现，而且到目前为止我们一直在使用它，但你能够用一个外部的工具替代它。 除此以外，你还能设置一个图形化的工具来合并和解决冲突，从而不必自己手动解决。 这里我们以一个不错且免费的工具 —— \"),_c('strong',[_vm._v(\"Perforce 图形化合并工具（P4Merge）\")]),_vm._v(\" —— 来展示如何用一个外部的工具来合并和解决冲突。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"P4Merge 可以在所有主流平台上运行，所以安装上应该没有什么困难。 在这个例子中，我们使用的路径名可以直接应用在 Mac 和 Linux 上；在 Windows 上，\"),_c('code',[_vm._v(\"/usr/local/bin\")]),_vm._v(\" 需要被改为你的环境中可执行文件所在的目录路径。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"首先， 从 http://www.perforce.com/downloads/Perforce/ 下载 P4Merge。 接下来，你要 \"),_c('strong',[_vm._v(\"编写一个全局包装脚本来运行你的命令\")]),_vm._v(\"。 我们会使用 Mac 上的路径来指定该脚本的位置，在其他系统上，它将是 p4merge二进制文件所在的目录。 \"),_c('strong',[_vm._v(\"创建一个名为 extMerge 的脚本包装 merge 命令\")]),_vm._v(\"，让它把参数转发给 p4merge 二进制文件：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"cat\")]),_vm._v(\" /usr/local/bin/extMerge\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"#!/bin/sh\")]),_vm._v(\"\\n/Applications/p4merge.app/Contents/MacOS/p4merge \"),_c('span',{pre:true,attrs:{\"class\":\"token variable\"}},[_vm._v(\"$*\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br')])]),_c('p',[_vm._v(\"包装 diff 命令的脚本首先确保传递了七个参数过来，随后把其中两个转发给包装了 merge 的脚本。 默认情况下， Git 传递以下参数给 diff：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"path old-file old-hex old-mode new-file new-hex new-mode\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('p',[_vm._v(\"由于你仅仅需要 old-file 和 new-file 参数，由包装 diff 的脚本来转发它们吧。\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"cat\")]),_vm._v(\" /usr/local/bin/extDiff\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"#!/bin/sh\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token variable\"}},[_vm._v(\"$#\")]),_vm._v(\" -eq \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"7\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"&&\")]),_vm._v(\" /usr/local/bin/extMerge \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"\"),_c('span',{pre:true,attrs:{\"class\":\"token variable\"}},[_vm._v(\"$2\")]),_vm._v(\"\\\"\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"\"),_c('span',{pre:true,attrs:{\"class\":\"token variable\"}},[_vm._v(\"$5\")]),_vm._v(\"\\\"\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br')])]),_c('p',[_vm._v(\"你也需要确保这些脚本具有可执行权限：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"sudo\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"chmod\")]),_vm._v(\" +x /usr/local/bin/extMerge\\n$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"sudo\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"chmod\")]),_vm._v(\" +x /usr/local/bin/extDiff\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br')])]),_c('p',[_c('strong',[_vm._v(\"现在你可以修改配置文件来使用你自定义的合并和比较工具了\")]),_vm._v(\"。 这将涉及许多自定义设置：\"),_c('code',[_vm._v(\"merge.tool\")]),_vm._v(\"  通知 Git 该使用哪个合并工具， \"),_c('code',[_vm._v(\"mergetool.<tool>.cmd\")]),_vm._v(\"  规定命令运行的方式，\"),_c('code',[_vm._v(\"mergetool.<tool>.trustExitCode\")]),_vm._v(\"  会通知 Git 程序的返回值是否表示合并操作成功，\"),_c('code',[_vm._v(\"diff.external\")]),_vm._v(\" 通知 Git 该用什么命令做比较。 因此，你可以运行以下四条配置命令：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" config --global merge.tool extMerge\\n$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" config --global mergetool.extMerge.cmd \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"\\\\\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'extMerge \"),_c('span',{pre:true,attrs:{\"class\":\"token entity\",\"title\":\"\\\\\\\"\"}},[_vm._v(\"\\\\\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token variable\"}},[_vm._v(\"$BASE\")]),_c('span',{pre:true,attrs:{\"class\":\"token entity\",\"title\":\"\\\\\\\"\"}},[_vm._v(\"\\\\\\\"\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token entity\",\"title\":\"\\\\\\\"\"}},[_vm._v(\"\\\\\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token variable\"}},[_vm._v(\"$LOCAL\")]),_c('span',{pre:true,attrs:{\"class\":\"token entity\",\"title\":\"\\\\\\\"\"}},[_vm._v(\"\\\\\\\"\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token entity\",\"title\":\"\\\\\\\"\"}},[_vm._v(\"\\\\\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token variable\"}},[_vm._v(\"$REMOTE\")]),_c('span',{pre:true,attrs:{\"class\":\"token entity\",\"title\":\"\\\\\\\"\"}},[_vm._v(\"\\\\\\\"\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token entity\",\"title\":\"\\\\\\\"\"}},[_vm._v(\"\\\\\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token variable\"}},[_vm._v(\"$MERGED\")]),_c('span',{pre:true,attrs:{\"class\":\"token entity\",\"title\":\"\\\\\\\"\"}},[_vm._v(\"\\\\\\\"\")]),_vm._v(\"'\")]),_vm._v(\"\\n$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" config --global mergetool.extMerge.trustExitCode \"),_c('span',{pre:true,attrs:{\"class\":\"token boolean\"}},[_vm._v(\"false\")]),_vm._v(\"\\n$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" config --global diff.external extDiff\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br')])]),_c('p',[_vm._v(\"或编辑你的 \"),_c('code',[_vm._v(\"~/.gitconfig\")]),_vm._v(\"  文件，添加以下各行：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"[merge]\\n  tool = extMerge\\n[mergetool \\\"extMerge\\\"]\\n  cmd = extMerge \\\"$BASE\\\" \\\"$LOCAL\\\" \\\"$REMOTE\\\" \\\"$MERGED\\\"\\n  trustExitCode = false\\n[diff]\\n  external = extDiff\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br')])]),_c('p',[_vm._v(\"待一切设置妥当后，如果你像这样运行 diff 命令：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"diff\")]),_vm._v(\" 32d1776b1^ 32d1776b1\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('p',[_vm._v(\"Git 将启动 P4Merge，而不是在命令行输出比较的结果，就像这样：\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/c8e2b459f94c0ed96506b877771b96da.png\"),\"alt\":\"P4Merge.\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"如果你尝试合并两个分支，随后遇到了合并冲突，运行 \"),_c('code',[_vm._v(\"git mergetool\")]),_vm._v(\"，Git 会调用 P4Merge 让你通过图形界面来解决冲突。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"设置包装脚本的好处在于大大降低了改变 diff 和 merge 工具的工作量。 举个例子，想把 extDiff 和 extMerge 的工具改成 KDiff3，你要做的仅仅是编辑 extMerge 脚本文件：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"cat\")]),_vm._v(\" /usr/local/bin/extMerge\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"#!/bin/sh\")]),_vm._v(\"\\n/Applications/kdiff3.app/Contents/MacOS/kdiff3 \"),_c('span',{pre:true,attrs:{\"class\":\"token variable\"}},[_vm._v(\"$*\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br')])]),_c('p',[_vm._v(\"现在，Git 将使用 KDiff3 作为查看比较和解决合并冲突的工具。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Git 预设了许多其他的合并和解决冲突的工具，无需特别的设置你就能用上它们。 要想看到它支持的工具列表，试一下这个：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" mergetool --tool-help\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'git mergetool --tool=<tool>'\")]),_vm._v(\" may be \"),_c('span',{pre:true,attrs:{\"class\":\"token builtin class-name\"}},[_vm._v(\"set\")]),_vm._v(\" to one of the following:\\n        emerge\\n        gvimdiff\\n        gvimdiff2\\n        opendiff\\n        p4merge\\n        vimdiff\\n        vimdiff2\\n\\nThe following tools are valid, but not currently available:\\n        araxis\\n        bc3\\n        codecompare\\n        deltawalker\\n        diffmerge\\n        diffuse\\n        ecmerge\\n        kdiff3\\n        meld\\n        tkdiff\\n        tortoisemerge\\n        xxdiff\\n\\nSome of the tools listed above only work \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"in\")]),_vm._v(\" a windowed\\nenvironment. If run \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"in\")]),_vm._v(\" a terminal-only session, they will fail.\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"8\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"9\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"10\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"11\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"12\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"13\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"14\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"15\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"16\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"17\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"18\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"19\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"20\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"21\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"22\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"23\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"24\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"25\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"26\")]),_c('br')])]),_c('p',[_vm._v(\"如果你不想用到 KDiff3 的所有功能，只是想用它来合并，那么 kdiff3 正符合你的要求，运行：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" config --global merge.tool kdiff3\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('p',[_vm._v(\"如果运行了以上命令，而没有设置 extMerge 和 extDiff 文件，Git 会用 KDiff3 做合并，让内置的 diff来做比较。\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"格式化与多余的空白字符\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#格式化与多余的空白字符\"}},[_vm._v(\"#\")]),_vm._v(\" 格式化与多余的空白字符\")]),_vm._v(\" \"),_c('p',[_vm._v(\"格式化与多余的空白字符是许多开发人员在协作时，特别是在跨平台情况下，不时会遇到的令人头疼的琐碎的问题。 由于编辑器的不同或者文件行尾的换行符在 Windows 下被替换了，一些细微的空格变化会不经意地混入提交的补丁或其它协作成果中。 不用怕，Git 提供了一些配置项来帮助你解决这些问题。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"core-autocrlf-自动转换换行符\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#core-autocrlf-自动转换换行符\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('code',[_vm._v(\"core.autocrlf\")]),_vm._v(\" 自动转换换行符\")]),_vm._v(\" \"),_c('p',[_vm._v(\"假如你正在 \"),_c('strong',[_vm._v(\"Windows 上写程序\")]),_vm._v(\"，而你的同伴用的是 \"),_c('strong',[_vm._v(\"其他系统（或相反）\")]),_vm._v(\"，你 \"),_c('strong',[_vm._v(\"可能会遇到 CRLF 问题\")]),_vm._v(\"。 这是因为 Windows 使用回车（CR）和换行（LF）两个字符来结束一行，而 Mac 和 Linux 只使用换行（LF）一个字符。 虽然这是小问题，但它会极大地扰乱跨平台协作。许多 Windows 上的编辑器会悄悄把行尾的换行字符转换成回车和换行，或在用户按下 Enter 键时，插入回车和换行两个字符。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Git 可以在你 \"),_c('strong',[_vm._v(\"提交时自动地把回车和换行转换成换行\")]),_vm._v(\"，而 \"),_c('strong',[_vm._v(\"在检出代码时把换行转换成回车和换行\")]),_vm._v(\"。 你可以用\"),_c('code',[_vm._v(\"core.autocrlf\")]),_vm._v(\"  来打开此项功能。 如果是在 Windows 系统上，把它设置成 true，这样在检出代码时，换行会被转换成回车和换行：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"# 设置自动转换\")]),_vm._v(\"\\n$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" config --global core.autocrlf \"),_c('span',{pre:true,attrs:{\"class\":\"token boolean\"}},[_vm._v(\"true\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br')])]),_c('p',[_vm._v(\"如果使用以换行作为行结束符的 Linux 或 Mac，你不需要 Git 在检出文件时进行自动的转换；然而当一个以回车加换行作为行结束符的文件不小心被引入时，你肯定想让 Git 修正。 你可以把 \"),_c('code',[_vm._v(\"core.autocrlf\")]),_vm._v(\"  设置成 \"),_c('code',[_vm._v(\"input\")]),_vm._v(\" 来\"),_c('strong',[_vm._v(\"告诉 Git 在提交时把回车和换行转换成换行\")]),_vm._v(\"，\"),_c('strong',[_vm._v(\"检出时不转换\")]),_vm._v(\"：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"# 在提交时把回车和换行转换成换行，检出时不转换\")]),_vm._v(\"\\n$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" config --global core.autocrlf input\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br')])]),_c('p',[_vm._v(\"这样在 Windows 上的检出文件中会保留回车和换行，而在 Mac 和 Linux 上，以及版本库中会保留换行。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"如果你是 Windows 程序员，且正在开发仅运行在 Windows 上的项目，可以设置 false 取消此功能，把回车保留在版本库中：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" config --global core.autocrlf \"),_c('span',{pre:true,attrs:{\"class\":\"token boolean\"}},[_vm._v(\"false\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('h3',{attrs:{\"id\":\"core-whitespace\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#core-whitespace\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('code',[_vm._v(\"core.whitespace\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"Git 预先设置了一些选项来 \"),_c('strong',[_vm._v(\"探测和修正多余空白字符问题\")]),_vm._v(\"。 它提供了 \"),_c('strong',[_vm._v(\"六种处理多余空白字符的主要选项\")]),_vm._v(\" —— 其中三个默认开启，另外三个默认关闭，不过你可以自由地设置它们。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"默认被打开的三个选项是：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('code',[_vm._v(\"blank-at-eol\")]),_vm._v(\"，查找行尾的空格；\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"blank-at-eof\")]),_vm._v(\"，盯住文件底部的空行；\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"space-before-tab\")]),_vm._v(\"，警惕行头 tab 前面的空格。\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"默认被关闭的三个选项是：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('code',[_vm._v(\"indent-with-non-tab\")]),_vm._v(\"，揪出以空格而非 tab 开头的行（你可以用 tabwidth 选项控制它）；\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"tab-in-indent\")]),_vm._v(\"，监视在行头表示缩进的 tab；\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"cr-at-eol\")]),_vm._v(\"，告诉 Git 忽略行尾的回车。\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"通过设置 \"),_c('code',[_vm._v(\"core.whitespace\")]),_vm._v(\"，你可以让 Git 按照你的意图来 \"),_c('strong',[_vm._v(\"打开或关闭以逗号分割的选项\")]),_vm._v(\"。 要想 \"),_c('strong',[_vm._v(\"关闭某个选项\")]),_vm._v(\"，你可以在输入设置选项时不指定它或在它前面加个  \"),_c('code',[_vm._v(\"-\")]),_vm._v(\"。 例如，如果你想要打开除 \"),_c('code',[_vm._v(\"cr-at-eol\")]),_vm._v(\"  之外的所有选项：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" config --global core.whitespace \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"\\\\\")]),_vm._v(\"\\n    trailing-space,space-before-tab,indent-with-non-tab\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br')])]),_c('p',[_vm._v(\"当你运行 \"),_c('code',[_vm._v(\"git diff\")]),_vm._v(\"  命令并尝试给输出着色时，Git 将探测到这些问题，因此你在提交前就能修复它们。 用 \"),_c('code',[_vm._v(\"git apply\")]),_vm._v(\"  打补丁时你也会从中受益。 如果正准备应用的补丁存有特定的空白问题，你可以让 Git 在应用补丁时发出警告：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" apply --whitespace\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"warn \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"<\")]),_vm._v(\"patch\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\">\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('p',[_vm._v(\"或者让 Git 在打上补丁前自动修正此问题：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" apply --whitespace\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"fix \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"<\")]),_vm._v(\"patch\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\">\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('p',[_vm._v(\"这些选项也能运用于  \"),_c('code',[_vm._v(\"git rebase\")]),_vm._v(\"。 如果提交了有空白问题的文件，但还没推送到上游，你可以运行 \"),_c('code',[_vm._v(\"git rebase –whitespace=fix\")]),_vm._v(\" 来让 Git 在重写补丁时自动修正它们。\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"服务器端配置\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#服务器端配置\"}},[_vm._v(\"#\")]),_vm._v(\" 服务器端配置\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Git 服务器端的配置项相对来说并不多，但仍有一些饶有生趣的选项值得你一看。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"receive-fsckobjects-每次推送时是否检查一致性\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#receive-fsckobjects-每次推送时是否检查一致性\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('code',[_vm._v(\"receive.fsckObjects\")]),_vm._v(\" 每次推送时是否检查一致性\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Git 能够确认每个对象的有效性以及 SHA-1 检验和是否保持一致。 \"),_c('strong',[_vm._v(\"但 Git 不会在每次推送时都这么做\")]),_vm._v(\"。这个操作很耗时间，很有可能会拖慢提交的过程，特别是当库或推送的文件很大的情况下。 如果想在每次推送时都要求 Git 检查一致性，设置 \"),_c('code',[_vm._v(\"receive.fsckObjects\")]),_vm._v(\" 为 true 来强迫它这么做：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" config --system receive.fsckObjects \"),_c('span',{pre:true,attrs:{\"class\":\"token boolean\"}},[_vm._v(\"true\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('p',[_vm._v(\"现在 Git 会在每次推送生效前检查库的完整性，确保没有被有问题的客户端引入破坏性数据。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"receive-denynonfastforwards-禁用强制更新策略\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#receive-denynonfastforwards-禁用强制更新策略\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('code',[_vm._v(\"receive.denyNonFastForwards\")]),_vm._v(\" 禁用强制更新策略\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"如果你变基已经被推送的提交\")]),_vm._v(\"，\"),_c('strong',[_vm._v(\"继而再推送\")]),_vm._v(\"，又或者推送一个提交到远程分支，而这个远程分支当前指向的提交不在该提交的历史中，\"),_c('strong',[_vm._v(\"这样的推送会被拒绝\")]),_vm._v(\"。 这通常是个很好的策略，但有时在变基的过程中，你确信自己需要更新远程分支，可以在 \"),_c('code',[_vm._v(\"push\")]),_vm._v(\" 命令后加  \"),_c('code',[_vm._v(\"-f\")]),_vm._v(\"  标志来强制更新（force-update）。\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"要禁用这样的强制更新推送（force-pushes）\")]),_vm._v(\"，可以设置  \"),_c('code',[_vm._v(\"receive.denyNonFastForwards\")]),_vm._v(\"：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" config --system receive.denyNonFastForwards \"),_c('span',{pre:true,attrs:{\"class\":\"token boolean\"}},[_vm._v(\"true\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('p',[_vm._v(\"稍后我们会提到，\"),_c('strong',[_vm._v(\"用服务器端的接收钩子也能达到同样的目的\")]),_vm._v(\"。 那种方法可以做到更细致的控制，例如禁止某一类用户做非快进（non-fast-forwards）推送。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"receive-denydeletes\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#receive-denydeletes\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('code',[_vm._v(\"receive.denyDeletes\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"有一些方法可以绕过 \"),_c('code',[_vm._v(\"denyNonFastForwards\")]),_vm._v(\"  策略。\"),_c('strong',[_vm._v(\"其中一种是先删除某个分支\")]),_vm._v(\"，\"),_c('strong',[_vm._v(\"再连同新的引用一起推送回该分支\")]),_vm._v(\"。 把 \"),_c('code',[_vm._v(\"receive.denyDeletes\")]),_vm._v(\" 设置为 true 可以把这个漏洞补上：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" config --system receive.denyDeletes \"),_c('span',{pre:true,attrs:{\"class\":\"token boolean\"}},[_vm._v(\"true\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('p',[_vm._v(\"这样会 \"),_c('strong',[_vm._v(\"禁止通过推送删除分支和标签 — 没有用户可以这么做\")]),_vm._v(\"。 要删除远程分支，必须从服务器手动删除引用文件。 通过用户访问控制列表（ACL）也能够在用户级的粒度上实现同样的功能，你将在 \"),_c('a',{attrs:{\"href\":\"\"}},[_vm._v(\"使用强制策略的一个例子\")]),_vm._v(\" 一节学到具体的做法。\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"sourceRoot":""}