(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[221],{

/***/ "./docs/git-scm/10/03.md":
/*!*******************************!*\
  !*** ./docs/git-scm/10/03.md ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _03_md_vue_type_template_id_40cc3602___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./03.md?vue&type=template&id=40cc3602& */ "./docs/git-scm/10/03.md?vue&type=template&id=40cc3602&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");

var script = {}


/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__["default"])(
  script,
  _03_md_vue_type_template_id_40cc3602___WEBPACK_IMPORTED_MODULE_0__["render"],
  _03_md_vue_type_template_id_40cc3602___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./docs/git-scm/10/03.md?vue&type=template&id=40cc3602&":
/*!**************************************************************!*\
  !*** ./docs/git-scm/10/03.md?vue&type=template&id=40cc3602& ***!
  \**************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_vuepress_core_node_modules_cache_vuepress_cacheIdentifier_2e9acca5_vue_loader_template_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_cache_loader_dist_cjs_js_ref_1_0_node_modules_vue_loader_lib_index_js_ref_1_1_node_modules_vuepress_markdown_loader_index_js_ref_1_2_03_md_vue_type_template_id_40cc3602___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/@vuepress/core/node_modules/.cache/vuepress","cacheIdentifier":"2e9acca5-vue-loader-template"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib??ref--1-1!../../../node_modules/@vuepress/markdown-loader??ref--1-2!./03.md?vue&type=template&id=40cc3602& */ "./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/@vuepress/core/node_modules/.cache/vuepress\",\"cacheIdentifier\":\"2e9acca5-vue-loader-template\"}!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./node_modules/@vuepress/markdown-loader/index.js?!./docs/git-scm/10/03.md?vue&type=template&id=40cc3602&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_vuepress_core_node_modules_cache_vuepress_cacheIdentifier_2e9acca5_vue_loader_template_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_cache_loader_dist_cjs_js_ref_1_0_node_modules_vue_loader_lib_index_js_ref_1_1_node_modules_vuepress_markdown_loader_index_js_ref_1_2_03_md_vue_type_template_id_40cc3602___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_vuepress_core_node_modules_cache_vuepress_cacheIdentifier_2e9acca5_vue_loader_template_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_cache_loader_dist_cjs_js_ref_1_0_node_modules_vue_loader_lib_index_js_ref_1_1_node_modules_vuepress_markdown_loader_index_js_ref_1_2_03_md_vue_type_template_id_40cc3602___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./docs/git-scm/10/assets/6015b6b57bd6d21814c1304a181d64e3.png":
/*!*********************************************************************!*\
  !*** ./docs/git-scm/10/assets/6015b6b57bd6d21814c1304a181d64e3.png ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "assets/img/6015b6b57bd6d21814c1304a181d64e3.a4e8d86d.png";

/***/ }),

/***/ "./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/@vuepress/core/node_modules/.cache/vuepress\",\"cacheIdentifier\":\"2e9acca5-vue-loader-template\"}!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./node_modules/@vuepress/markdown-loader/index.js?!./docs/git-scm/10/03.md?vue&type=template&id=40cc3602&":
/*!**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/@vuepress/core/node_modules/.cache/vuepress","cacheIdentifier":"2e9acca5-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--1-0!./node_modules/vue-loader/lib??ref--1-1!./node_modules/@vuepress/markdown-loader??ref--1-2!./docs/git-scm/10/03.md?vue&type=template&id=40cc3602& ***!
  \**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{"slot-key":_vm.$parent.slotKey}},[_c('h1',{attrs:{"id":"git-引用"}},[_c('a',{staticClass:"header-anchor",attrs:{"href":"#git-引用"}},[_vm._v("#")]),_vm._v(" Git 引用")]),_vm._v(" "),_c('p',[_vm._v("我们可以借助类似于 "),_c('code',[_vm._v("git log 1a410e")]),_vm._v("  这样的命令来 "),_c('strong',[_vm._v("浏览完整的提交历史")]),_vm._v("，但为了能遍历那段历史从而找到所有相关对象，你仍须记住 1a410e 是最后一个提交。 "),_c('strong',[_vm._v("我们需要一个文件来保存 SHA-1 值，并给文件起一个简单的名字，然后用这个名字指针来替代原始的 SHA-1 值")]),_vm._v("。")]),_vm._v(" "),_c('p',[_vm._v("在 Git 里，这样的文件被称为  "),_c('strong',[_vm._v("引用（references，或缩写为 refs）")]),_vm._v("；你可以在 "),_c('code',[_vm._v(".git/refs")]),_vm._v("  目录下找到这类含有 SHA-1 值的文件。 在目前的项目中，这个目录没有包含任何文件，但它包含了一个简单的目录结构：")]),_vm._v(" "),_c('div',{staticClass:"language-bash line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-bash"}},[_c('code',[_vm._v("$ "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("find")]),_vm._v(" .git/refs\n.git/refs\n.git/refs/heads\n.git/refs/tags\n$ "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("find")]),_vm._v(" .git/refs -type f\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("2")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("3")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("4")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("5")]),_c('br')])]),_c('p',[_vm._v("若要创建一个新引用来帮助记忆最新提交所在的位置，从技术上讲我们只需简单地做如下操作：")]),_vm._v(" "),_c('div',{staticClass:"language-bash line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-bash"}},[_c('code',[_vm._v("$ "),_c('span',{pre:true,attrs:{"class":"token builtin class-name"}},[_vm._v("echo")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token string"}},[_vm._v("\"1a410efbd13591db07496601ebc7a059dd55cfe9\"")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v(">")]),_vm._v(" .git/refs/heads/master\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br')])]),_c('p',[_vm._v("现在，你就可以在 Git 命令中使用这个刚创建的新引用来代替 SHA-1 值了：")]),_vm._v(" "),_c('div',{staticClass:"language-bash line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-bash"}},[_c('code',[_vm._v("$ "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("git")]),_vm._v(" log --pretty"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_vm._v("oneline  master\n1a410efbd13591db07496601ebc7a059dd55cfe9 third commit\ncac0cab538b970a37ea1e769cbbde608743bc96d second commit\nfdf4fc3344e67ab068f836878b6c4951e3b15f3d first commit\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("2")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("3")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("4")]),_c('br')])]),_c('p',[_vm._v("我们不提倡直接编辑引用文件。 如果想更新某个引用，Git 提供了一个更加安全的命令 "),_c('code',[_vm._v("update-ref")]),_vm._v(" 来完成此事：")]),_vm._v(" "),_c('div',{staticClass:"language-bash line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-bash"}},[_c('code',[_vm._v("$ "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("git")]),_vm._v(" update-ref refs/heads/master 1a410efbd13591db07496601ebc7a059dd55cfe9\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br')])]),_c('p',[_c('strong',[_vm._v("这基本就是 Git 分支的本质：一个指向某一系列提交之首的指针或引用")]),_vm._v("。 若想在第二个提交上创建一个分支，可以这么做：")]),_vm._v(" "),_c('div',{staticClass:"language-bash line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-bash"}},[_c('code',[_vm._v("$ "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("git")]),_vm._v(" update-ref refs/heads/test cac0ca\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br')])]),_c('p',[_vm._v("这个分支将只包含从第二个提交开始往前追溯的记录：")]),_vm._v(" "),_c('div',{staticClass:"language-bash line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-bash"}},[_c('code',[_vm._v("$ "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("git")]),_vm._v(" log --pretty"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_vm._v("oneline "),_c('span',{pre:true,attrs:{"class":"token builtin class-name"}},[_vm._v("test")]),_vm._v("\ncac0cab538b970a37ea1e769cbbde608743bc96d second commit\nfdf4fc3344e67ab068f836878b6c4951e3b15f3d first commit\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("2")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("3")]),_c('br')])]),_c('p',[_vm._v("至此，我们的 Git 数据库从概念上看起来像这样：")]),_vm._v(" "),_c('p',[_c('img',{attrs:{"src":__webpack_require__(/*! ./assets/6015b6b57bd6d21814c1304a181d64e3.png */ "./docs/git-scm/10/assets/6015b6b57bd6d21814c1304a181d64e3.png"),"alt":"包含分支引用的 Git 目录对象。"}})]),_vm._v(" "),_c('p',[_vm._v("当运行类似于 "),_c('code',[_vm._v("git branch (branchname)")]),_vm._v("  这样的命令时，Git 实际上会运行 "),_c('code',[_vm._v("update-ref")]),_vm._v("  命令，取得当前所在分支最新提交对应的 SHA-1 值，并将其加入你想要创建的任何新引用中。")]),_vm._v(" "),_c('h2',{attrs:{"id":"head-引用"}},[_c('a',{staticClass:"header-anchor",attrs:{"href":"#head-引用"}},[_vm._v("#")]),_vm._v(" HEAD 引用")]),_vm._v(" "),_c('p',[_vm._v("现在的问题是，当你执行 "),_c('code',[_vm._v("git branch (branchname)")]),_vm._v(" 时，Git 如何知道最新提交的 SHA-1 值呢？ 答案是 "),_c('strong',[_vm._v("HEAD 文件")]),_vm._v("。")]),_vm._v(" "),_c('p',[_c('strong',[_vm._v("HEAD 文件是一个符号引用（symbolic reference）")]),_vm._v("，指向目前所在的分支。 所谓符号引用，意味着它并不像普通引用那样包含一个 SHA-1 值——它是一个指向其他引用的指针。 如果查看 HEAD 文件的内容，一般而言我们看到的类似这样：")]),_vm._v(" "),_c('div',{staticClass:"language-bash line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-bash"}},[_c('code',[_vm._v("$ "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("cat")]),_vm._v(" .git/HEAD\nref: refs/heads/master\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("2")]),_c('br')])]),_c('p',[_vm._v("如果执行 "),_c('code',[_vm._v("git checkout test")]),_vm._v("，Git 会像这样更新 HEAD 文件：")]),_vm._v(" "),_c('div',{staticClass:"language-bash line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-bash"}},[_c('code',[_vm._v("$ "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("cat")]),_vm._v(" .git/HEAD\nref: refs/heads/test\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("2")]),_c('br')])]),_c('p',[_vm._v("当我们执行 "),_c('code',[_vm._v("git commit")]),_vm._v("  时，该命令会创建一个提交对象，并用 HEAD 文件中那个引用所指向的 SHA-1 值设置其父提交字段。")]),_vm._v(" "),_c('p',[_vm._v("你也可以手动编辑该文件，然而同样存在一个更安全的命令来完成此事："),_c('code',[_vm._v("symbolic-ref")]),_vm._v("。 可以借助此命令来查看 HEAD 引用对应的值：")]),_vm._v(" "),_c('div',{staticClass:"language-bash line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-bash"}},[_c('code',[_vm._v("$ "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("git")]),_vm._v(" symbolic-ref HEAD\nrefs/heads/master\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("2")]),_c('br')])]),_c('p',[_vm._v("同样可以设置 HEAD 引用的值：")]),_vm._v(" "),_c('div',{staticClass:"language-bash line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-bash"}},[_c('code',[_vm._v("$ "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("git")]),_vm._v(" symbolic-ref HEAD refs/heads/test\n$ "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("cat")]),_vm._v(" .git/HEAD\nref: refs/heads/test\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("2")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("3")]),_c('br')])]),_c('p',[_vm._v("不能把符号引用设置为一个不符合引用格式的值：")]),_vm._v(" "),_c('div',{staticClass:"language-bash line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-bash"}},[_c('code',[_vm._v("$ "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("git")]),_vm._v(" symbolic-ref HEAD "),_c('span',{pre:true,attrs:{"class":"token builtin class-name"}},[_vm._v("test")]),_vm._v("\nfatal: Refusing to point HEAD outside of refs/\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("2")]),_c('br')])]),_c('h2',{attrs:{"id":"标签引用"}},[_c('a',{staticClass:"header-anchor",attrs:{"href":"#标签引用"}},[_vm._v("#")]),_vm._v(" 标签引用")]),_vm._v(" "),_c('p',[_vm._v("前文我们刚讨论过 Git 的三种主要对象类型，事实上还有第四种。 "),_c('strong',[_vm._v("标签对象（tag object）")]),_vm._v(" 非常类似于一个提交对象——它包含一个标签创建者信息、一个日期、一段注释信息，以及一个指针。 "),_c('strong',[_vm._v("主要的区别在于，标签对象通常指向一个提交对象，而不是一个树对象")]),_vm._v("。 它像是一个永不移动的分支引用——永远指向同一个提交对象，只不过给这个提交对象加上一个更友好的名字罢了。")]),_vm._v(" "),_c('p',[_vm._v("正如 "),_c('RouterLink',{attrs:{"to":"/git-scm/02/"}},[_vm._v("Git 基础")]),_vm._v(" 中所讨论的那样，存在两种类型的标签：附注标签和轻量标签。 可以像这样创建一个轻量标签：")],1),_vm._v(" "),_c('div',{staticClass:"language-bash line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-bash"}},[_c('code',[_vm._v("$ "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("git")]),_vm._v(" update-ref refs/tags/v1.0 cac0cab538b970a37ea1e769cbbde608743bc96d\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br')])]),_c('p',[_vm._v("这就是轻量标签的全部内容——一个固定的引用。 然而，一个附注标签则更复杂一些。 若要创建一个附注标签，Git 会创建一个标签对象，并记录一个引用来指向该标签对象，而不是直接指向提交对象。 可以通过创建一个附注标签来验证这个过程（"),_c('code',[_vm._v("-a")]),_vm._v("  选项指定了要创建的是一个附注标签）：")]),_vm._v(" "),_c('div',{staticClass:"language-bash line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-bash"}},[_c('code',[_vm._v("$ "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("git")]),_vm._v(" tag -a v1.1 1a410efbd13591db07496601ebc7a059dd55cfe9 -m "),_c('span',{pre:true,attrs:{"class":"token string"}},[_vm._v("'test tag'")]),_vm._v("\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br')])]),_c('p',[_vm._v("下面是上述过程所建标签对象的 SHA-1 值：")]),_vm._v(" "),_c('div',{staticClass:"language-bash line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-bash"}},[_c('code',[_vm._v("$ "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("cat")]),_vm._v(" .git/refs/tags/v1.1\n9585191f37f7b0fb9444f35a9bf50de191beadc2\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("2")]),_c('br')])]),_c('p',[_vm._v("现在对该 SHA-1 值运行 "),_c('code',[_vm._v("cat-file")]),_vm._v("  命令：")]),_vm._v(" "),_c('div',{staticClass:"language-bash line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-bash"}},[_c('code',[_vm._v("$ "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("git")]),_vm._v(" cat-file -p 9585191f37f7b0fb9444f35a9bf50de191beadc2\nobject 1a410efbd13591db07496601ebc7a059dd55cfe9\n"),_c('span',{pre:true,attrs:{"class":"token builtin class-name"}},[_vm._v("type")]),_vm._v(" commit\ntag v1.1\ntagger Scott Chacon "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("<")]),_vm._v("schacon@gmail.com"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v(">")]),_vm._v(" Sat May "),_c('span',{pre:true,attrs:{"class":"token number"}},[_vm._v("23")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token number"}},[_vm._v("16")]),_vm._v(":48:58 "),_c('span',{pre:true,attrs:{"class":"token number"}},[_vm._v("2009")]),_vm._v(" -0700\n\n"),_c('span',{pre:true,attrs:{"class":"token builtin class-name"}},[_vm._v("test")]),_vm._v(" tag\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("2")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("3")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("4")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("5")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("6")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("7")]),_c('br')])]),_c('p',[_vm._v("我们注意到，object 条目指向我们打了标签的那个提交对象的 SHA-1 值。 另外要注意的是，标签对象并非必须指向某个提交对象；你可以对任意类型的 Git 对象打标签。 例如，在 Git 源码中，项目维护者将他们的 GPG 公钥添加为一个数据对象，然后对这个对象打了一个标签。 可以克隆一个 Git 版本库，然后通过执行下面的命令来在这个版本库中查看上述公钥：")]),_vm._v(" "),_c('div',{staticClass:"language-bash line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-bash"}},[_c('code',[_vm._v("$ "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("git")]),_vm._v(" cat-file blob junio-gpg-pub\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br')])]),_c('p',[_vm._v("Linux 内核版本库同样有一个不指向提交对象的标签对象——首个被创建的标签对象所指向的是最初被引入版本库的那份内核源码所对应的树对象。")]),_vm._v(" "),_c('h2',{attrs:{"id":"远程引用"}},[_c('a',{staticClass:"header-anchor",attrs:{"href":"#远程引用"}},[_vm._v("#")]),_vm._v(" 远程引用")]),_vm._v(" "),_c('p',[_vm._v("我们将看到的第三种引用类型是 "),_c('strong',[_vm._v("远程引用（remote reference）")]),_vm._v("。 如果你添加了一个远程版本库并对其执行过推送操作，Git 会记录下最近一次推送操作时每一个分支所对应的值，并保存在 "),_c('code',[_vm._v("refs/remotes")]),_vm._v(" 目录下。 例如，你可以添加一个叫做 origin 的远程版本库，然后把 master 分支推送上去：")]),_vm._v(" "),_c('div',{staticClass:"language-bash line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-bash"}},[_c('code',[_vm._v("$ "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("git")]),_vm._v(" remote "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("add")]),_vm._v(" origin git@github.com:schacon/simplegit-progit.git\n\n$ "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("git")]),_vm._v(" push origin master\nCounting objects: "),_c('span',{pre:true,attrs:{"class":"token number"}},[_vm._v("11")]),_vm._v(", done.\nCompressing objects: "),_c('span',{pre:true,attrs:{"class":"token number"}},[_vm._v("100")]),_vm._v("% "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_c('span',{pre:true,attrs:{"class":"token number"}},[_vm._v("5")]),_vm._v("/5"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_vm._v(", done.\nWriting objects: "),_c('span',{pre:true,attrs:{"class":"token number"}},[_vm._v("100")]),_vm._v("% "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_c('span',{pre:true,attrs:{"class":"token number"}},[_vm._v("7")]),_vm._v("/7"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_vm._v(", "),_c('span',{pre:true,attrs:{"class":"token number"}},[_vm._v("716")]),_vm._v(" bytes, done.\nTotal "),_c('span',{pre:true,attrs:{"class":"token number"}},[_vm._v("7")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_vm._v("delta "),_c('span',{pre:true,attrs:{"class":"token number"}},[_vm._v("2")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_vm._v(", reused "),_c('span',{pre:true,attrs:{"class":"token number"}},[_vm._v("4")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_vm._v("delta "),_c('span',{pre:true,attrs:{"class":"token number"}},[_vm._v("1")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_vm._v("\nTo git@github.com:schacon/simplegit-progit.git\n  a11bef0"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("..")]),_vm._v("ca82a6d  master -"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v(">")]),_vm._v(" master\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("2")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("3")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("4")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("5")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("6")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("7")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("8")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("9")]),_c('br')])]),_c('p',[_vm._v("此时，如果查看  "),_c('code',[_vm._v("refs/remotes/origin/master")]),_vm._v("  文件，可以发现 origin 远程版本库的 master 分支所对应的 SHA-1 值，就是最近一次与服务器通信时本地 master 分支所对应的 SHA-1 值：")]),_vm._v(" "),_c('div',{staticClass:"language-bash line-numbers-mode"},[_c('pre',{pre:true,attrs:{"class":"language-bash"}},[_c('code',[_vm._v("$ "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("cat")]),_vm._v(" .git/refs/remotes/origin/master\nca82a6dff817ec66f44342007202690a93763949\n")])]),_vm._v(" "),_c('div',{staticClass:"line-numbers-wrapper"},[_c('span',{staticClass:"line-number"},[_vm._v("1")]),_c('br'),_c('span',{staticClass:"line-number"},[_vm._v("2")]),_c('br')])]),_c('p',[_vm._v("远程引用和分支（位于  "),_c('code',[_vm._v("refs/heads")]),_vm._v("  目录下的引用）之间最主要的区别在于，"),_c('strong',[_vm._v("远程引用是只读的")]),_vm._v("。 虽然可以 git checkout 到某个远程引用，但是 Git 并不会将 HEAD 引用指向该远程引用。因此，你永远不能通过 commit 命令来更新远程引用。 Git 将这些远程引用作为记录远程服务器上各分支最后已知位置状态的书签来管理。")])])}
var staticRenderFns = []



/***/ })

}]);
//# sourceMappingURL=221.5a91c171.js.map