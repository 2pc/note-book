{"version":3,"sources":["webpack:///./docs/cache-pdp/116.md","webpack:///./docs/cache-pdp/116.md?26ad","webpack:///./docs/cache-pdp/116.md?7128"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAiF;AACjF;;;AAGA;AAC0F;AAC1F,gBAAgB,2GAAU;AAC1B;AACA,EAAE,6EAAM;AACR,EAAE,sFAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,gF;;;;;;;;;;;;ACjBf;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA,0BAA0B,aAAa,0BAA0B,wBAAwB,qCAAqC,OAAO,gCAAgC,WAAW,OAAO,gDAAgD,UAAU,mCAAmC,mDAAmD,8/BAA8/B,OAAO,0BAA0B,UAAU,mCAAmC,6BAA6B,oUAAoU,OAAO,eAAe,UAAU,mCAAmC,kBAAkB;AACz0D","file":"assets/js/281.9bd89c08.js","sourcesContent":["import { render, staticRenderFns } from \"./116.md?vue&type=template&id=e1e08508&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/@vuepress/core/node_modules/.cache/vuepress\\\",\\\"cacheIdentifier\\\":\\\"2e9acca5-vue-loader-template\\\"}!../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??ref--1-1!../../node_modules/@vuepress/markdown-loader/index.js??ref--1-2!./116.md?vue&type=template&id=e1e08508&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{\"slot-key\":_vm.$parent.slotKey}},[_c('h1',{attrs:{\"id\":\"_116-为源头服务的限流场景增加-stubbed-fallback-降级机制\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#_116-为源头服务的限流场景增加-stubbed-fallback-降级机制\"}},[_vm._v(\"#\")]),_vm._v(\" 116. 为源头服务的限流场景增加 stubbed fallback 降级机制\")]),_vm._v(\" \"),_c('p',[_vm._v(\"我们上一讲讲到限流，计算了一下线程池的最大的大小，和这个等待队列，去限制了每秒钟最多能发送多少次请求到商品服务；避免大量的请求都发送到商品服务商去\")]),_vm._v(\" \"),_c('p',[_vm._v(\"限流过后，就会导致什么呢，比如 redis 集群崩溃了，雪崩，大量的请求涌入到商品服务调用的 command 中，\\n这个时候线程池肯定不够处理比预估并发量大的请求的，那么超出了处理能力的请求，就会被 reject 掉，\\n从而走 fallback 降级机制\")]),_vm._v(\" \"),_c('p',[_vm._v(\"这里再来理清楚一些前提：\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"首先请求能到这里来，那么 nginx 本地缓存肯定失效了、redis 已经崩溃了、ehcache 中没有这条数据的缓存。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"只能从源头的商品服务里面去查询，但是被限流走了降级机制\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"所以本章重点就是降级机制怎么实现的问题。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"这里根据自身的业务需求和场景来定，本章给出一个方案：多级降级策略\")]),_vm._v(\" \"),_c('ol',[_c('li',[_c('p',[_vm._v(\"第一级：走 hbase 查询\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"第二级：走 stubbed 策略，也就是残缺策略\")]),_vm._v(\" \"),_c('p',[_vm._v(\"疑问就是本人没有做过电商相关系统，在本课程背景中的代码中，只能拿到一个商品 id，\\n而且本地缓存又没有商品数据了，怎么做残缺策略呢？\")])])]),_vm._v(\" \"),_c('p',[_vm._v(\"由于之前讲过多级降级策略，这里也不示范了。而且还有 hbase，也不可能花很多时间来讲解。\\n这里介绍下 hbase 这种方案思路\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"hbase-冷数据备份降级策略方案\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#hbase-冷数据备份降级策略方案\"}},[_vm._v(\"#\")]),_vm._v(\" hbase 冷数据备份降级策略方案\")]),_vm._v(\" \"),_c('p',[_vm._v(\"hbase： 基于 hdfs 分布式存储基础之上，封装了一个系统，叫做 hbase，分布式在线存储，分布式 NoSQL数据库，里面可以放大量的冷数据。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"由于是分布式 NoSQL数据库，只要运维还过得去，比 mysql 并发强太多。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"什么叫冷数据备份？可以是把一天前、一周前的商品数据版本做一个快照存放在 Hbase 中\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"缓存雪崩回顾\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#缓存雪崩回顾\"}},[_vm._v(\"#\")]),_vm._v(\" 缓存雪崩回顾\")]),_vm._v(\" \"),_c('p',[_vm._v(\"到这里基本上缓存雪崩已经讲解完了\")]),_vm._v(\" \"),_c('ol',[_c('li',[_c('p',[_vm._v(\"事前\")]),_vm._v(\" \"),_c('p',[_vm._v(\"redis 高可用性，redis cluster、sentinal、复制、主从，从->主，双机房部署\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"事中\")]),_vm._v(\" \"),_c('p',[_vm._v(\"ehcache 可以抗一抗，redis 挂掉之后的资源隔离、超时控制、熔断，商品服务的访问限流、多级降级，缓存服务在雪崩场景下存活下来，基于 ehcache 和存活的商品服务提供数据\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"事后\")]),_vm._v(\" \"),_c('p',[_vm._v(\"快速恢复 Redis，备份+恢复，快速的缓存预热的方案\")])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"sourceRoot":""}