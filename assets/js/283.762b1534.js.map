{"version":3,"sources":["webpack:///./docs/cache-pdp/119.md","webpack:///./docs/cache-pdp/119.md?5ebd","webpack:///./docs/cache-pdp/119.md?c067"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAiF;AACjF;;;AAGA;AAC0F;AAC1F,gBAAgB,2GAAU;AAC1B;AACA,EAAE,6EAAM;AACR,EAAE,sFAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,gF;;;;;;;;;;;;ACjBf;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA,0BAA0B,aAAa,0BAA0B,wBAAwB,qCAAqC,OAAO,gCAAgC,WAAW,OAAO,qDAAqD,UAAU,mCAAmC,wDAAwD,+FAA+F,OAAO,gBAAgB,UAAU,mCAAmC,mBAAmB,yJAAyJ,OAAO,gBAAgB,UAAU,mCAAmC,mBAAmB,2MAA2M,OAAO,iBAAiB,UAAU,mCAAmC,oBAAoB;AAC3hC","file":"assets/js/283.762b1534.js","sourcesContent":["import { render, staticRenderFns } from \"./119.md?vue&type=template&id=50a69d56&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/@vuepress/core/node_modules/.cache/vuepress\\\",\\\"cacheIdentifier\\\":\\\"2e9acca5-vue-loader-template\\\"}!../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??ref--1-1!../../node_modules/@vuepress/markdown-loader/index.js??ref--1-2!./119.md?vue&type=template&id=50a69d56&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{\"slot-key\":_vm.$parent.slotKey}},[_c('h1',{attrs:{\"id\":\"_119-高并发场景下的-nginx-缓存失效导致-redis-压力倍增问题以及解决方案\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#_119-高并发场景下的-nginx-缓存失效导致-redis-压力倍增问题以及解决方案\"}},[_vm._v(\"#\")]),_vm._v(\" 119. 高并发场景下的 nginx 缓存失效导致 redis 压力倍增问题以及解决方案\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"什么是缓存失效\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#什么是缓存失效\"}},[_vm._v(\"#\")]),_vm._v(\" 什么是缓存失效?\")]),_vm._v(\" \"),_c('p',[_vm._v(\"我们在 nginx 中设置本地缓存时，给了一个过期时间，比如是 10 分钟，\\n10 分钟后会自动过期，这个就叫做缓存失效\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"缓存失效的问题\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#缓存失效的问题\"}},[_vm._v(\"#\")]),_vm._v(\" 缓存失效的问题\")]),_vm._v(\" \"),_c('p',[_vm._v(\"比如同时来了 1000 个请求，10 分钟后会失效（\"),_c('strong',[_vm._v(\"同时来，也是同时失效\")]),_vm._v(\"），\\n这就会导致大量的请求高并发到 redis 上去了，同时网络负载也会加重\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"缓存失效解决方案\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#缓存失效解决方案\"}},[_vm._v(\"#\")]),_vm._v(\" 缓存失效解决方案\")]),_vm._v(\" \"),_c('p',[_vm._v(\"解决的核心思路就是：让所有缓存的过期时间尽量保证不在同一时间失效，可以使用一个过期区间，\\n在这个区间内随机过期时间\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"sourceRoot":""}