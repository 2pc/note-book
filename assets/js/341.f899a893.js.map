{"version":3,"sources":["webpack:///./docs/cache-pdp/hystrix/099.md","webpack:///./docs/cache-pdp/hystrix/099.md?51b1","webpack:///./docs/cache-pdp/hystrix/099.md?6fdc"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAiF;AACjF;;;AAGA;AAC6F;AAC7F,gBAAgB,2GAAU;AAC1B;AACA,EAAE,6EAAM;AACR,EAAE,sFAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,gF;;;;;;;;;;;;ACjBf;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA,0BAA0B,aAAa,0BAA0B,wBAAwB,qCAAqC,OAAO,gCAAgC,WAAW,OAAO,6CAA6C,UAAU,mCAAmC,gDAAgD;AACjU","file":"assets/js/341.f899a893.js","sourcesContent":["import { render, staticRenderFns } from \"./099.md?vue&type=template&id=51f340c1&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/@vuepress/core/node_modules/.cache/vuepress\\\",\\\"cacheIdentifier\\\":\\\"2e9acca5-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??ref--1-1!../../../node_modules/@vuepress/markdown-loader/index.js??ref--1-2!./099.md?vue&type=template&id=51f340c1&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{\"slot-key\":_vm.$parent.slotKey}},[_c('h1',{attrs:{\"id\":\"_099-基于-hystrix-的高可用分布式系统架构项目实战课程的总结\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#_099-基于-hystrix-的高可用分布式系统架构项目实战课程的总结\"}},[_vm._v(\"#\")]),_vm._v(\" 099. 基于 hystrix 的高可用分布式系统架构项目实战课程的总结\")]),_vm._v(\" \"),_c('p',[_vm._v(\"前面 hystrix 已经学到的核心知识如下：\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"hystrix 内部工作原理：8 大执行步骤和流程\")]),_vm._v(\" \"),_c('li',[_vm._v(\"资源隔离：你如果有很多个依赖服务，那么想要高可用性，就先做资源隔离，任何一个依赖服务的故障不会导致你的服务的资源耗尽，不会崩溃\")]),_vm._v(\" \"),_c('li',[_vm._v(\"请求缓存：对于一个 request context 内的多个相同 command，使用 request cache，提升性能\")]),_vm._v(\" \"),_c('li',[_vm._v(\"熔断：基于短路器，采集各种异常事件、报错、超时、reject、短路，熔断后一定时间范围内就不允许访问了，直接降级，并提供自动恢复的机制\")]),_vm._v(\" \"),_c('li',[_vm._v(\"降级：报错、超时、reject、熔断后，就降级，服务提供容错的机制\")]),_vm._v(\" \"),_c('li',[_vm._v(\"限流：在你的服务里面，通过线程池或者信号量，限制对某个后端的服务或资源的访问量，避免从你的服务这里过去太多的流量，打死某个资源\")]),_vm._v(\" \"),_c('li',[_vm._v(\"超时：避免某个依赖服务性能过差，导致大量的线程阻塞去调用那个服务，会导致你的服务本身性能也比较差\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"以上知识点已经可以快速利用 hystrix 给自己开发的服务增加各种高可用的保障措施了，\\n避免你的系统因为各种各样的异常情况导致崩溃，不可用\")]),_vm._v(\" \"),_c('p',[_vm._v(\"后续要讲解的 hystrix 的高阶知识\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"request collapser，请求合并技术\")]),_vm._v(\" \"),_c('li',[_vm._v(\"fail-fast 和 fail-slient，高阶容错模式\")]),_vm._v(\" \"),_c('li',[_vm._v(\"static fallback 和 stubbed fallback，高阶降级模式\")]),_vm._v(\" \"),_c('li',[_vm._v(\"嵌套 command 实现的发送网络请求的降级模式\")]),_vm._v(\" \"),_c('li',[_vm._v(\"基于 facade command 的多级降级模式\")]),_vm._v(\" \"),_c('li',[_vm._v(\"request cache 的手动清理\")]),_vm._v(\" \"),_c('li',[_vm._v(\"生产环境中的线程池大小以及 timeout 配置优化经验\")]),_vm._v(\" \"),_c('li',[_vm._v(\"线程池的自动化动态扩容与缩容技术\")]),_vm._v(\" \"),_c('li',[_vm._v(\"hystrix 的 metric 高阶配置\")]),_vm._v(\" \"),_c('li',[_vm._v(\"基于 hystrix dashboard 的可视化分布式系统监控\")]),_vm._v(\" \"),_c('li',[_vm._v(\"生产环境中的 hystrix 工程运维经验\")])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"sourceRoot":""}