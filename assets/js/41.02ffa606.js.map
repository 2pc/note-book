{"version":3,"sources":["webpack:///./docs/elasticsearch-core/67-kernel-principle-decryption.md","webpack:///./docs/elasticsearch-core/67-kernel-principle-decryption.md?0c9b","webpack:///./docs/elasticsearch-core/assets/markdown-img-paste-20190120151200920.png","webpack:///./docs/elasticsearch-core/assets/markdown-img-paste-20190120151937731.png","webpack:///./docs/elasticsearch-core/assets/markdown-img-paste-2019012015381449.png","webpack:///./docs/elasticsearch-core/assets/markdown-img-paste-20190120155115281.png","webpack:///./docs/elasticsearch-core/assets/markdown-img-paste-20190120155716894.png","webpack:///./docs/elasticsearch-core/assets/markdown-img-paste-20190120160400697.png","webpack:///./docs/elasticsearch-core/67-kernel-principle-decryption.md?b303"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAA4G;AAC5G;;;AAGA;AAC0F;AAC1F,gBAAgB,2GAAU;AAC1B;AACA,EAAE,wGAAM;AACR,EAAE,iHAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,gF;;;;;;;;;;;;ACjBf;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACAA,iBAAiB,qBAAuB,kE;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,kE;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,iE;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,kE;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,kE;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,kE;;;;;;;;;;;;ACAxC;AAAA;AAAA;AAAA,0BAA0B,aAAa,0BAA0B,wBAAwB,qCAAqC,OAAO,gCAAgC,WAAW,OAAO,eAAe,UAAU,mCAAmC,kBAAkB,yHAAyH,OAAO,cAAc,oFAAoF,OAAO,cAAc,4GAA4G,OAAO,cAAc,2GAA2G,OAAO,cAAc,2GAA2G,OAAO,cAAc,6GAA6G,gCAAgC,4BAA4B,OAAO,mBAAmB,yCAAyC,OAAO,sBAAsB,4CAA4C,OAAO,sBAAsB,4CAA4C,OAAO,yBAAyB,+CAA+C,OAAO,yBAAyB,+CAA+C,OAAO,kBAAkB,wCAAwC,OAAO,wBAAwB,8CAA8C,OAAO,2BAA2B,iDAAiD,OAAO,qBAAqB,2CAA2C,OAAO,oBAAoB,0CAA0C,OAAO,oBAAoB,2GAA2G,OAAO,gBAAgB,UAAU,mCAAmC,mBAAmB,8HAA8H,0CAA0C,YAAY,gBAAgB,yBAAyB,yHAAyH,mCAAmC,aAAa,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,kgBAAkgB,OAAO,mBAAmB,UAAU,mCAAmC,sBAAsB,sUAAsU,OAAO,mBAAmB,UAAU,mCAAmC,sBAAsB,8LAA8L,OAAO,sBAAsB,UAAU,mCAAmC,yBAAyB,yUAAyU,OAAO,MAAM,mBAAO,CAAC,oIAAmD,YAAY,ibAAib,OAAO,sBAAsB,UAAU,mCAAmC,yBAAyB,+UAA+U,+BAA+B,UAAU,iCAAiC,gIAAgI,OAAO,MAAM,mBAAO,CAAC,oIAAmD,YAAY,yBAAyB,OAAO,eAAe,UAAU,mCAAmC,kBAAkB,kuBAAkuB,OAAO,MAAM,mBAAO,CAAC,kIAAkD,YAAY,yBAAyB,OAAO,qBAAqB,UAAU,mCAAmC,wBAAwB,kSAAkS,8CAA8C,YAAY,gBAAgB,yBAAyB,kDAAkD,gBAAgB,6BAA6B,WAAW,+BAA+B,gBAAgB,0BAA0B,sCAAsC,gBAAgB,0BAA0B,uCAAuC,gBAAgB,6BAA6B,WAAW,iCAAiC,gBAAgB,0BAA0B,8CAA8C,gBAAgB,0BAA0B,uCAAuC,gBAAgB,wBAAwB,gDAAgD,gBAAgB,6BAA6B,WAAW,6BAA6B,gBAAgB,6BAA6B,WAAW,4CAA4C,mCAAmC,aAAa,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,4IAA4I,OAAO,wBAAwB,UAAU,mCAAmC,2BAA2B,02BAA02B,OAAO,MAAM,mBAAO,CAAC,oIAAmD,YAAY,yBAAyB,OAAO,kBAAkB,UAAU,mCAAmC,qBAAqB,yIAAyI,OAAO,MAAM,mBAAO,CAAC,oIAAmD,YAAY,0kBAA0kB,8CAA8C,YAAY,gBAAgB,yBAAyB,4DAA4D,gBAAgB,6BAA6B,WAAW,iCAAiC,gBAAgB,0BAA0B,uDAAuD,gBAAgB,0BAA0B,uCAAuC,gBAAgB,wBAAwB,mCAAmC,gBAAgB,6BAA6B,4CAA4C,gBAAgB,0BAA0B,0DAA0D,gBAAgB,0BAA0B,uCAAuC,gBAAgB,wBAAwB,6CAA6C,gBAAgB,6BAA6B,WAAW,4CAA4C,mCAAmC,aAAa,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,sCAAsC,OAAO,iBAAiB,UAAU,mCAAmC,oBAAoB,snBAAsnB,OAAO,MAAM,mBAAO,CAAC,oIAAmD,YAAY,yBAAyB,OAAO,iBAAiB,UAAU,mCAAmC,oBAAoB,8ZAA8Z,0CAA0C,YAAY,gBAAgB,yBAAyB,8FAA8F,mCAAmC,aAAa,0BAA0B,oCAAoC,0BAA0B;AACnga","file":"assets/js/41.02ffa606.js","sourcesContent":["import { render, staticRenderFns } from \"./67-kernel-principle-decryption.md?vue&type=template&id=1c7e609f&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/@vuepress/core/node_modules/.cache/vuepress\\\",\\\"cacheIdentifier\\\":\\\"2e9acca5-vue-loader-template\\\"}!../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??ref--1-1!../../node_modules/@vuepress/markdown-loader/index.js??ref--1-2!./67-kernel-principle-decryption.md?vue&type=template&id=1c7e609f&\"","module.exports = __webpack_public_path__ + \"assets/img/markdown-img-paste-20190120151200920.5b7061c2.png\";","module.exports = __webpack_public_path__ + \"assets/img/markdown-img-paste-20190120151937731.b5c4205f.png\";","module.exports = __webpack_public_path__ + \"assets/img/markdown-img-paste-2019012015381449.d7a85709.png\";","module.exports = __webpack_public_path__ + \"assets/img/markdown-img-paste-20190120155115281.69dc5f00.png\";","module.exports = __webpack_public_path__ + \"assets/img/markdown-img-paste-20190120155716894.72b0a7f3.png\";","module.exports = __webpack_public_path__ + \"assets/img/markdown-img-paste-20190120160400697.a384e6eb.png\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{\"slot-key\":_vm.$parent.slotKey}},[_c('h1',{attrs:{\"id\":\"内核原理解密\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#内核原理解密\"}},[_vm._v(\"#\")]),_vm._v(\" 内核原理解密\")]),_vm._v(\" \"),_c('p',[_vm._v(\"本章会记录原始以下章节内容\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('ol',{attrs:{\"start\":\"67\"}},[_c('li',[_vm._v(\"内核原理探秘_倒排索引组成结构以及其索引可变原因揭秘\")])])]),_vm._v(\" \"),_c('li',[_c('ol',{attrs:{\"start\":\"68\"}},[_c('li',[_vm._v(\"内核原理探秘_深度图解剖析 document 写入原理（buffer，segment，commit）\")])])]),_vm._v(\" \"),_c('li',[_c('ol',{attrs:{\"start\":\"69\"}},[_c('li',[_vm._v(\"内核原理探秘_优化写入流程实现 NRT 近实时（filesystem cache，refresh）\")])])]),_vm._v(\" \"),_c('li',[_c('ol',{attrs:{\"start\":\"70\"}},[_c('li',[_vm._v(\"内核原理探秘_继续优化写入流程实现 durability 可靠存储（translog，flush）\")])])]),_vm._v(\" \"),_c('li',[_c('ol',{attrs:{\"start\":\"71\"}},[_c('li',[_vm._v(\"内核原理探秘_最后优化写入流程实现海量磁盘文件合并（segment merge，optimize）\")])])])]),_vm._v(\" \"),_c('p'),_c('div',{staticClass:\"table-of-contents\"},[_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"#倒排索引的结构\"}},[_vm._v(\"倒排索引的结构\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#倒排索引不可变的好处\"}},[_vm._v(\"倒排索引不可变的好处\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#倒排索引不可变的坏处\"}},[_vm._v(\"倒排索引不可变的坏处\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#document-写入原理\"}},[_vm._v(\"document 写入原理\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#document-删除原理\"}},[_vm._v(\"document 删除原理\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#nrt-实现\"}},[_vm._v(\"NRT 实现\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#refresh-间隔修改\"}},[_vm._v(\"refresh 间隔修改\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#durability-可靠存储\"}},[_vm._v(\"durability 可靠存储\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#宕机后数据恢复流程\"}},[_vm._v(\"宕机后数据恢复流程\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#海量磁盘文件合并\"}},[_vm._v(\"海量磁盘文件合并\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#optimize\"}},[_vm._v(\"_optimize\")])])])]),_c('p'),_vm._v(\" \"),_c('p',[_vm._v(\"倒排索引，是适合用于进行搜索的\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"倒排索引的结构\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#倒排索引的结构\"}},[_vm._v(\"#\")]),_vm._v(\" 倒排索引的结构\")]),_vm._v(\" \"),_c('p',[_vm._v(\"倒排索引其实并不是像之前说的那样很简单的，结构，但是核心却就是这样。\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"word\\t\\tdoc1\\t\\tdoc2\\n\\ndog\\t\\t  *\\t\\t      *\\nhello\\t\\t*\\nyou\\t\\t\\t*\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br')])]),_c('p',[_vm._v(\"还包括其他的一些数据，可以看出来如下数据基本上都是用来算相关度评分的\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"包含这个关键词的 document list\")]),_vm._v(\" \"),_c('li',[_vm._v(\"包含这个关键词的所有 document 的数量：IDF（inverse document frequency）\")]),_vm._v(\" \"),_c('li',[_vm._v(\"这个关键词在每个 document 中出现的次数：TF（term frequency）\")]),_vm._v(\" \"),_c('li',[_vm._v(\"这个关键词在这个 document 中的次序\")]),_vm._v(\" \"),_c('li',[_vm._v(\"每个 document 的长度：length norm\")]),_vm._v(\" \"),_c('li',[_vm._v(\"包含这个关键词的所有 document 的平均长度\")])]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"倒排索引不可变的好处\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#倒排索引不可变的好处\"}},[_vm._v(\"#\")]),_vm._v(\" 倒排索引不可变的好处\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"不需要锁，提升并发能力，避免锁的问题\")]),_vm._v(\" \"),_c('li',[_vm._v(\"数据不变，一直保存在 os cache 中，只要 cache 内存足够\")]),_vm._v(\" \"),_c('li',[_vm._v(\"filter cache 一直驻留在内存，因为数据不变\")]),_vm._v(\" \"),_c('li',[_vm._v(\"可以压缩，节省 cpu 和 io 开销（因为不可变，所以可以压缩不存在修改）\")])]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"倒排索引不可变的坏处\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#倒排索引不可变的坏处\"}},[_vm._v(\"#\")]),_vm._v(\" 倒排索引不可变的坏处\")]),_vm._v(\" \"),_c('p',[_vm._v(\"每次都要重新构建整个索引。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在之前的讲解中，一个重要概念，对于 document 的变更，内部都是先标记延迟删除，再新增一个文档\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"document-写入原理\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#document-写入原理\"}},[_vm._v(\"#\")]),_vm._v(\" document 写入原理\")]),_vm._v(\" \"),_c('p',[_vm._v(\"会涉及到三个概念：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"buffer：内存\")]),_vm._v(\" \"),_c('li',[_vm._v(\"segment：lucene 底层的 index 是分为多个 segment 的，每个 segment 都会存放部分数据\")]),_vm._v(\" \"),_c('li',[_vm._v(\"commit：将 buffer 的数据写入到 segment 中\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/markdown-img-paste-20190120151200920.png\"),\"alt\":\"\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"一个 document 的写入如上图流程：\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"数据写入 buffer\")]),_vm._v(\" \"),_c('li',[_vm._v(\"commit point\")]),_vm._v(\" \"),_c('li',[_vm._v(\"buffer 中的数据写入新的 index segment\")]),_vm._v(\" \"),_c('li',[_vm._v(\"等待在 os cache 中的 index segment 被 fsync 强制刷到磁盘上\")]),_vm._v(\" \"),_c('li',[_vm._v(\"新的 index sgement 被打开，供 search 使用\")]),_vm._v(\" \"),_c('li',[_vm._v(\"buffer 被清空\")])]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"document-删除原理\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#document-删除原理\"}},[_vm._v(\"#\")]),_vm._v(\" document 删除原理\")]),_vm._v(\" \"),_c('p',[_vm._v(\"每次 commit point 时，会有一个 \"),_c('code',[_vm._v(\".del\")]),_vm._v(\" 文件，标记了哪些 segment 中的哪些 document 被标记为 deleted 了\")]),_vm._v(\" \"),_c('p',[_vm._v(\"搜索的时候，会依次查询所有的 segment，从旧的到新的，\\n比如被修改过的 document，在旧的 segment 中，会标记为 deleted，在新的 segment 中会有其新的数据\")]),_vm._v(\" \"),_c('div',{staticClass:\"custom-block tip\"},[_c('p',{staticClass:\"custom-block-title\"},[_vm._v(\"TIP\")]),_vm._v(\" \"),_c('p',[_vm._v(\"对于这个原理概念思路的东西，听一听就好了，至于怎么实现的，貌似所有书籍教程基本上都不会解说\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/markdown-img-paste-20190120151937731.png\"),\"alt\":\"\"}})]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"nrt-实现\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#nrt-实现\"}},[_vm._v(\"#\")]),_vm._v(\" NRT 实现\")]),_vm._v(\" \"),_c('p',[_vm._v(\"前面流程的问题，每次都必须等待 fsync 将 segment 刷入磁盘，\\n才能将 segment 打开供 search 使用，这样的话，从一个 document 写入，到它可以被搜索，可能会超过1分钟！！！\")]),_vm._v(\" \"),_c('p',[_vm._v(\"这就不是近实时的搜索了！！！主要瓶颈在于 fsync 实际发生磁盘IO写数据进磁盘，是很耗时的。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"写入流程别改进如下：\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"数据写入 buffer\")]),_vm._v(\" \"),_c('li',[_vm._v(\"每隔一定时间，buffer 中的数据被写入 segment 文件，但是先写入 os cache\")]),_vm._v(\" \"),_c('li',[_vm._v(\"只要 segment 写入 os cache，那就直接打开供 search 使用，不立即执行 commit\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"数据写入 os cache，并被打开供搜索的过程，叫做 refresh，默认是每隔 1秒 refresh 一次。\\n也就是说，每隔一秒就会将 buffer 中的数据写入一个新的 index segment file，先写入 os cache 中。所以，es 是近实时的，数据写入到可以被搜索，默认是 1秒。\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/markdown-img-paste-2019012015381449.png\"),\"alt\":\"\"}})]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"refresh-间隔修改\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#refresh-间隔修改\"}},[_vm._v(\"#\")]),_vm._v(\" refresh 间隔修改\")]),_vm._v(\" \"),_c('p',[_c('code',[_vm._v(\"POST /my_index/_refresh\")]),_vm._v(\"，可以手动 refresh，一般不需要手动执行，没必要，让 es 自己搞就可以了\")]),_vm._v(\" \"),_c('p',[_vm._v(\"比如说，我们现在的时效性要求，比较低，只要求一条数据写入 es，一分钟以后才让我们搜索到就可以了，那么就可以调整 refresh interval\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-json line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-json\"}},[_c('code',[_vm._v(\"PUT /my_index\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"settings\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"refresh_interval\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"30s\\\"\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br')])]),_c('p',[_vm._v(\"这里支持刷新到 os cache 中，commit （将 os cache 中的内容刷新到硬盘上）操作是什么时候调用的呢？稍后就会讲。。。\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"durability-可靠存储\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#durability-可靠存储\"}},[_vm._v(\"#\")]),_vm._v(\" durability 可靠存储\")]),_vm._v(\" \"),_c('p',[_vm._v(\"再次优化的写入流程(增加了 translog 文件)\")]),_vm._v(\" \"),_c('ol',[_c('li',[_c('p',[_vm._v(\"数据写入 buffer 缓冲和 translog 日志文件\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"每隔一秒钟，buffer 中的数据被写入新的 segment file，并进入 os cache，此时 segment 被打开并供 search 使用\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"buffer 被清空\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"重复 1~3，新的 segment 不断添加，buffer 不断被清空，而 translog 中的数据不断累加\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"当 translog 长度达到一定程度的时候，commit 操作发生\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"buffer 中的所有数据写入一个新的 segment，并写入 os cache，打开供使用\")]),_vm._v(\" \"),_c('li',[_vm._v(\"buffer 被清空\")]),_vm._v(\" \"),_c('li',[_vm._v(\"一个 commit ponit 被写入磁盘，标明了所有的 index segment\")]),_vm._v(\" \"),_c('li',[_vm._v(\"filesystem cache 中的所有 index segment file 缓存数据，被 fsync 强行刷到磁盘上\")])])])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/markdown-img-paste-20190120155115281.png\"),\"alt\":\"\"}})]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"宕机后数据恢复流程\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#宕机后数据恢复流程\"}},[_vm._v(\"#\")]),_vm._v(\" 宕机后数据恢复流程\")]),_vm._v(\" \"),_c('p',[_vm._v(\"基于 translog 和 commit point，如何进行数据恢复\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/markdown-img-paste-20190120155716894.png\"),\"alt\":\"\"}})]),_vm._v(\" \"),_c('blockquote',[_c('p',[_vm._v(\"flush 操作\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"fsync + 清空 translog，就是 flush，默认每隔 30分钟 flush 一次，或者当 translog 过大的时候，也会 flush\")]),_vm._v(\" \"),_c('p',[_c('code',[_vm._v(\"POST /my_index/_flush\")]),_vm._v(\"，一般来说别手动 flush，让它自动执行就可以了\")]),_vm._v(\" \"),_c('blockquote',[_c('p',[_vm._v(\"translog\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"每隔 5秒 被 fsync 一次到磁盘上。在一次增删改操作之后，当 fsync 在 primary shard 和 replica shard 都成功之后，那次增删改操作才会成功\")]),_vm._v(\" \"),_c('p',[_vm._v(\"但是这种在一次增删改时强行 fsync translog 可能会导致部分操作比较耗时，也可以允许部分数据丢失，设置异步 fsync translog\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-json line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-json\"}},[_c('code',[_vm._v(\"PUT /my_index/_settings\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"index.translog.durability\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"async\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"index.translog.sync_interval\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"5s\\\"\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br')])]),_c('h2',{attrs:{\"id\":\"海量磁盘文件合并\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#海量磁盘文件合并\"}},[_vm._v(\"#\")]),_vm._v(\" 海量磁盘文件合并\")]),_vm._v(\" \"),_c('p',[_vm._v(\"每秒一个 segment file，文件过多，而且每次 search 都要搜索所有的 segment，很耗时\")]),_vm._v(\" \"),_c('p',[_vm._v(\"默认会在后台执行 segment merge 操作，在 merge 的时候，被标记为 deleted 的 document 也会被彻底物理删除\")]),_vm._v(\" \"),_c('p',[_vm._v(\"每次 merge 操作的执行流程\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"选择一些有相似大小的 segment，merge 成一个大的 segment\")]),_vm._v(\" \"),_c('li',[_vm._v(\"将新的 segment flush 到磁盘上去\")]),_vm._v(\" \"),_c('li',[_vm._v(\"写一个新的 commit point，包括了新的 segment，并且排除旧的那些 segment\")]),_vm._v(\" \"),_c('li',[_vm._v(\"将新的 segment 打开供搜索\")]),_vm._v(\" \"),_c('li',[_vm._v(\"将旧的 segment 删除\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/markdown-img-paste-20190120160400697.png\"),\"alt\":\"\"}})]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"optimize\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#optimize\"}},[_vm._v(\"#\")]),_vm._v(\" \"),_c('code',[_vm._v(\"_optimize\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"也就是上述讲解的 segment merge 操作\")]),_vm._v(\" \"),_c('p',[_c('code',[_vm._v(\"OST /my_index/_optimize?max_num_segments=1\")]),_vm._v(\"，尽量不要手动执行，让它自动默认执行就可以了\")]),_vm._v(\" \"),_c('p',[_vm._v(\"可以在 \"),_c('code',[_vm._v(\"elasticsearch-5.2.0\\\\data\\\\nodes\\\\0\\\\indices\\\\7jrPOaovTP6-Z0X9bUIowA\\\\0\")]),_vm._v(\" 看到一些文件\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"index/segments_1\\ntranslog/translog-1.tlog\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br')])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"sourceRoot":""}