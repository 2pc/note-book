{"version":3,"sources":["webpack:///./docs/elasticsearch-senior/aggs/33-bucket-metric.md","webpack:///./docs/elasticsearch-senior/aggs/33-bucket-metric.md?10be","webpack:///./docs/elasticsearch-senior/aggs/33-bucket-metric.md?540a"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAA8F;AAC9F;;;AAGA;AAC6F;AAC7F,gBAAgB,2GAAU;AAC1B;AACA,EAAE,0FAAM;AACR,EAAE,mGAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,gF;;;;;;;;;;;;ACjBf;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA,0BAA0B,aAAa,0BAA0B,wBAAwB,qCAAqC,OAAO,gCAAgC,WAAW,OAAO,2BAA2B,UAAU,mCAAmC,8BAA8B,8EAA8E,gCAAgC,4BAA4B,OAAO,oBAAoB,2CAA2C,OAAO,kBAAkB,wDAAwD,OAAO,iBAAiB,UAAU,mCAAmC,oBAAoB,m7BAAm7B,OAAO,eAAe,UAAU,mCAAmC,kBAAkB,6TAA6T,6CAA6C,YAAY,gBAAgB,wBAAwB,wBAAwB,gBAAgB,yBAAyB,4CAA4C,gBAAgB,0BAA0B,+BAA+B,gBAAgB,6BAA6B,2BAA2B,gBAAgB,0BAA0B,2BAA2B,gBAAgB,6BAA6B,uCAAuC,gBAAgB,yBAAyB,qDAAqD,gBAAgB,yBAAyB,2CAA2C,gBAAgB,yBAAyB,gEAAgE,mCAAmC,aAAa,0BAA0B;AACzzF","file":"assets/js/417.e2bc6a7b.js","sourcesContent":["import { render, staticRenderFns } from \"./33-bucket-metric.md?vue&type=template&id=42dee4e0&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/@vuepress/core/node_modules/.cache/vuepress\\\",\\\"cacheIdentifier\\\":\\\"2e9acca5-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??ref--1-1!../../../node_modules/@vuepress/markdown-loader/index.js??ref--1-2!./33-bucket-metric.md?vue&type=template&id=42dee4e0&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{\"slot-key\":_vm.$parent.slotKey}},[_c('h1',{attrs:{\"id\":\"bucket、metric-核心概念\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#bucket、metric-核心概念\"}},[_vm._v(\"#\")]),_vm._v(\" bucket、metric 核心概念\")]),_vm._v(\" \"),_c('p'),_c('div',{staticClass:\"table-of-contents\"},[_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"#bucket-桶\"}},[_vm._v(\"bucket（桶）\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#metric\"}},[_vm._v(\"metric\")])])])]),_c('p'),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"bucket-桶\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#bucket-桶\"}},[_vm._v(\"#\")]),_vm._v(\" bucket（桶）\")]),_vm._v(\" \"),_c('p',[_vm._v(\"表示一个数据分组，类似 mysql 中的 group\")]),_vm._v(\" \"),_c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"city\")]),_vm._v(\" \"),_c('th',[_vm._v(\"name\")])])]),_vm._v(\" \"),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"北京\")]),_vm._v(\" \"),_c('td',[_vm._v(\"小李\")])]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"北京\")]),_vm._v(\" \"),_c('td',[_vm._v(\"小王\")])]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"上海\")]),_vm._v(\" \"),_c('td',[_vm._v(\"小张\")])]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"上海\")]),_vm._v(\" \"),_c('td',[_vm._v(\"小丽\")])]),_vm._v(\" \"),_c('tr',[_c('td',[_vm._v(\"上海\")]),_vm._v(\" \"),_c('td',[_vm._v(\"小陈\")])])])]),_vm._v(\" \"),_c('p',[_vm._v(\"基于如上数据，按 city 划分 buckets，划分出来两个bucket：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"北京 bucket：包含了 2 个人，小李，小王\")]),_vm._v(\" \"),_c('li',[_vm._v(\"上海 bucket：包含了 3 个人，小张，小丽，小陈\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"按照某个字段进行 bucket 划分，那个字段的值相同的那些数据，就会被划分到一个 bucket 中\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"metric\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#metric\"}},[_vm._v(\"#\")]),_vm._v(\" metric\")]),_vm._v(\" \"),_c('p',[_vm._v(\"表示对一个数据分组执行的统计操作\")]),_vm._v(\" \"),_c('p',[_vm._v(\"当我们有了一堆 bucket 之后，就可以对每个 bucket 中的数据进行聚合分词了，\")]),_vm._v(\" \"),_c('p',[_vm._v(\"metric 就是对一个 bucket 执行的某种聚合分析的操作，比如说求平均值、求最大值、求最小值\")]),_vm._v(\" \"),_c('p',[_vm._v(\"使用如下 sql 来理解这两个概念\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-sql line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-sql\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"select\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"count\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"*\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"from\")]),_vm._v(\" access_log \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"group\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"by\")]),_vm._v(\" user_id\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('ul',[_c('li',[_vm._v(\"bucket：\"),_c('code',[_vm._v(\"group by user_id\")]),_vm._v(\"，那些 user_id 相同的数据，就会被划分到一个 bucket 中\")]),_vm._v(\" \"),_c('li',[_vm._v(\"metric：\"),_c('code',[_vm._v(\"count(*)\")]),_vm._v(\"，对每个 user_id bucket 中所有的数据，计算一个数量\")])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"sourceRoot":""}