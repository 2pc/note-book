{"version":3,"sources":["webpack:///./docs/elasticsearch-senior/aggs/52-doc-value.md","webpack:///./docs/elasticsearch-senior/aggs/52-doc-value.md?43e9","webpack:///./docs/elasticsearch-senior/aggs/52-doc-value.md?3b9e"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAA0F;AAC1F;;;AAGA;AAC6F;AAC7F,gBAAgB,2GAAU;AAC1B;AACA,EAAE,sFAAM;AACR,EAAE,+FAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,gF;;;;;;;;;;;;ACjBf;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA,0BAA0B,aAAa,0BAA0B,wBAAwB,qCAAqC,OAAO,gCAAgC,WAAW,OAAO,iCAAiC,UAAU,mCAAmC,oCAAoC,qXAAqX,8CAA8C,YAAY,gBAAgB,yBAAyB,sEAAsE,gBAAgB,6BAA6B,WAAW,+BAA+B,gBAAgB,0BAA0B,mCAAmC,gBAAgB,0BAA0B,uCAAuC,gBAAgB,6BAA6B,WAAW,iCAAiC,gBAAgB,0BAA0B,mCAAmC,gBAAgB,0BAA0B,uCAAuC,gBAAgB,6BAA6B,WAAW,mCAAmC,gBAAgB,0BAA0B,0CAA0C,gBAAgB,0BAA0B,uCAAuC,gBAAgB,wBAAwB,mDAAmD,gBAAgB,6BAA6B,WAAW,+BAA+B,gBAAgB,6BAA6B,WAAW,gBAAgB,gBAAgB,6BAA6B,0CAA0C,gBAAgB,0BAA0B,kCAAkC,gBAAgB,0BAA0B,uCAAuC,gBAAgB,6BAA6B,WAAW,iCAAiC,gBAAgB,0BAA0B,gDAAgD,gBAAgB,0BAA0B,uCAAuC,gBAAgB,6BAA6B,WAAW,mCAAmC,gBAAgB,0BAA0B,mCAAmC,gBAAgB,0BAA0B,uCAAuC,gBAAgB,6BAA6B,WAAW,qCAAqC,gBAAgB,0BAA0B,mCAAmC,gBAAgB,0BAA0B,uCAAuC,gBAAgB,wBAAwB,0DAA0D,gBAAgB,6BAA6B,WAAW,iCAAiC,gBAAgB,6BAA6B,WAAW,+BAA+B,gBAAgB,6BAA6B,WAAW,6BAA6B,gBAAgB,6BAA6B,WAAW,4CAA4C,mCAAmC,aAAa,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,qCAAqC,0BAA0B,qCAAqC,0BAA0B,qCAAqC,0BAA0B,qCAAqC,0BAA0B,qCAAqC,0BAA0B;AACvpI","file":"assets/js/435.54e91b13.js","sourcesContent":["import { render, staticRenderFns } from \"./52-doc-value.md?vue&type=template&id=9fd28532&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/@vuepress/core/node_modules/.cache/vuepress\\\",\\\"cacheIdentifier\\\":\\\"2e9acca5-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??ref--1-1!../../../node_modules/@vuepress/markdown-loader/index.js??ref--1-2!./52-doc-value.md?vue&type=template&id=9fd28532&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{\"slot-key\":_vm.$parent.slotKey}},[_c('h1',{attrs:{\"id\":\"基于-doc-value-正排索引的聚合内部原理\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#基于-doc-value-正排索引的聚合内部原理\"}},[_vm._v(\"#\")]),_vm._v(\" 基于 doc value 正排索引的聚合内部原理\")]),_vm._v(\" \"),_c('p',[_vm._v(\"本章节会开始接待这些疑问：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"聚合分析的内部原理是什么？\")]),_vm._v(\" \"),_c('li',[_vm._v(\"执行一个聚合操作的时候，内部原理是怎样的呢？\")]),_vm._v(\" \"),_c('li',[_vm._v(\"用了什么样的数据结构去执行聚合？\")]),_vm._v(\" \"),_c('li',[_vm._v(\"是不是用的倒排索引？\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"搜索+聚合，写个示例\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-json line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-json\"}},[_c('code',[_vm._v(\"GET /test_index/test_type/_search\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n\\t\"),_c('span',{pre:true,attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"query\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n\\t\\t\"),_c('span',{pre:true,attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"match\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n\\t\\t\\t\"),_c('span',{pre:true,attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"search_field\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"test\\\"\")]),_vm._v(\"\\n\\t\\t\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\\t\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\"\\n\\t\"),_c('span',{pre:true,attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"aggs\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n\\t\\t\"),_c('span',{pre:true,attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"group_by_agg_field\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n\\t\\t\\t\"),_c('span',{pre:true,attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"terms\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n\\t\\t\\t\\t\"),_c('span',{pre:true,attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"field\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"agg_field\\\"\")]),_vm._v(\"\\n\\t\\t\\t\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\\t\\t\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\\t\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"8\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"9\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"10\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"11\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"12\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"13\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"14\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"15\")]),_c('br')])]),_c('p',[_vm._v(\"基于以上示例来分析：纯用倒排索引来实现的弊端\")]),_vm._v(\" \"),_c('p',[_vm._v(\"对于 query 来说，搜索使用倒排索引速度很快\")]),_vm._v(\" \"),_c('p',[_vm._v(\"结果出来之后，对于 aggs 来说，如果也使用倒排索引的话就会出现性能低下的问题，\\n以 1000 条数据来说，如果聚合字段是分词的，那么你至少要遍历整个倒排索引数据才能拿到整个 field 的全部值，\\n如果是以正派索引来获取，那么最多遍历 1000 次就能拿到整个 doc 的信息，而往往可能在前面几条就拿到了\")]),_vm._v(\" \"),_c('p',[_vm._v(\"所以 es 是使用 倒排索引+正排索引（doc value） 方式来进行聚合分析操作的\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"sourceRoot":""}