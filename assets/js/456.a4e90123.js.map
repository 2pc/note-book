{"version":3,"sources":["webpack:///./docs/elasticsearch-senior/depth-search/21-rescore.md","webpack:///./docs/elasticsearch-senior/depth-search/21-rescore.md?4cca","webpack:///./docs/elasticsearch-senior/depth-search/21-rescore.md?ecd5"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAwF;AACxF;;;AAGA;AAC6F;AAC7F,gBAAgB,2GAAU;AAC1B;AACA,EAAE,oFAAM;AACR,EAAE,6FAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,gF;;;;;;;;;;;;ACjBf;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA,0BAA0B,aAAa,0BAA0B,wBAAwB,qCAAqC,OAAO,gCAAgC,WAAW,OAAO,8BAA8B,UAAU,mCAAmC,iCAAiC,wEAAwE,OAAO,iDAAiD,UAAU,mCAAmC,oDAAoD,sUAAsU,yBAAyB,4CAA4C,qpCAAqpC,OAAO,oBAAoB,UAAU,mCAAmC,uBAAuB,+DAA+D,8CAA8C,YAAY,gBAAgB,yBAAyB,+DAA+D,gBAAgB,6BAA6B,WAAW,+BAA+B,gBAAgB,0BAA0B,mCAAmC,gBAAgB,0BAA0B,uCAAuC,gBAAgB,6BAA6B,WAAW,iCAAiC,gBAAgB,0BAA0B,mCAAmC,gBAAgB,0BAA0B,uCAAuC,gBAAgB,6BAA6B,WAAW,mCAAmC,gBAAgB,0BAA0B,qCAAqC,gBAAgB,0BAA0B,uCAAuC,gBAAgB,wBAAwB,yDAAyD,gBAAgB,6BAA6B,WAAW,+BAA+B,gBAAgB,6BAA6B,WAAW,gBAAgB,gBAAgB,6BAA6B,0CAA0C,gBAAgB,0BAA0B,qCAAqC,gBAAgB,0BAA0B,uCAAuC,gBAAgB,6BAA6B,WAAW,iCAAiC,gBAAgB,0BAA0B,yCAAyC,gBAAgB,0BAA0B,uCAAuC,gBAAgB,wBAAwB,4BAA4B,gBAAgB,6BAA6B,4CAA4C,gBAAgB,0BAA0B,mCAAmC,gBAAgB,0BAA0B,uCAAuC,gBAAgB,6BAA6B,WAAW,mCAAmC,gBAAgB,0BAA0B,2CAA2C,gBAAgB,0BAA0B,uCAAuC,gBAAgB,6BAA6B,WAAW,qCAAqC,gBAAgB,0BAA0B,0CAA0C,gBAAgB,0BAA0B,uCAAuC,gBAAgB,6BAA6B,WAAW,uCAAuC,gBAAgB,0BAA0B,qCAAqC,gBAAgB,0BAA0B,uCAAuC,gBAAgB,6BAA6B,WAAW,yCAAyC,gBAAgB,0BAA0B,mCAAmC,gBAAgB,0BAA0B,uCAAuC,gBAAgB,wBAAwB,wCAAwC,gBAAgB,6BAA6B,oDAAoD,gBAAgB,0BAA0B,kCAAkC,gBAAgB,0BAA0B,uCAAuC,gBAAgB,wBAAwB,mDAAmD,gBAAgB,6BAA6B,WAAW,qCAAqC,gBAAgB,6BAA6B,WAAW,mCAAmC,gBAAgB,6BAA6B,WAAW,iCAAiC,gBAAgB,6BAA6B,WAAW,+BAA+B,gBAAgB,6BAA6B,WAAW,6BAA6B,gBAAgB,6BAA6B,WAAW,4CAA4C,mCAAmC,aAAa,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,qCAAqC,0BAA0B,qCAAqC,0BAA0B,qCAAqC,0BAA0B,qCAAqC,0BAA0B,qCAAqC,0BAA0B,qCAAqC,0BAA0B,qCAAqC,0BAA0B,qCAAqC,0BAA0B,qCAAqC,0BAA0B,qCAAqC,0BAA0B,qCAAqC,0BAA0B,wCAAwC,+BAA+B,UAAU,iCAAiC;AACp+O","file":"assets/js/456.a4e90123.js","sourcesContent":["import { render, staticRenderFns } from \"./21-rescore.md?vue&type=template&id=2f4ed9dc&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/@vuepress/core/node_modules/.cache/vuepress\\\",\\\"cacheIdentifier\\\":\\\"2e9acca5-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??ref--1-1!../../../node_modules/@vuepress/markdown-loader/index.js??ref--1-2!./21-rescore.md?vue&type=template&id=2f4ed9dc&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{\"slot-key\":_vm.$parent.slotKey}},[_c('h1',{attrs:{\"id\":\"rescore-机制优化近似匹配搜索的性能\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#rescore-机制优化近似匹配搜索的性能\"}},[_vm._v(\"#\")]),_vm._v(\" rescore 机制优化近似匹配搜索的性能\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"match-和-phrase-match-proximity-match-的区别\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#match-和-phrase-match-proximity-match-的区别\"}},[_vm._v(\"#\")]),_vm._v(\" match 和 phrase match（proximity match）的区别\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('p',[_vm._v(\"match\")]),_vm._v(\" \"),_c('p',[_vm._v(\"只要简单的匹配到了一个 term，就可以理解将 term 对应的 doc 作为结果返回，扫描倒排索引，扫描到了就 ok\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"phrase match\")]),_vm._v(\" \"),_c('p',[_vm._v(\"首先扫描到所有 term 的 doc list;\\n找到包含所有 term 的 doc list;\\n然后对每个 doc 都计算每个 term 的 position，是否符合指定的范围;\\nslop，需要进行复杂的运算，来判断能否通过 slop 移动，匹配一个 doc\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"match query 的性能比 phrase match 和 proximity match（有 slop）要高很多。因为后两者都要计算 position 的距离。\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"match query 比 phrase match 的性能要高10倍，比 proximity match 的性能要高20倍。\")])])]),_vm._v(\" \"),_c('p',[_vm._v(\"但是别太担心，因为 es 的性能一般都在毫秒级别，match query 一般就在几毫秒，或者几十毫秒，\\n而 phrase match 和 proximity match 的性能在几十毫秒到几百毫秒之间，所以也是可以接受的。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"优化 proximity match 的性能，一般就是减少要进行 proximity match 搜索的 document 数量。\\n主要思路就是，用 match query 先过滤出需要的数据，然后再用 proximity match 来根据 term 距离提高 doc 的分数，\\n同时 proximity match 只针对每个 shard 的分数排名前 n 个 doc 起作用，来重新调整它们的分数，\\n这个过程称之为 rescoring，重计分。因为一般用户会分页查询，只会看到前几页的数据，所以不需要对所有结果进行 proximity match 操作。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"用我们刚才的说法，match + proximity match同时实现召回率和精准度\")]),_vm._v(\" \"),_c('p',[_vm._v(\"默认情况下，match 也许匹配了 1000 个 doc，proximity match 全都需要对每个 doc 进行一遍运算，判断能否 slop 移动匹配上，然后去贡献自己的分数\")]),_vm._v(\" \"),_c('p',[_vm._v(\"但是很多情况下，match 出来也许 1000 个 doc，其实用户大部分情况下是分页查询的，\\n所以可能最多只会看前几页，比如一页是10条，最多也许就看5页，就是50条，\\nproximity match 只要对前 50 个 doc 进行 slop 移动去匹配，去贡献自己的分数即可，\\n不需要对全部 1000 个 doc 都去进行计算和贡献分数\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"rescore-重打分\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#rescore-重打分\"}},[_vm._v(\"#\")]),_vm._v(\" rescore 重打分\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-json line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-json\"}},[_c('code',[_vm._v(\"GET /forum/article/_search\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"query\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"match\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"content\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"java spark\\\"\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"rescore\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"window_size\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"50\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"query\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"rescore_query\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"match_phrase\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n          \"),_c('span',{pre:true,attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"content\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n            \"),_c('span',{pre:true,attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"query\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"java spark\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\"\\n            \"),_c('span',{pre:true,attrs:{\"class\":\"token property\"}},[_vm._v(\"\\\"slop\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"50\")]),_vm._v(\"\\n          \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"8\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"9\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"10\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"11\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"12\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"13\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"14\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"15\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"16\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"17\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"18\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"19\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"20\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"21\")]),_c('br')])]),_c('div',{staticClass:\"custom-block tip\"},[_c('p',{staticClass:\"custom-block-title\"},[_vm._v(\"TIP\")]),_vm._v(\" \"),_c('p',[_vm._v(\"此时应该都会有一个疑问，那么这样只重打分 50 个，最后结果正确吗？\")]),_vm._v(\" \"),_c('p',[_vm._v(\"肯定是不正确的，此时的重打分是在第一个 match 的返回的所有 doc list 上进行重打分，\\n而且是指定个数，所以不在重打分个数内的不会被影响。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"所以这个操作只符合部分场景\")])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"sourceRoot":""}