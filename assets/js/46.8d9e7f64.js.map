{"version":3,"sources":["webpack:///./docs/regular/03/03.md","webpack:///./docs/regular/03/03.md?5ef3","webpack:///./docs/regular/03/assets/1d43a1287e7881b87428ede0f85b63bc.png","webpack:///./docs/regular/03/assets/53fe0982c70fe89dff733345a6816e6f.png","webpack:///./docs/regular/03/assets/a3bbeb6aa533cd06ea5d8f3b9e0b96b2.png","webpack:///./docs/regular/03/assets/ebfd65253886552f034c50da3674ce85.png","webpack:///./docs/regular/03/assets/f183b6fb3fba964ab9a9c3f8aa159b09.png","webpack:///./docs/regular/03/assets/image-20210107102334423.png","webpack:///./docs/regular/03/03.md?1abf"],"names":[],"mappings":"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","file":"assets/js/46.8d9e7f64.js","sourcesContent":["import { render, staticRenderFns } from \"./03.md?vue&type=template&id=ca1284c0&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/@vuepress/core/node_modules/.cache/vuepress\\\",\\\"cacheIdentifier\\\":\\\"2e9acca5-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??ref--1-1!../../../node_modules/@vuepress/markdown-loader/index.js??ref--1-2!./03.md?vue&type=template&id=ca1284c0&\"","module.exports = __webpack_public_path__ + \"assets/img/1d43a1287e7881b87428ede0f85b63bc.1d43a128.png\";","module.exports = __webpack_public_path__ + \"assets/img/53fe0982c70fe89dff733345a6816e6f.53fe0982.png\";","module.exports = __webpack_public_path__ + \"assets/img/a3bbeb6aa533cd06ea5d8f3b9e0b96b2.a3bbeb6a.png\";","module.exports = __webpack_public_path__ + \"assets/img/ebfd65253886552f034c50da3674ce85.ebfd6525.png\";","module.exports = __webpack_public_path__ + \"assets/img/f183b6fb3fba964ab9a9c3f8aa159b09.f183b6fb.png\";","module.exports = __webpack_public_path__ + \"assets/img/image-20210107102334423.a2b78acd.png\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{\"slot-key\":_vm.$parent.slotKey}},[_c('h1',{attrs:{\"id\":\"_07丨正则有哪些常见的流派及其特性\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#_07丨正则有哪些常见的流派及其特性\"}},[_vm._v(\"#\")]),_vm._v(\" 07丨正则有哪些常见的流派及其特性？\")]),_vm._v(\" \"),_c('p',[_vm._v(\"今天我来给你讲讲正则常见的流派及其特性。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"你可能要问了，讲正则流派有啥用呢？不如多来点实战啊。其实，我们去了解正则的演变过程是很有必要的。因为你一旦了解了正则的演变过程之后，就能够更加正确地去使用正则，尤其是在 Linux 系统中。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"那我们就先来看一个有关 Linux 系统的例子，你先来感受一下。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"如果你在 Linux 系统的一些命令行中使用正则，比如使用 grep 过滤内容的时候，你可能会发现结果非常诡异，就像下图这样，在 grep 命令中，使用正则 \"),_c('code',[_vm._v(\"\\\\d+\")]),_vm._v(\" 取不到数据，甚至在 \"),_c('code',[_vm._v(\"egrep\")]),_vm._v(\" 中输出了英文字母 d 那一行。\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/f183b6fb3fba964ab9a9c3f8aa159b09.png\"),\"alt\":\"img\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"这个执行结果的原因就和正则的演变有着密不可分的关系。那到底有什么样的关系呢？我们接着往下看，我从正则的发展历史给你讲起。\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"正则表达式简史\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#正则表达式简史\"}},[_vm._v(\"#\")]),_vm._v(\" 正则表达式简史\")]),_vm._v(\" \"),_c('p',[_vm._v(\"正则表达式的起源，可以追溯到，早期神经系统如何工作的研究。在 20 世纪 40 年代，有两位神经生理学家（Warren  McCulloch 和 Walter Pitts），研究出了一种用数学方式来描述神经网络的方法。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"1956 年，一位数学家（Stephen Kleene）发表了一篇标题为《神经网络事件表示法和有穷自动机》的论文。这篇论文描述了一种叫做「正则集合（Regular Sets）」的符号。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"随后，大名鼎鼎的 Unix 之父 Ken Thompson 于 1968 年发表了文章《正则表达式搜索算法》，并且将正则引入了自己开发的编辑器 qed，以及之后的编辑器 ed 中，然后又移植到了大名鼎鼎的文本搜索工具 grep 中。自此，正则表达式被广泛应用到 Unix 系统或类 Unix 系统 (如 macOS、Linux) 的各种工具中。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"随后，由于正则功能强大，非常实用，越来越多的语言和工具都开始支持正则。不过遗憾的是，由于没有尽早确立标准，导致各种语言和工具中的正则虽然功能大致类似，但仍然有不少细微差别。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"于是，诞生于 1986 年的 POSIX 开始进行标准化的尝试。POSIX 作为一系列规范，定义了 Unix 操作系统应当支持的功能，其中也包括正则表达式的规范。因此，Unix 系统或类 Unix 系统上的大部分工具，如 grep、sed、awk 等，均遵循该标准。我们把这些遵循 POSIX 正则表达式规范的正则表达式，称为 \"),_c('strong',[_vm._v(\"POSIX 流派\")]),_vm._v(\" 的正则表达式。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在 1987 年 12 月，Larry Wall 发布了 Perl 语言第一版，因其功能强大一票走红，所引入的正则表达式功能大放异彩。之后 Perl 语言中的正则表达式不断改进，影响越来越大。于是在此基础上，1997 年又诞生了 PCRE——\"),_c('strong',[_vm._v(\"Perl 兼容正则表达式\")]),_vm._v(\"（Perl Compatible Regular Expressions）。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"PCRE 是一个兼容 Perl 语言正则表达式的解析引擎，是由 Philip Hazel 开发的，为很多现代语言和工具所普遍使用。除了 Unix 上的工具遵循 POSIX 标准，PCRE 现已成为其他大部分语言和工具隐然遵循的标准。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"之后，正则表达式在各种计算机语言或各种应用领域得到了更为广泛的应用和发展。\"),_c('strong',[_vm._v(\"POSIX 流派\")]),_vm._v(\" 与 \"),_c('strong',[_vm._v(\"PCRE 流派\")]),_vm._v(\" 是目前正则表达式流派中的两大最主要的流派。\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"正则表达式流派\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#正则表达式流派\"}},[_vm._v(\"#\")]),_vm._v(\" 正则表达式流派\")]),_vm._v(\" \"),_c('p',[_vm._v(\"就像前面说的一样，目前正则表达式主要有两大流派（Flavor）：POSIX 流派与 PCRE 流派。下面我们分别来看看。\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"_1-posix-流派\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#_1-posix-流派\"}},[_vm._v(\"#\")]),_vm._v(\" 1. POSIX 流派\")]),_vm._v(\" \"),_c('p',[_vm._v(\"这里我们先简要介绍一下 POSIX 流派。POSIX 规范定义了正则表达式的两种标准：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('p',[_c('strong',[_vm._v(\"BRE 标准\")]),_vm._v(\"（Basic Regular Expression 基本正则表达式）；\")])]),_vm._v(\" \"),_c('li',[_c('p',[_c('strong',[_vm._v(\"ERE 标准\")]),_vm._v(\"（Extended Regular Expression 扩展正则表达式）。\")])])]),_vm._v(\" \"),_c('p',[_vm._v(\"接下来，我们一起来看一下这两种标准的异同点。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"bre-标准-和-ere-标准\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#bre-标准-和-ere-标准\"}},[_vm._v(\"#\")]),_vm._v(\" BRE 标准 和 ERE 标准\")]),_vm._v(\" \"),_c('p',[_vm._v(\"早期 BRE 与 ERE 标准的区别主要在于，\"),_c('strong',[_vm._v(\"BRE 标准不支持量词问号和加号，也不支持多选分支结构管道符\")]),_vm._v(\"。BRE 标准在使用花括号，圆括号时要转义才能表示特殊含义。BRE 标准用起来这么不爽，于是有了 ERE 标准，在使用花括号，圆括号时不需要转义了，还支持了问号、加号 和 多选分支。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"我们现在使用的 Linux 发行版，大多都集成了 GNU 套件。GNU 在实现 POSIX 标准时，做了一定的扩展，主要有以下三点扩展。\")]),_vm._v(\" \"),_c('ol',[_c('li',[_c('p',[_vm._v(\"GNU BRE 支持了 \"),_c('code',[_vm._v(\"+、?\")]),_vm._v(\"，但转义了才表示特殊含义，即需要用  \"),_c('code',[_vm._v(\"\\\\+、\\\\?\")]),_vm._v(\" 表示。\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"GNU BRE 支持管道符多选分支结构，同样需要转义，即用 \"),_c('code',[_vm._v(\"\\\\|\")]),_vm._v(\" 表示。\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"GNU ERE 也支持使用反引用，和 BRE 一样，使用 \"),_c('code',[_vm._v(\"\\\\1、\\\\2…\\\\9\")]),_vm._v(\"  表示。\")])])]),_vm._v(\" \"),_c('p',[_vm._v(\"BRE 标准和 ERE 标准的详细区别，我给了你一个参考图，你可以看一下，浅黄色背景是 BRE 和 ERE 不同的地方，三处天蓝色字体是 GNU 扩展。\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/53fe0982c70fe89dff733345a6816e6f.png\"),\"alt\":\"img\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"总之，GNU BRE 和 GNU ERE 它们的功能特性并没有太大区别，区别是在于部分语法层面上，主要是一些字符要不要转义。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"posix-字符组\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#posix-字符组\"}},[_vm._v(\"#\")]),_vm._v(\" POSIX 字符组\")]),_vm._v(\" \"),_c('p',[_vm._v(\"POSIX 流派还有一个特殊的地方，就是有自己的字符组，叫 POSIX 字符组。这个类似于我们之前学习的  \"),_c('code',[_vm._v(\"\\\\d\")]),_vm._v(\"  表示数字，\"),_c('code',[_vm._v(\"\\\\s\")]),_vm._v(\"  表示空白符等，POSIX 中也定义了一系列的字符组。具体的清单和解释如下所示：\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"assets/c32024952cb6af3f78d9c08d9b5b3yya.png\",\"alt\":\"img\"}})]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"_2-pcre-流派\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#_2-pcre-流派\"}},[_vm._v(\"#\")]),_vm._v(\" 2. PCRE 流派\")]),_vm._v(\" \"),_c('p',[_vm._v(\"除了 POSIX 标准外，还有一个 Perl 分支，也就是我们现在熟知的 PCRE。随着 Perl 语言的发展，Perl 语言中的正则表达式功能越来越强悍，为了把 Perl 语言中正则的功能移植到其他语言中，PCRE 就诞生了。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"目前大部分常用编程语言都是源于 PCRE 标准，这个流派显著特征是有 \"),_c('code',[_vm._v(\"\\\\d\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"\\\\w\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"\\\\s\")]),_vm._v(\" 这类字符组简记方式。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"不过，虽然 PCRE 流派是从 Perl 语言中衍生出来的，但与 Perl 语言中的正则表达式在语法上还是有一些细微差异，感兴趣的可以去看看 PHP 的 preg 正则表达式 (Perl Regular Expression) 与 Perl 正则表达式的差异\")]),_vm._v(\" \"),_c('p',[_vm._v(\"考虑到目前绝大部分常用编程语言所采用的正则引擎，基本都属于 PCRE 流派的现实情况，我们的课程也是主要讲解 PCRE 流派。前面，对于正则表达式语法元素的解释都是以 PCRE 流派为准。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"pcre-流派的兼容问题\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#pcre-流派的兼容问题\"}},[_vm._v(\"#\")]),_vm._v(\" PCRE 流派的兼容问题\")]),_vm._v(\" \"),_c('p',[_vm._v(\"虽然 PCRE 流派是与 Perl 正则表达式相兼容的流派，但这种兼容在各种语言和工具中还存在程度上的差别，这包括了 \"),_c('strong',[_vm._v(\"直接兼容\")]),_vm._v(\" 与 \"),_c('strong',[_vm._v(\"间接兼容\")]),_vm._v(\" 两种情况。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"而且，即便是直接兼容，也并非完全兼容，还是存在部分不兼容的情况。原因也很简单，Perl 语言中的正则表达式在不断改进和升级之中，其他语言和工具不可能完全做到实时跟进与更新。\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('p',[_c('strong',[_vm._v(\"直接兼容\")]),_vm._v(\"，PCRE 流派中与 Perl 正则表达式直接兼容的语言或工具。比如 Perl、PHP  preg、PCRE 库等，一般称之为 Perl 系。\")])]),_vm._v(\" \"),_c('li',[_c('p',[_c('strong',[_vm._v(\"间接兼容\")]),_vm._v(\"，比如 Java 系（包括 Java、Groovy、Scala 等）、Python 系（包括 Python2 和 Python3）、JavaScript 系（包括原生 JavaScript 和扩展库 XRegExp）、.Net 系（包括 \"),_c('code',[_vm._v(\"C#\")]),_vm._v(\"、VB.Net 等）等。\")])])]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"在-linux-中使用正则\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#在-linux-中使用正则\"}},[_vm._v(\"#\")]),_vm._v(\" 在 Linux 中使用正则\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在遵循 POSIX 规范的 UNIX/LINUX 系统上，按照 \"),_c('strong',[_vm._v(\"BRE 标准\")]),_vm._v(\" 实现的有 grep、sed 和 \"),_c('code',[_vm._v(\"vi/vim\")]),_vm._v(\" 等，而按照 \"),_c('strong',[_vm._v(\"ERE 标准\")]),_vm._v(\" 实现的有 egrep、awk 等。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在 UNIX/LINUX 系统里 PCRE 流派与 POSIX 流派的对比，我为你整理了一个表，你可以看一下。\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/ebfd65253886552f034c50da3674ce85.png\"),\"alt\":\"img\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"刚刚我们能提到了工具对应的实现标准，其实有一些工具实现同时兼容多种正则标准，比如前面我们讲到的 grep 和 sed。如果在使用时加上\"),_c('code',[_vm._v(\"-E\")]),_vm._v(\" 选项，就是使用 ERE 标准；如果加上 \"),_c('code',[_vm._v(\"-P\")]),_vm._v(\" 选项，就是使用 PCRE 标准。\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"# 使用 ERE 标准\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"grep\")]),_vm._v(\" -E \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'[[:digit:]]+'\")]),_vm._v(\" access.log\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"# 使用 PCRE 标准\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"grep\")]),_vm._v(\" -P \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'\\\\d+'\")]),_vm._v(\" access.log\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br')])]),_c('p',[_vm._v(\"在使用具体命令时，如何知道属于哪个流派呢？你不用担心太多了记不住。在 Linux 系统中有个 man 命令可以帮助我们。比如，我在 macOS 上执行 man grep ，可以看到选项 \"),_c('code',[_vm._v(\"-G\")]),_vm._v(\" 是指定使用 BRE 标准（默认），\"),_c('code',[_vm._v(\"-E\")]),_vm._v(\" 是 ERE 标准，\"),_c('code',[_vm._v(\"-P\")]),_vm._v(\" 是 PCRE 标准。所以，在使用具体工具时，你通过这个方法查一下命令的说明就好了。\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/1d43a1287e7881b87428ede0f85b63bc.png\"),\"alt\":\"img\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"我们再看开篇提出的问题。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"通过今天的学习，我们搞懂了各流派的差异，以及命令实现的是哪个正则标准。在 grep 中使用  \"),_c('code',[_vm._v(\"\\\\d+\")]),_vm._v(\" 查找不到结果，\"),_c('strong',[_vm._v(\"是因为 grep 属于 BRE 流派\")]),_vm._v(\"，不支持  \"),_c('code',[_vm._v(\"\\\\d\")]),_vm._v(\"  来表示数字，加号也要转义才能表示量词的一到多次，所以无法找出数字那一行。如果你一定要用 BRE 流派，可以通过 \"),_c('strong',[_vm._v(\"使用 POSIX 字符组\")]),_vm._v(\" 和  \"),_c('strong',[_vm._v(\"转义加号\")]),_vm._v(\" 来实现。而 egrep 属于 ERE 流派，也不支持 \"),_c('code',[_vm._v(\"\\\\d\")]),_vm._v(\"，\"),_c('code',[_vm._v(\"\\\\d\")]),_vm._v(\" 相当于字母 d，所以找到了字母那一行。\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/f183b6fb3fba964ab9a9c3f8aa159b09.png\"),\"alt\":\"img\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"在 grep 命令中，你可以指定参数 \"),_c('code',[_vm._v(\"-P\")]),_vm._v(\" 来使用 PCRE 流派，这样就和我们之前学习到的是一致的了。知道了原因之后，你应该能写出相应的解决方法。下图是一些能工作的方法。\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/a3bbeb6aa533cd06ea5d8f3b9e0b96b2.png\"),\"alt\":\"img\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"为了方便加深你的理解，我给你提供了一个例子来帮你巩固。你可以使用下面的文本，在 Linux 中使用 grep 命令练习查找包含一到多个数字的行。\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"123456\\nabcdef\\n\\\\d\\n\\\\d+\\nd+\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br')])]),_c('p',[_vm._v(\"比如\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"grep\")]),_vm._v(\" -P \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'\\\\d+'\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_vm._v(\".txt\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"123456\")]),_vm._v(\"\\n\\n$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"grep\")]),_vm._v(\" -P \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'[[:digit:]]+'\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_vm._v(\".txt\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"123456\")]),_vm._v(\"\\n\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br')])]),_c('h2',{attrs:{\"id\":\"总结\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#总结\"}},[_vm._v(\"#\")]),_vm._v(\" 总结\")]),_vm._v(\" \"),_c('p',[_vm._v(\"今天我带你简单回顾了下正则表达式的历史。正则主要有两大流派，分别是 \"),_c('strong',[_vm._v(\"POSIX 流派\")]),_vm._v(\" 和 \"),_c('strong',[_vm._v(\"PCRE 流派\")]),_vm._v(\"。其中 POSIX 流派有两个标准，分别是 BRE 标准和 ERE 标准，**一般情况下，我们面对的都是 GNU BRE 和 GNU ERE。它们的主要区别在于，前者要转义。**另外， POSIX 流派一个特点就是有自己的字符组 POSIX 字符组，这不同于常见的 \"),_c('code',[_vm._v(\"\\\\d\")]),_vm._v(\"  等字符组。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"PCRE 流派是如今大多数编程语言实现的流派，最大的特点就是支持\\\\d\\\\s\\\\w 等，我们前面讲的内容也是基于这个流派进行的。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"如果你需要在类 Unix 平台命令等上使用正则，使用前需要搞清楚工具属于哪个标准，比如 grep、sed、\"),_c('code',[_vm._v(\"vi/vim\")]),_vm._v(\" 等属于 BRE 标准，egrep、awk 属于 ERE 标准。而 \"),_c('code',[_vm._v(\"sed -P\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"grep -P\")]),_vm._v(\" 等属于 PCRE 流派。这些也不需要死记硬背，使用时用 man 命令看一下就好了。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"我在这里给你放了一张今天所讲内容的总结脑图，你可以看一下。另外我还给你提供了一个记忆小窍门，你可以着重记忆一下这句话：\"),_c('strong',[_vm._v(\"GNU ERE 名称中有两个 E，不需要再转义。而 GNU BRE 只有一个 E，使用时「花圆问管加」时都要转义\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/image-20210107102334423.png\"),\"alt\":\"image-20210107102334423\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"此外这里有一个拓展阅读  \"),_c('a',{attrs:{\"href\":\"https://www.cnblogs.com/code-style/p/3335240.html\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"Linux/Unix 工具与正则表达式的 POSIX 规范（余晟）\"),_c('OutboundLink')],1)]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"课后思考\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#课后思考\"}},[_vm._v(\"#\")]),_vm._v(\" 课后思考\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在 Linux 上使用 grep 命令，分别实现使用不同的标准（即 BRE、ERE、PCRE ），来查找含有 ftp、http 或 https 的行。你可以动手体验一下不同标准的区别。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"测试文本为：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"https://time.geekbang.org\\nhttp://time.geekbang.org\\nftp://ftp.ncbi.nlm.nih.gov\\nwww.baidu.com\\nwww.ncbi.nlm.nih.gov\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br')])]),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"# BRE 标准，需要转义 |\")]),_vm._v(\"\\n$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"grep\")]),_vm._v(\"  \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'ftp\\\\|http\\\\| https'\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_vm._v(\".txt\\nhttps://time.geekbang.org\\nhttp://time.geekbang.org\\nftp://ftp.ncbi.nlm.nih.gov\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"# ERE 标准，不需要转义 |\")]),_vm._v(\"\\n$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"grep\")]),_vm._v(\" -E \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'ftp|http|https'\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_vm._v(\".txt\\nhttps://time.geekbang.org\\nhttp://time.geekbang.org\\nftp://ftp.ncbi.nlm.nih.gov\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"# ERE 标准\")]),_vm._v(\"\\n$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"egrep\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'ftp|http|https'\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_vm._v(\".txt\\nhttps://time.geekbang.org\\nhttp://time.geekbang.org\\nftp://ftp.ncbi.nlm.nih.gov\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"# PCRE 标准，不需要转义 |\")]),_vm._v(\"\\n$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"grep\")]),_vm._v(\" -P \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'ftp|http|https'\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_vm._v(\".txt\\nhttps://time.geekbang.org\\nhttp://time.geekbang.org\\nftp://ftp.ncbi.nlm.nih.gov\\n\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"8\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"9\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"10\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"11\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"12\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"13\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"14\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"15\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"16\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"17\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"18\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"19\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"20\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"21\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"22\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"23\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"24\")]),_c('br')])]),_c('p',[_vm._v(\"上述有一个问题，如果只查询包含 http 而不是 https 的呢？可以使用之前学过的 \"),_c('strong',[_vm._v(\"环视功能\")])]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"# http 右边不能是 s\")]),_vm._v(\"\\n$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"grep\")]),_vm._v(\" -P \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'http(?!s)'\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_vm._v(\".txt\\nhttp://time.geekbang.org\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br')])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"sourceRoot":""}