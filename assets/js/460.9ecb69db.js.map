{"version":3,"sources":["webpack:///./docs/elasticsearch-senior/depth-search/25-vector-space-model.md","webpack:///./docs/elasticsearch-senior/depth-search/25-vector-space-model.md?2d4e","webpack:///./docs/elasticsearch-senior/depth-search/25-vector-space-model.md?2d37"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAmG;AACnG;;;AAGA;AAC6F;AAC7F,gBAAgB,2GAAU;AAC1B;AACA,EAAE,+FAAM;AACR,EAAE,wGAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,gF;;;;;;;;;;;;ACjBf;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA,0BAA0B,aAAa,0BAA0B,wBAAwB,qCAAqC,OAAO,gCAAgC,WAAW,OAAO,4BAA4B,UAAU,mCAAmC,+BAA+B,+EAA+E,gCAAgC,4BAA4B,OAAO,yBAAyB,+CAA+C,OAAO,kBAAkB,wCAAwC,OAAO,8BAA8B,oDAAoD,OAAO,wBAAwB,8CAA8C,OAAO,sBAAsB,sUAAsU,OAAO,sBAAsB,UAAU,mCAAmC,yBAAyB,4LAA4L,0CAA0C,YAAY,gBAAgB,yBAAyB,mQAAmQ,mCAAmC,aAAa,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,sCAAsC,OAAO,eAAe,UAAU,mCAAmC,kBAAkB,0FAA0F,OAAO,yDAAyD,qLAAqL,0CAA0C,YAAY,gBAAgB,yBAAyB,4KAA4K,mCAAmC,aAAa,0BAA0B,oCAAoC,0BAA0B,2iBAA2iB,kTAAkT,OAAO,2BAA2B,UAAU,mCAAmC,8BAA8B,8LAA8L,OAAO,qBAAqB,UAAU,mCAAmC,wBAAwB,uXAAuX,OAAO,mBAAmB,UAAU,mCAAmC,sBAAsB,uLAAuL,0CAA0C,YAAY,gBAAgB,yBAAyB,uIAAuI,mCAAmC,aAAa,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,iPAAiP;AACxvK","file":"assets/js/460.9ecb69db.js","sourcesContent":["import { render, staticRenderFns } from \"./25-vector-space-model.md?vue&type=template&id=3f9c51a7&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/@vuepress/core/node_modules/.cache/vuepress\\\",\\\"cacheIdentifier\\\":\\\"2e9acca5-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??ref--1-1!../../../node_modules/@vuepress/markdown-loader/index.js??ref--1-2!./25-vector-space-model.md?vue&type=template&id=3f9c51a7&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{\"slot-key\":_vm.$parent.slotKey}},[_c('h1',{attrs:{\"id\":\"tf-idf-算法以及向量空间模型算法\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#tf-idf-算法以及向量空间模型算法\"}},[_vm._v(\"#\")]),_vm._v(\" TF&IDF 算法以及向量空间模型算法\")]),_vm._v(\" \"),_c('p'),_c('div',{staticClass:\"table-of-contents\"},[_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"#boolean-model\"}},[_vm._v(\"boolean model\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#tf-idf\"}},[_vm._v(\"TF/IDF\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#vector-space-model\"}},[_vm._v(\"vector space model\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#query-vector\"}},[_vm._v(\"query vector\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#doc-vector\"}},[_vm._v(\"doc vector\")])])])]),_c('p'),_vm._v(\" \"),_c('p',[_vm._v(\"es 里的得分算法主要是 3 部分\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"boolean model\")]),_vm._v(\" \"),_c('li',[_vm._v(\"TF/IDF\")]),_vm._v(\" \"),_c('li',[_vm._v(\"vector space model 向量空间模型算法\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"前面两个只是简单的过一下，主要是向量空间模型算法\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"boolean-model\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#boolean-model\"}},[_vm._v(\"#\")]),_vm._v(\" boolean model\")]),_vm._v(\" \"),_c('p',[_vm._v(\"类似 and 这种逻辑操作符，先过滤出包含指定 term 的 doc\")]),_vm._v(\" \"),_c('blockquote',[_c('p',[_vm._v(\"举个例子\")])]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"query \\\"hello world\\\" --> 过滤出包含 --> hello / world / hello & world 的 doc\\nbool --> must/must not/should --> 过滤 --> 包含 / 不包含 / 可能包含\\ndoc --> 经过条件过滤之后，这些步骤是不打分数 --> 正或反 true or false --> 为了减少后续要计算的 doc 的数量，提升性能\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br')])]),_c('h2',{attrs:{\"id\":\"tf-idf\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#tf-idf\"}},[_vm._v(\"#\")]),_vm._v(\" TF/IDF\")]),_vm._v(\" \"),_c('p',[_vm._v(\"详细请参考 \"),_c('RouterLink',{attrs:{\"to\":\"/elasticsearch-core/search-engine/55-tf-idf.html\"}},[_vm._v(\"相关度评分 TF&IDF 算法独家解密\")])],1),_vm._v(\" \"),_c('p',[_vm._v(\"简单或就是计算单个 term 在 doc 中的分数\")]),_vm._v(\" \"),_c('p',[_vm._v(\"比如要查询 content 中查询「hello world」\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"doc1: java is my favourite programming language, hello world !!!\\ndoc2: hello java, you are very good, oh hello world!!!\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br')])]),_c('p',[_vm._v(\"hello 对 doc1 的评分\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('p',[_vm._v(\"TF: term frequency\")]),_vm._v(\" \"),_c('p',[_vm._v(\"找到 hello 在 doc1 中出现了几次，1次，会根据出现的次数给个分数\\n一个 term 在一个 doc 中，出现的次数越多，那么最后给的相关度评分就会越高\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"IDF：inversed document frequency\")]),_vm._v(\" \"),_c('p',[_vm._v(\"找到 hello 在所有的 doc 中出现的次数，3 次\\n一个 term 在所有的 doc 中，出现的次数越多，那么最后给的相关度评分就会越低\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"length norm\")]),_vm._v(\" \"),_c('p',[_vm._v(\"hello 搜索的那个 field 的长度，field 长度越长，给的相关度评分越低;\\nfield 长度越短，给的相关度评分越高\")])])]),_vm._v(\" \"),_c('p',[_vm._v(\"最后，会将 hello 这个 term，对 doc1 的分数，综合 TF，IDF，length norm，计算出来一个综合性的分数\")]),_vm._v(\" \"),_c('p',[_vm._v(\"hello world --> doc1 --> hello 对 doc1的分数，world 对 doc1 的分数 --> 但是最后 hello world query 要对 doc1 有一个总的分数 --> vector space model\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"vector-space-model\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#vector-space-model\"}},[_vm._v(\"#\")]),_vm._v(\" vector space model\")]),_vm._v(\" \"),_c('p',[_vm._v(\"这个是一个数学上的概念，很复杂。这里举例让你明白大概是个什么东西、\")]),_vm._v(\" \"),_c('p',[_vm._v(\"计算多个 term 对一个 doc 的总分数\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"query-vector\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#query-vector\"}},[_vm._v(\"#\")]),_vm._v(\" query vector\")]),_vm._v(\" \"),_c('p',[_vm._v(\"hello world --> es 会根据 hello world 在所有 doc 中的评分情况，计算出一个 query vector，query 向量\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"hello 这个 term，给的基于所有 doc 的一个评分就是 2\")]),_vm._v(\" \"),_c('li',[_vm._v(\"world 这个 term，给的基于所有 doc 的一个评分就是 5\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"query vertor 就是 [2, 5]\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"doc-vector\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#doc-vector\"}},[_vm._v(\"#\")]),_vm._v(\" doc vector\")]),_vm._v(\" \"),_c('p',[_vm._v(\"3 个 doc,会给每一个 doc，拿每个 term 计算出一个分数来，hello 有一个分数，world 有一个分数，再拿所有 term 的分数组成一个 doc vector\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"doc1：包含 hello --> [2, 0]\\ndoc2：包含 world --> [0, 5]\\ndoc3：包含 hello, world --> [2, 5]\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br')])]),_c('p',[_vm._v(\"画在一个图中（图也很简单，不截图了），取每个 doc vector 对 query vector 的弧度，给出每个 doc 对多个 term 的总分数\")]),_vm._v(\" \"),_c('p',[_vm._v(\"每个 doc vector 计算出对 query vector 的弧度，最后基于这个弧度给出一个 doc 相对于 query 中多个 term 的总分数\\n弧度越大，分数月底; 弧度越小，分数越高\")]),_vm._v(\" \"),_c('p',[_vm._v(\"如果是多个 term，那么就是线性代数来计算，无法用图表示\")]),_vm._v(\" \"),_c('p',[_vm._v(\"这个反正也没有看懂。知道是这么个名词就行了\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"sourceRoot":""}