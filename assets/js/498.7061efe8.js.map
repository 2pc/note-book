{"version":3,"sources":["webpack:///./docs/git-scm/02/01.md","webpack:///./docs/git-scm/02/01.md?171f","webpack:///./docs/git-scm/02/01.md?8598"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAgF;AAChF;;;AAGA;AAC6F;AAC7F,gBAAgB,2GAAU;AAC1B;AACA,EAAE,4EAAM;AACR,EAAE,qFAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,gF;;;;;;;;;;;;ACjBf;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA,0BAA0B,aAAa,0BAA0B,wBAAwB,qCAAqC,OAAO,gCAAgC,WAAW,OAAO,kBAAkB,UAAU,mCAAmC,qBAAqB,mMAAmM,OAAO,oBAAoB,UAAU,mCAAmC,uBAAuB,8GAA8G,0CAA0C,YAAY,gBAAgB,yBAAyB,4DAA4D,mCAAmC,aAAa,0BAA0B,4QAA4Q,8CAA8C,YAAY,gBAAgB,yBAAyB,wBAAwB,gBAAgB,yBAAyB,0DAA0D,gBAAgB,0BAA0B,yCAAyC,gBAAgB,0BAA0B,gDAAgD,gBAAgB,0BAA0B,yCAAyC,gBAAgB,0BAA0B,oDAAoD,gBAAgB,yBAAyB,wDAAwD,gBAAgB,0BAA0B,mDAAmD,gBAAgB,wBAAwB,+EAA+E,mCAAmC,aAAa,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,sCAAsC,OAAO,eAAe,UAAU,mCAAmC,kBAAkB,sUAAsU,0CAA0C,YAAY,gBAAgB,yBAAyB,kGAAkG,mCAAmC,aAAa,0BAA0B,8WAA8W,0CAA0C,YAAY,gBAAgB,yBAAyB,2GAA2G,mCAAmC,aAAa,0BAA0B;AAC3sH","file":"assets/js/498.7061efe8.js","sourcesContent":["import { render, staticRenderFns } from \"./01.md?vue&type=template&id=c14e695c&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/@vuepress/core/node_modules/.cache/vuepress\\\",\\\"cacheIdentifier\\\":\\\"2e9acca5-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??ref--1-1!../../../node_modules/@vuepress/markdown-loader/index.js??ref--1-2!./01.md?vue&type=template&id=c14e695c&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{\"slot-key\":_vm.$parent.slotKey}},[_c('h1',{attrs:{\"id\":\"获取-git-仓库\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#获取-git-仓库\"}},[_vm._v(\"#\")]),_vm._v(\" 获取 Git 仓库\")]),_vm._v(\" \"),_c('p',[_vm._v(\"有两种方式：\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"在现有目录中初始化仓库\")]),_vm._v(\" \"),_c('li',[_vm._v(\"克隆现有仓库\")])]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"在现有目录中初始化仓库\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#在现有目录中初始化仓库\"}},[_vm._v(\"#\")]),_vm._v(\" 在现有目录中初始化仓库\")]),_vm._v(\" \"),_c('p',[_vm._v(\"进入项目目录，并输入以下命令\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"git init\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('p',[_vm._v(\"该命令将创建一个名为 \"),_c('code',[_vm._v(\".git\")]),_vm._v(\" 的子目录，这个子目录含有你初始化的 Git 仓库中所有的必须文件，这些文件是 Git 仓库的骨干。 但是，在这个时候，我们仅仅是做了一个初始化的操作，你的项目里的文件还没有被跟踪。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"可以通过如下命令，对你的文件进行跟踪并提交。\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"# add 命令对指定文件进行跟踪\")]),_vm._v(\"\\n$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"add\")]),_vm._v(\" *.c\\n$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"add\")]),_vm._v(\" LICENSE\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"# commit 命令进行提交\")]),_vm._v(\"\\n$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" commit -m \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'initial project version'\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br')])]),_c('h2',{attrs:{\"id\":\"克隆现有仓库\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#克隆现有仓库\"}},[_vm._v(\"#\")]),_vm._v(\" 克隆现有仓库\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Git 克隆的是该 Git 仓库服务器上的几乎所有数据，而不是仅仅复制完成你的工作所需要文件。 当你执行 git clone 命令的时候，默认配置下远程 Git 仓库中的每一个文件的每一个版本都将被拉取下来。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"克隆仓库的命令格式是 \"),_c('code',[_vm._v(\"git clone [url]\")]),_vm._v(\" 。 比如，要克隆 Git 的可链接库 libgit2，可以用下面的命令：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"$ git clone https://github.com/libgit2/libgit2\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('p',[_vm._v(\"这会在当前目录下创建一个名为 「libgit2」 的目录，并在这个目录下初始化一个 \"),_c('code',[_vm._v(\".git\")]),_vm._v(\" 文件夹，从远程仓库拉取下所有数据放入 \"),_c('code',[_vm._v(\".git\")]),_vm._v(\" 文件夹，然后从中读取最新版本的文件的拷贝。 如果你进入到这个新建的 libgit2 文件夹，你会发现所有的项目文件已经在里面了，准备就绪等待后续的开发和使用。 如果你想在克隆远程仓库的时候，\"),_c('strong',[_vm._v(\"自定义本地仓库的名字\")]),_vm._v(\"，你可以使用如下命令：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"$ git clone https://github.com/libgit2/libgit2 mylibgit\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('p',[_vm._v(\"这将执行与上一个命令相同的操作，不过在本地创建的仓库名字变为 mylibgit。\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"sourceRoot":""}