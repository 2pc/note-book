{"version":3,"sources":["webpack:///./docs/git-scm/04/05.md","webpack:///./docs/git-scm/04/05.md?5fdb","webpack:///./docs/git-scm/04/05.md?2d60"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAgF;AAChF;;;AAGA;AAC6F;AAC7F,gBAAgB,2GAAU;AAC1B;AACA,EAAE,4EAAM;AACR,EAAE,qFAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,gF;;;;;;;;;;;;ACjBf;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA,0BAA0B,aAAa,0BAA0B,wBAAwB,qCAAqC,OAAO,gCAAgC,WAAW,OAAO,iBAAiB,UAAU,mCAAmC,oBAAoB,ghBAAghB,8CAA8C,YAAY,gBAAgB,yBAAyB,wBAAwB,gBAAgB,0BAA0B,uEAAuE,gBAAgB,0BAA0B,0EAA0E,mCAAmC,aAAa,0BAA0B,gdAAgd,0CAA0C,YAAY,gBAAgB,yBAAyB,iFAAiF,mCAAmC,aAAa,0BAA0B,kFAAkF,0CAA0C,YAAY,gBAAgB,yBAAyB,4NAA4N,mCAAmC,aAAa,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,6YAA6Y,0CAA0C,YAAY,gBAAgB,yBAAyB,kFAAkF,mCAAmC,aAAa,0BAA0B,qUAAqU,0CAA0C,YAAY,gBAAgB,yBAAyB,2GAA2G,mCAAmC,aAAa,0BAA0B,oCAAoC,0BAA0B;AACrjI","file":"assets/js/511.c2b1907d.js","sourcesContent":["import { render, staticRenderFns } from \"./05.md?vue&type=template&id=08538652&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/@vuepress/core/node_modules/.cache/vuepress\\\",\\\"cacheIdentifier\\\":\\\"2e9acca5-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??ref--1-1!../../../node_modules/@vuepress/markdown-loader/index.js??ref--1-2!./05.md?vue&type=template&id=08538652&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{\"slot-key\":_vm.$parent.slotKey}},[_c('h1',{attrs:{\"id\":\"git-守护进程\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#git-守护进程\"}},[_vm._v(\"#\")]),_vm._v(\" Git 守护进程\")]),_vm._v(\" \"),_c('p',[_vm._v(\"接下来我们将通过  \"),_c('strong',[_vm._v(\"“Git”  协议\")]),_vm._v(\" 建立一个基于守护进程的仓库。 对于 \"),_c('strong',[_vm._v(\"快速且无需授权的 Git 数据访问\")]),_vm._v(\"，这是一个理想之选。 请注意，因为其不包含授权服务，任何通过该协议管理的内容将在其网络上公开。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"如果运行在防火墙之外的服务器上，它应该只对那些公开的只读项目服务。 如果运行在防火墙之内的服务器上，它可用于支撑大量参与人员或 \"),_c('strong',[_vm._v(\"自动系统\")]),_vm._v(\"（用于持续集成或编译的主机）只读访问的项目，这样可以省去逐一配置 SSH 公钥的麻烦。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"无论何时，该 Git 协议都是相对容易设定的。 通常，你只需要以守护进程的形式运行该命令：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" daemon --reuseaddr --base-path\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"/opt/git/ /opt/git/\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('ul',[_c('li',[_c('p',[_c('code',[_vm._v(\"--reuseaddr\")]),_vm._v(\" 允许服务器在无需等待旧连接超时的情况下重启\")])]),_vm._v(\" \"),_c('li',[_c('p',[_c('code',[_vm._v(\"--base-path\")]),_vm._v(\" 选项允许用户在未完全指定路径的条件下克隆项目\")])])]),_vm._v(\" \"),_c('p',[_vm._v(\"结尾的路径将告诉 Git 守护进程从何处寻找仓库来导出。 如果有防火墙正在运行，你需要开放端口 9418 的通信权限。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"你可以通过许多方式将该进程以守护进程的方式运行，这主要取决于你所使用的操作系统。 在一台 Ubuntu 机器上，你可以使用一份 Upstart 脚本。 因此，找到如下文件：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"/etc/event.d/local-git-daemon\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('p',[_vm._v(\"并添加下列脚本内容：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"start on startup\\nstop on shutdown\\nexec /usr/bin/git daemon \\\\\\n    --user=git --group=git \\\\\\n    --reuseaddr \\\\\\n    --base-path=/opt/git/ \\\\\\n    /opt/git/\\nrespawn\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"8\")]),_c('br')])]),_c('p',[_vm._v(\"出于安全考虑，强烈建议使用一个 \"),_c('strong',[_vm._v(\"对仓库拥有只读权限\")]),_vm._v(\" 的用户身份来运行该守护进程 – 你可以创建一个新用户 \"),_c('em',[_vm._v(\"git-ro\")]),_vm._v(\" 并且以该用户身份来运行守护进程。 为简便起见，我们将像 git-shell 一样，同样使用 \"),_c('em',[_vm._v(\"git\")]),_vm._v(\" 用户来运行它。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"当你重启机器时，你的 Git 守护进程将会自动启动，并且如果进程被意外结束它会自动重新运行。 为了在不重启的情况下直接运行，你可以运行以下命令：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"initctl start local-git-daemon\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('p',[_vm._v(\"在其他系统中，你可以使用 sysvinit 系统中的 xinetd 脚本，或者另外的方式来实现 – 只要你能够将其命令守护进程化并实现监控。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"接下来，你需要 \"),_c('strong',[_vm._v(\"告诉 Git 哪些仓库允许基于服务器的无授权访问\")]),_vm._v(\"。 你可以在每个仓库下创建一个名为 \"),_c('code',[_vm._v(\"git-daemon-export-ok\")]),_vm._v(\" 的文件来实现。\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"$ cd /path/to/project.git\\n$ touch git-daemon-export-ok\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br')])]),_c('p',[_vm._v(\"该文件将允许 Git 提供无需授权的项目访问服务。\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"sourceRoot":""}