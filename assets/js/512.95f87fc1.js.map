{"version":3,"sources":["webpack:///./docs/git-scm/04/06.md","webpack:///./docs/git-scm/04/06.md?bdcf","webpack:///./docs/git-scm/04/06.md?504d"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAgF;AAChF;;;AAGA;AAC6F;AAC7F,gBAAgB,2GAAU;AAC1B;AACA,EAAE,4EAAM;AACR,EAAE,qFAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,gF;;;;;;;;;;;;ACjBf;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA,0BAA0B,aAAa,0BAA0B,wBAAwB,qCAAqC,OAAO,gCAAgC,WAAW,OAAO,mBAAmB,UAAU,mCAAmC,sBAAsB,ywBAAywB,0CAA0C,YAAY,gBAAgB,yBAAyB,yHAAyH,mCAAmC,aAAa,0BAA0B,oCAAoC,0BAA0B,uPAAuP,0CAA0C,YAAY,gBAAgB,yBAAyB,uKAAuK,mCAAmC,aAAa,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,qRAAqR,0CAA0C,YAAY,gBAAgB,yBAAyB,gMAAgM,mCAAmC,aAAa,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,uGAAuG,0CAA0C,YAAY,gBAAgB,yBAAyB,kOAAkO,mCAAmC,aAAa,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,yKAAyK,0CAA0C,YAAY,gBAAgB,yBAAyB,2GAA2G,mCAAmC,aAAa,0BAA0B;AACltI","file":"assets/js/512.95f87fc1.js","sourcesContent":["import { render, staticRenderFns } from \"./06.md?vue&type=template&id=402f109e&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/@vuepress/core/node_modules/.cache/vuepress\\\",\\\"cacheIdentifier\\\":\\\"2e9acca5-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??ref--1-1!../../../node_modules/@vuepress/markdown-loader/index.js??ref--1-2!./06.md?vue&type=template&id=402f109e&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{\"slot-key\":_vm.$parent.slotKey}},[_c('h1',{attrs:{\"id\":\"smart-http\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#smart-http\"}},[_vm._v(\"#\")]),_vm._v(\" Smart HTTP\")]),_vm._v(\" \"),_c('p',[_vm._v(\"我们一般通过 \"),_c('strong',[_vm._v(\"SSH 进行授权访问\")]),_vm._v(\"，通过 \"),_c('code',[_vm._v(\"git://\")]),_vm._v(\" \"),_c('strong',[_vm._v(\"进行无授权访问\")]),_vm._v(\"，但是还有一种协议可以 \"),_c('strong',[_vm._v(\"同时实现以上两种方式的访问\")]),_vm._v(\"。 设置 Smart HTTP 一般只需要在服务器上启用一个 Git 自带的名为 \"),_c('code',[_vm._v(\"git-http-backend\")]),_vm._v(\" 的 CGI 脚本。 该 CGI 脚本将会读取由 \"),_c('code',[_vm._v(\"git fetch\")]),_vm._v(\" 或 \"),_c('code',[_vm._v(\"git push\")]),_vm._v(\" 命令向 HTTP URL 发送的请求路径和头部信息，来判断该客户端是否支持 HTTP 通信（不低于 1.6.6 版本的客户端支持此特性）。 如果 CGI 发现该客户端支持智能（Smart）模式，它将会以智能模式与它进行通信，否则它将会回落到哑（Dumb）模式下（因此它可以对某些老的客户端实现向下兼容）。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在完成以上简单的安装步骤后， 我们将用 Apache 来作为 CGI 服务器。 如果你没有安装 Apache，你可以在 Linux 环境下执行如下或类似的命令来安装：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"$ sudo apt-get install apache2 apache2-utils\\n$ a2enmod cgi alias env\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br')])]),_c('p',[_vm._v(\"该操作将会启用 mod_cgi， mod_alias， 和 mod_env 等 Apache 模块， 这些模块都是使该功能正常工作所必须的。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"接下来我们要向 Apache 配置文件添加一些内容，来让 git-http-backend 作为 Web 服务器对 /git 路径请求的处理器。\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"SetEnv GIT_PROJECT_ROOT /opt/git\\nSetEnv GIT_HTTP_EXPORT_ALL\\nScriptAlias /git/ /usr/lib/git-core/git-http-backend/\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br')])]),_c('p',[_vm._v(\"如果留空 \"),_c('code',[_vm._v(\"GIT_HTTP_EXPORT_ALL\")]),_vm._v(\" 这个环境变量，Git 将只对无授权客户端提供带 git-daemon-export-ok 文件的版本库，就像 Git 守护进程一样。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"接着你需要让 Apache 接受通过该路径的请求，添加如下的内容至 Apache 配置文件：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"<Directory \\\"/usr/lib/git-core*\\\">\\n   Options ExecCGI Indexes\\n   Order allow,deny\\n   Allow from all\\n   Require all granted\\n</Directory>\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br')])]),_c('p',[_vm._v(\"最后，如果想实现写操作授权验证，使用如下的未授权屏蔽配置即可：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"<LocationMatch \\\"^/git/.*/git-receive-pack$\\\">\\n    AuthType Basic\\n    AuthName \\\"Git Access\\\"\\n    AuthUserFile /opt/git/.htpasswd\\n    Require valid-user\\n</LocationMatch>\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br')])]),_c('p',[_vm._v(\"这需要你创建一个包含所有合法用户密码的 \"),_c('code',[_vm._v(\".htaccess\")]),_vm._v(\" 文件。 以下是一个添加 “schacon” 用户到此文件的例子：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"$ htdigest -c /opt/git/.htpasswd \\\"Git Access\\\" schacon\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('p',[_vm._v(\"你可以通过许多方式添加 Apache 授权用户，选择使用其中一种方式即可。 以上仅仅只是我们可以找到的最简单的一个例子。 如果愿意的话，你也可以通过 SSL 运行它，以保证所有数据是在加密状态下进行传输的。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"我们不想深入去讲解 Apache 配置文件，因为你可能会使用不同的 Web 服务器，或者可能有不同的授权需求。 它的主要原理是使用一个 Git 附带的，名为 git-http-backend 的 CGI。它被引用来处理协商通过 HTTP 发送和接收的数据。 它本身并不包含任何授权功能，但是授权功能可以在 Web 服务器层引用它时被轻松实现。 你可以在任何所有可以处理 CGI 的 Web 服务器上办到这点，所以随便挑一个你最熟悉的 Web 服务器试手吧。\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"sourceRoot":""}