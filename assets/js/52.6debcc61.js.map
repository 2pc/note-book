{"version":3,"sources":["webpack:///./docs/git-scm/03/05.md","webpack:///./docs/git-scm/03/05.md?35e6","webpack:///./docs/git-scm/03/assets/3b191bc94aad60d05e38a6614adf2995.png","webpack:///./docs/git-scm/03/assets/5c0059a52964831fd2b343547c0d4557.png","webpack:///./docs/git-scm/03/assets/60c1d1e73224c4e73d708951cccf7020.png","webpack:///./docs/git-scm/03/assets/e3d1615645d6ab5a1337d7223f3e363d.png","webpack:///./docs/git-scm/03/assets/e8c28aef7625d1a33726f8ded017fb84.png","webpack:///./docs/git-scm/03/05.md?ff41"],"names":[],"mappings":"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","file":"assets/js/52.6debcc61.js","sourcesContent":["import { render, staticRenderFns } from \"./05.md?vue&type=template&id=52c19676&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/@vuepress/core/node_modules/.cache/vuepress\\\",\\\"cacheIdentifier\\\":\\\"2e9acca5-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??ref--1-1!../../../node_modules/@vuepress/markdown-loader/index.js??ref--1-2!./05.md?vue&type=template&id=52c19676&\"","module.exports = __webpack_public_path__ + \"assets/img/3b191bc94aad60d05e38a6614adf2995.1169379c.png\";","module.exports = __webpack_public_path__ + \"assets/img/5c0059a52964831fd2b343547c0d4557.9277d263.png\";","module.exports = __webpack_public_path__ + \"assets/img/60c1d1e73224c4e73d708951cccf7020.9bd92111.png\";","module.exports = __webpack_public_path__ + \"assets/img/e3d1615645d6ab5a1337d7223f3e363d.6ee93c56.png\";","module.exports = __webpack_public_path__ + \"assets/img/e8c28aef7625d1a33726f8ded017fb84.787c2f17.png\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{\"slot-key\":_vm.$parent.slotKey}},[_c('h1',{attrs:{\"id\":\"远程分支\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#远程分支\"}},[_vm._v(\"#\")]),_vm._v(\" 远程分支\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"远程引用\")]),_vm._v(\" 是对远程仓库的引用（指针），包括分支、标签等等。 你可以通过 \"),_c('code',[_vm._v(\"git ls-remote (remote)\")]),_vm._v(\" 来显式地获得远程引用的完整列表，或者通过 \"),_c('code',[_vm._v(\"git remote show (remote)\")]),_vm._v(\"  获得远程分支的更多信息。 然而，一个更常见的做法是利用 \"),_c('strong',[_vm._v(\"远程跟踪分支\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"远程跟踪分支是 \"),_c('strong',[_vm._v(\"远程分支状态的引用\")]),_vm._v(\"。 它们 \"),_c('strong',[_vm._v(\"是你不能移动的本地引用\")]),_vm._v(\"，当你做任何网络通信操作时，它们会自动移动。 远程跟踪分支像是你上次连接到远程仓库时，那些分支所处状态的书签。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"它们以 \"),_c('code',[_vm._v(\"(remote)/(branch)\")]),_vm._v(\" 形式命名。 例如，如果你想要看你最后一次与远程仓库 origin 通信时 master 分支的状态，你可以查看 \"),_c('code',[_vm._v(\"origin/master\")]),_vm._v(\"  分支。 你与同事合作解决一个问题并且他们推送了一个 iss53 分支，你可能有自己的本地 iss53 分支；但是在服务器上的分支会指向 \"),_c('code',[_vm._v(\"origin/iss53\")]),_vm._v(\" 的提交。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"这可能有一点儿难以理解，让我们来看一个例子。 假设你的网络里有一个在 \"),_c('code',[_vm._v(\"git.ourcompany.com\")]),_vm._v(\" 的 Git 服务器。 如果你从这里克隆，\"),_c('strong',[_vm._v(\"Git 的 clone 命令会为你自动将其命名为 origin\")]),_vm._v(\"，拉取它的所有数据，\"),_c('strong',[_vm._v(\"创建一个指向它的 master 分支的指针\")]),_vm._v(\"，并且在本地将其命名为 \"),_c('code',[_vm._v(\"origin/master\")]),_vm._v(\"。 Git 也会给你一个与 origin 的 master 分支在指向同一个地方的本地 master 分支，这样你就有工作的基础。\")]),_vm._v(\" \"),_c('div',{staticClass:\"custom-block tip\"},[_c('p',{staticClass:\"custom-block-title\"},[_vm._v(\"TIP\")]),_vm._v(\" \"),_c('p',[_vm._v(\"「origin」 \"),_c('strong',[_vm._v(\"并无特殊含义\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"远程仓库名字  \"),_c('code',[_vm._v(\"origin\")]),_vm._v(\" 与分支名字  \"),_c('code',[_vm._v(\"master\")]),_vm._v(\" 一样，在 Git 中并没有任何特别的含义一样。 同时 \"),_c('code',[_vm._v(\"master\")]),_vm._v(\" 是当你运行 \"),_c('code',[_vm._v(\"git init\")]),_vm._v(\" 时默认的起始分支名字，\"),_c('strong',[_vm._v(\"原因仅仅是它的广泛使用\")]),_vm._v(\"，\"),_c('code',[_vm._v(\"origin\")]),_vm._v(\" 是当你运行 \"),_c('code',[_vm._v(\"git clone\")]),_vm._v(\" 时默认的远程仓库名字。 如果你运行 \"),_c('code',[_vm._v(\"git clone -o booyah\")]),_vm._v(\"，那么你默认的远程分支名字将会是 \"),_c('code',[_vm._v(\"booyah/master\")]),_vm._v(\"。\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"克隆之后的服务器与本地仓库\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/60c1d1e73224c4e73d708951cccf7020.png\"),\"alt\":\"克隆之后的服务器与本地仓库。\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"如果你在 \"),_c('strong',[_vm._v(\"本地的 master 分支做了一些工作\")]),_vm._v(\"，然而在同一时间，其他人推送提交到 \"),_c('code',[_vm._v(\"git.ourcompany.com\")]),_vm._v(\" 并更新了它的 master 分支，\"),_c('strong',[_vm._v(\"那么你的提交历史将向不同的方向前进\")]),_vm._v(\"。 也许，只要你不与 origin 服务器连接，你的 \"),_c('code',[_vm._v(\"origin/master\")]),_vm._v(\" 指针就不会移动。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"本地与远程的工作可以分叉\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/e3d1615645d6ab5a1337d7223f3e363d.png\"),\"alt\":\"本地与远程的工作可以分叉。\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"如果要同步你的工作，运行 \"),_c('code',[_vm._v(\"git fetch origin\")]),_vm._v(\" 命令。 这个命令查找 \"),_c('code',[_vm._v(\"origin\")]),_vm._v(\" 是哪一个服务器（在本例中，它是 \"),_c('code',[_vm._v(\"git.ourcompany.com\")]),_vm._v(\"），从中抓取本地没有的数据，并且更新本地数据库，移动 \"),_c('code',[_vm._v(\"origin/master\")]),_vm._v(\" 指针指向新的、更新后的位置。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"git fetch 更新你的远程仓库引用\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/e8c28aef7625d1a33726f8ded017fb84.png\"),\"alt\":\" 更新你的远程仓库引用。\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"为了演示有多个远程仓库与远程分支的情况，我们假定你有另一个内部 Git 服务器，仅用于你的 sprint 小组的开发工作。 这个服务器位于 \"),_c('code',[_vm._v(\"git.team1.ourcompany.com\")]),_vm._v(\"。 你可以运行 \"),_c('code',[_vm._v(\"git remote add\")]),_vm._v(\" 命令 \"),_c('strong',[_vm._v(\"添加一个新的远程仓库引用到当前的项目\")]),_vm._v(\"，这个命令我们会在 \"),_c('RouterLink',{attrs:{\"to\":\"/git-scm/02/\"}},[_vm._v(\"Git 基础\")]),_vm._v(\" 中详细说明。 将这个远程仓库命名为 teamone，将其作为整个 URL 的缩写。\")],1),_vm._v(\" \"),_c('p',[_vm._v(\"添加另一个远程仓库\")]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/3b191bc94aad60d05e38a6614adf2995.png\"),\"alt\":\"添加另一个远程仓库。\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"现在，可以运行 \"),_c('code',[_vm._v(\"git fetch teamone\")]),_vm._v(\" 来 \"),_c('strong',[_vm._v(\"抓取远程仓库 teamone 有而本地没有的数据\")]),_vm._v(\"。 因为那台服务器上现有的数据是 origin 服务器上的一个子集（简单说，这个仓库是 origin 中某一个提交中的代码），所以 Git 并不会抓取数据而是会设置远程跟踪分支 \"),_c('code',[_vm._v(\"teamone/master\")]),_vm._v(\" 指向 teamone 的 master 分支。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"远程跟踪分支 \"),_c('code',[_vm._v(\"teamone/master\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":require(\"./assets/5c0059a52964831fd2b343547c0d4557.png\"),\"alt\":\"远程跟踪分支 。\"}})]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"推送-push\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#推送-push\"}},[_vm._v(\"#\")]),_vm._v(\" 推送（push）\")]),_vm._v(\" \"),_c('p',[_vm._v(\"当你想要公开分享一个分支时，需要将其推送到有写入权限的远程仓库上。 本地的分支并不会自动与远程仓库同步 – 你必须显式地推送想要分享的分支。 这样，你就可以把不愿意分享的内容放到私人分支上，而将需要和别人协作的内容推送到公开分支。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"如果希望和别人一起在名为 \"),_c('code',[_vm._v(\"serverfix\")]),_vm._v(\" 的分支上工作，你可以像推送第一个分支那样推送它。 运行 \"),_c('code',[_vm._v(\"git push (remote) (branch)\")]),_vm._v(\":\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" push origin serverfix\\nCounting objects: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"24\")]),_vm._v(\", done.\\nDelta compression using up to \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"8\")]),_vm._v(\" threads.\\nCompressing objects: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"100\")]),_vm._v(\"% \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"15\")]),_vm._v(\"/15\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\", done.\\nWriting objects: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"100\")]),_vm._v(\"% \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"24\")]),_vm._v(\"/24\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\", \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"1.91\")]),_vm._v(\" KiB \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_vm._v(\" bytes/s, done.\\nTotal \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"24\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"delta \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\", reused \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"delta \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\nTo https://github.com/schacon/simplegit\\n * \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_vm._v(\"new branch\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\"      serverfix -\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\">\")]),_vm._v(\" serverfix\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"8\")]),_c('br')])]),_c('p',[_vm._v(\"这里有些工作被简化了。 Git 自动将 serverfix 分支名字展开为 \"),_c('code',[_vm._v(\"refs/heads/serverfix:refs/heads/serverfix\")]),_vm._v(\"，那意味着，「\"),_c('strong',[_vm._v(\"推送本地的 serverfix 分支来更新远程仓库上的 serverfix 分支\")]),_vm._v(\"。」我们将会详细学习 \"),_c('RouterLink',{attrs:{\"to\":\"/git-scm/10/\"}},[_vm._v(\"Git 内部原理\")]),_vm._v(\" 的 \"),_c('code',[_vm._v(\"refs/heads/\")]),_vm._v(\" 部分，但是现在可以先把它放在儿。 你也可以运行 \"),_c('code',[_vm._v(\"git push origin serverfix:serverfix\")]),_vm._v(\"，它会做同样的事 – 相当于它说，「\"),_c('strong',[_vm._v(\"推送本地的 serverfix 分支，将其作为远程仓库的 serverfix 分支\")]),_vm._v(\"」\"),_c('strong',[_vm._v(\"可以通过这种格式来推送本地分支到一个命名不相同的远程分支\")]),_vm._v(\"。 如果并不想让远程仓库上的分支叫做 serverfix，可以运行 \"),_c('code',[_vm._v(\"git push origin serverfix:awesomebranch\")]),_vm._v(\" 来将本地的 serverfix 分支推送到远程仓库上的 awesomebranch 分支。\")],1),_vm._v(\" \"),_c('div',{staticClass:\"custom-block tip\"},[_c('p',{staticClass:\"custom-block-title\"},[_vm._v(\"如何避免每次输入密码\")]),_vm._v(\" \"),_c('p',[_vm._v(\"如果你正在使用 HTTPS URL 来推送，Git 服务器会询问用户名与密码。 默认情况下它会在终端中提示服务器是否允许你进行推送。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"如果不想在每一次推送时都输入用户名与密码，你可以设置一个 “credential cache”。 最简单的方式就是将其保存在内存中几分钟，可以简单地运行 \"),_c('code',[_vm._v(\"git config –global credential.helper cache\")]),_vm._v(\" 来设置它。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"想要了解更多关于不同验证缓存的可用选项，查看 \"),_c('RouterLink',{attrs:{\"to\":\"/git-scm/07/14.html\"}},[_vm._v(\"凭证存储\")]),_vm._v(\"。\")],1)]),_vm._v(\" \"),_c('p',[_vm._v(\"下一次其他协作者从服务器上抓取数据时，他们会在本地生成一个远程分支 \"),_c('code',[_vm._v(\"origin/serverfix\")]),_vm._v(\"，指向服务器的 serverfix 分支的引用：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"$ git fetch origin\\nremote: Counting objects: 7, done.\\nremote: Compressing objects: 100% (2/2), done.\\nremote: Total 3 (delta 0), reused 3 (delta 0)\\nUnpacking objects: 100% (3/3), done.\\nFrom https://github.com/schacon/simplegit\\n * [new branch]      serverfix    -> origin/serverfix\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br')])]),_c('p',[_vm._v(\"要特别注意的一点是 \"),_c('strong',[_vm._v(\"当抓取到新的远程跟踪分支时\")]),_vm._v(\"，本地不会自动生成一份可编辑的副本（拷贝）。 换一句话说，这种情况下，不会有一个新的 serverfix 分支 – 只有一个不可以修改的 \"),_c('code',[_vm._v(\"origin/serverfix\")]),_vm._v(\" 指针。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"可以运行 \"),_c('code',[_vm._v(\"git merge origin/serverfix\")]),_vm._v(\" 将这些工作合并到当前所在的分支。 如果想要在自己的 serverfix 分支上工作，可以将其建立在远程 \"),_c('a',{attrs:{\"href\":\"#%E8%B7%9F%E8%B8%AA%E5%88%86%E6%94%AF\"}},[_vm._v(\"跟踪分支\")]),_vm._v(\" 之上：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"$ git checkout -b serverfix origin/serverfix\\nBranch serverfix set up to track remote branch serverfix from origin.\\nSwitched to a new branch 'serverfix'\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br')])]),_c('p',[_vm._v(\"这会给你一个用于工作的本地分支，并且起点位于 \"),_c('code',[_vm._v(\"origin/serverfix\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"跟踪分支\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#跟踪分支\"}},[_vm._v(\"#\")]),_vm._v(\" 跟踪分支\")]),_vm._v(\" \"),_c('p',[_vm._v(\"从一个远程跟踪分支检出一个本地分支会自动创建一个叫做 「\"),_c('strong',[_vm._v(\"跟踪分支\")]),_vm._v(\"」（有时候也叫做 「\"),_c('strong',[_vm._v(\"上游分支\")]),_vm._v(\"」）。\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"跟踪分支\")]),_vm._v(\" 是 \"),_c('strong',[_vm._v(\"与远程分支有直接关系的本地分支\")]),_vm._v(\"。 如果在一个跟踪分支上输入 \"),_c('code',[_vm._v(\"git pull\")]),_vm._v(\"，Git 能自动地识别去哪个服务器上抓取、合并到哪个分支。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"当克隆一个仓库时，它通常会自动地创建一个跟踪 \"),_c('code',[_vm._v(\"origin/master\")]),_vm._v(\" 的 master 分支。 然而，如果你愿意的话可以设置其他的跟踪分支 – 其他远程仓库上的跟踪分支，或者不跟踪 master 分支。 最简单的就是之前看到的例子，运行 \"),_c('code',[_vm._v(\"git checkout -b [branch] [remotename]/[branch]\")]),_vm._v(\"。 这是一个十分常用的操作所以 Git 提供了 \"),_c('code',[_vm._v(\"–track\")]),_vm._v(\" 快捷方式：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"$ git checkout --track origin/serverfix\\nBranch serverfix set up to track remote branch serverfix from origin.\\nSwitched to a new branch 'serverfix'\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br')])]),_c('p',[_vm._v(\"如果想要将本地分支与远程分支设置为不同名字，你可以轻松地增加一个不同名字的本地分支的上一个命令：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"$ git checkout -b sf origin/serverfix\\nBranch sf set up to track remote branch serverfix from origin.\\nSwitched to a new branch 'sf'\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br')])]),_c('p',[_vm._v(\"现在，本地分支 sf 会自动从 origin/serverfix 拉取。\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"已有本地分支跟踪远程分支\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#已有本地分支跟踪远程分支\"}},[_vm._v(\"#\")]),_vm._v(\" 已有本地分支跟踪远程分支\")]),_vm._v(\" \"),_c('p',[_vm._v(\"设置 \"),_c('strong',[_vm._v(\"已有的本地分支跟踪一个刚刚拉取下来的远程分支\")]),_vm._v(\"，或者想要修改正在跟踪的上游分支，你可以在任意时间使用 \"),_c('code',[_vm._v(\"-u\")]),_vm._v(\" 或 \"),_c('code',[_vm._v(\"–set-upstream-to\")]),_vm._v(\" 选项运行 \"),_c('code',[_vm._v(\"git branch\")]),_vm._v(\" 来显式地设置。\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"$ git branch -u origin/serverfix\\nBranch serverfix set up to track remote branch serverfix from origin.\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br')])]),_c('div',{staticClass:\"custom-block tip\"},[_c('p',{staticClass:\"custom-block-title\"},[_vm._v(\"上游快捷方式\")]),_vm._v(\" \"),_c('p',[_vm._v(\"当设置好跟踪分支后，可以通过 \"),_c('code',[_vm._v(\"@{upstream}\")]),_vm._v(\" 或 \"),_c('code',[_vm._v(\"@{u}\")]),_vm._v(\"  快捷方式来引用它。 所以在 master 分支时并且它正在跟踪 \"),_c('code',[_vm._v(\"origin/master\")]),_vm._v(\" 时，如果愿意的话可以使用 \"),_c('code',[_vm._v(\"git merge @{u}\")]),_vm._v(\"  来取代 \"),_c('code',[_vm._v(\"git merge origin/master\")]),_vm._v(\"。\")])]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"查看所有已设置的跟踪分支\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#查看所有已设置的跟踪分支\"}},[_vm._v(\"#\")]),_vm._v(\" 查看所有已设置的跟踪分支\")]),_vm._v(\" \"),_c('p',[_vm._v(\"如果想要查看设置的所有跟踪分支，可以使用 \"),_c('code',[_vm._v(\"git branch\")]),_vm._v(\" 的 \"),_c('code',[_vm._v(\"-vv\")]),_vm._v(\" 选项。 这会将所有的本地分支列出来并且包含更多的信息，如每一个分支正在跟踪哪个远程分支与本地分支是否是领先、落后或是都有。\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"$ git branch -vv\\n  iss53     7e424c3 [origin/iss53: ahead 2] forgot the brackets\\n  master    1ae2a45 [origin/master] deploying index fix\\n* serverfix f8674d9 [teamone/server-fix-good: ahead 3, behind 1] this should do it\\n  testing   5ea463a trying something new\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br')])]),_c('p',[_vm._v(\"这里可以看到 iss53 分支正在跟踪 origin/iss53 并且 \"),_c('strong',[_vm._v(\"ahead 是 2\")]),_vm._v(\"，\"),_c('strong',[_vm._v(\"意味着本地有两个提交还没有推送到服务器上\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"也能看到 master 分支正在跟踪 origin/master 分支并且是最新的。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"接下来可以看到 serverfix 分支正在跟踪 teamone 服务器上的 server-fix-good 分支并且 \"),_c('strong',[_vm._v(\"领先 2 落后 1\")]),_vm._v(\"，意味着服务器上有一次提交还没有合并入同时本地有三次提交还没有推送。 最后看到 testing 分支并没有跟踪任何远程分支。\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"需要重点注意的一点是这些数字的值来自于你从每个服务器上最后一次抓取的数据\")]),_vm._v(\"。 这个命令并没有连接服务器，它只会告诉你关于本地缓存的服务器数据。 如果想要统计最新的领先与落后数字，需要在运行此命令前抓取所有的远程仓库。 可以像这样做：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" fetch --all\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" branch -vv\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br')])]),_c('h2',{attrs:{\"id\":\"拉取-fetch\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#拉取-fetch\"}},[_vm._v(\"#\")]),_vm._v(\" 拉取（fetch）\")]),_vm._v(\" \"),_c('p',[_vm._v(\"当 \"),_c('code',[_vm._v(\"git fetch\")]),_vm._v(\" 命令 \"),_c('strong',[_vm._v(\"从服务器上抓取本地没有的数据时\")]),_vm._v(\"，\"),_c('strong',[_vm._v(\"它并不会修改工作目录中的内容\")]),_vm._v(\"。 它只会获取数据然后让你自己合并。 然而，有一个命令叫作 \"),_c('code',[_vm._v(\"git pull\")]),_vm._v(\" 在大多数情况下它的含义是一个 \"),_c('code',[_vm._v(\"git fetch\")]),_vm._v(\" 紧接着一个 \"),_c('code',[_vm._v(\"git merge\")]),_vm._v(\" 命令。 如果有一个像之前章节中演示的 \"),_c('strong',[_vm._v(\"设置好的跟踪分支\")]),_vm._v(\"，不管它是显式地设置还是通过 clone 或 checkout 命令为你创建的，\"),_c('code',[_vm._v(\"git pull\")]),_vm._v(\" 都会查找当前分支所跟踪的服务器与分支，从服务器上抓取数据然后尝试合并入那个远程分支。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"由于 \"),_c('code',[_vm._v(\"git pull\")]),_vm._v(\" 的魔法经常令人困惑所以通常单独显式地使用 \"),_c('code',[_vm._v(\"fetch\")]),_vm._v(\" 与 \"),_c('code',[_vm._v(\"merge\")]),_vm._v(\" 命令会更好一些。\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"删除远程分支\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#删除远程分支\"}},[_vm._v(\"#\")]),_vm._v(\" 删除远程分支\")]),_vm._v(\" \"),_c('p',[_vm._v(\"假设你已经通过远程分支做完所有的工作了 – 也就是说你和你的协作者已经完成了一个特性并且将其合并到了远程仓库的 master 分支（或任何其他稳定代码分支）。 可以运行带有 \"),_c('code',[_vm._v(\"–delete\")]),_vm._v(\" 选项的 \"),_c('code',[_vm._v(\"git push\")]),_vm._v(\" 命令来删除一个远程分支。 如果想要从服务器上删除 \"),_c('code',[_vm._v(\"serverfix\")]),_vm._v(\" 分支，运行下面的命令：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"$ git push origin --delete serverfix\\nTo https://github.com/schacon/simplegit\\n - [deleted]         serverfix\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br')])]),_c('p',[_vm._v(\"基本上这个命令做的 \"),_c('strong',[_vm._v(\"只是从服务器上移除这个指针\")]),_vm._v(\"。 Git 服务器通常会保留数据一段时间直到垃圾回收运行，所以如果不小心删除掉了，通常是很容易恢复的。\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"不常见的错误收集\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#不常见的错误收集\"}},[_vm._v(\"#\")]),_vm._v(\" 不常见的错误收集\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"执行不带参数的 \"),_c('code',[_vm._v(\"git push\")]),_vm._v(\" 提示 \"),_c('code',[_vm._v(\"fatal: The current branch master has multiple upstream branches, refusing to push.\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" push\\nfatal: The current branch master has multiple upstream branches, refusing to push.\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"# 并且查看远程的时候，会提示有多个 branch.master.remote \")]),_vm._v(\"\\n$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" remote show origin\\nwarning: \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"more\")]),_vm._v(\" than one branch.master.remote \\n* remote origin\\n  Fetch URL: https://github.com/zq99299/note-book.git\\n  Push  URL: https://github.com/zq99299/note-book.git\\n  HEAD branch: master\\n  Remote branches:\\n    gh-pages      tracked\\n    master        tracked\\n    vuepress-demo tracked\\n  Local branch configured \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"for\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'git pull'\")]),_c('span',{pre:true,attrs:{\"class\":\"token builtin class-name\"}},[_vm._v(\":\")]),_vm._v(\"\\n    master merges with remote master\\n              and with remote master\\n  Local ref configured \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"for\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'git push'\")]),_c('span',{pre:true,attrs:{\"class\":\"token builtin class-name\"}},[_vm._v(\":\")]),_vm._v(\"\\n    master pushes to master \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"up to \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"date\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"8\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"9\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"10\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"11\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"12\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"13\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"14\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"15\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"16\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"17\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"18\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"19\")]),_c('br')])]),_c('p',[_vm._v(\"查看我们本地的配置选项\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" config --list\\nhttp.sslcainfo\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"d:/Program Files/Git/mingw64/ssl/certs/ca-bundle.crt\\nhttp.sslbackend\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"openssl\\ndiff.astextplain.textconv\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"astextplain\\nfilter.lfs.clean\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"git-lfs clean -- %f\\nfilter.lfs.smudge\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"git-lfs smudge -- %f\\nfilter.lfs.process\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"git-lfs filter-process\\nfilter.lfs.required\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"true\\ncredential.helper\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"manager-core\\ncore.autocrlf\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"true\\ncore.fscache\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"true\\ncore.symlinks\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"false\\npull.rebase\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"false\\ncredential.https://dev.azure.com.usehttppath\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"true\\ninit.defaultbranch\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"main\\nbranch.master.remote\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"origin\\t\\t\\t\\t\\t\\t\\t\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"# 这里是 用户级别的 .gitconfig 文件中配置的\")]),_vm._v(\"\\nbranch.master.merge\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"refs/heads/master    \\t\\t\\t\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"# 这里\")]),_vm._v(\"\\ncore.autocrlf\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"true\\ncore.repositoryformatversion\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_vm._v(\"\\ncore.filemode\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"false\\ncore.bare\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"false\\ncore.logallrefupdates\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"true\\ncore.symlinks\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"false\\ncore.ignorecase\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"true\\nremote.origin.url\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"https://github.com/zq99299/note-book.git\\nremote.origin.fetch\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"+refs/heads/*:refs/remotes/origin/*\\nbranch.master.remote\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"origin\\t\\t\\t\\t\\t\\t \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"# 这里 是当前项目目录下 .git/config 配置的\")]),_vm._v(\"\\nbranch.master.merge\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"refs/heads/master\\t\\t\\t \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"# 这里\")]),_vm._v(\"\\nuser.name\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"zq99299\\nuser.email\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"99299684\")]),_vm._v(\"@qq.com\\n\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"8\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"9\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"10\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"11\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"12\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"13\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"14\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"15\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"16\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"17\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"18\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"19\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"20\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"21\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"22\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"23\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"24\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"25\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"26\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"27\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"28\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"29\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"30\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"31\")]),_c('br')])]),_c('p',[_vm._v(\"问题就出现在这里，去掉用户级别的 \"),_c('code',[_vm._v(\".gitconfig\")]),_vm._v(\" 中的配置就可以了。疑问就是：配置文件会采用就近原则覆盖规则，这里没有被覆盖。\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"sourceRoot":""}