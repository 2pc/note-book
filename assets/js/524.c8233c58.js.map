{"version":3,"sources":["webpack:///./docs/git-scm/07/10.md","webpack:///./docs/git-scm/07/10.md?7115","webpack:///./docs/git-scm/07/10.md?a3f0"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAgF;AAChF;;;AAGA;AAC6F;AAC7F,gBAAgB,2GAAU;AAC1B;AACA,EAAE,4EAAM;AACR,EAAE,qFAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,gF;;;;;;;;;;;;ACjBf;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA,0BAA0B,aAAa,0BAA0B,wBAAwB,qCAAqC,OAAO,gCAAgC,WAAW,OAAO,kBAAkB,UAAU,mCAAmC,qBAAqB,sLAAsL,OAAO,aAAa,UAAU,mCAAmC,gBAAgB,2dAA2d,8CAA8C,YAAY,gBAAgB,yBAAyB,qCAAqC,gBAAgB,0BAA0B,kDAAkD,gBAAgB,wBAAwB,yDAAyD,gBAAgB,yBAAyB,iGAAiG,gBAAgB,6BAA6B,oDAAoD,gBAAgB,wBAAwB,gDAAgD,gBAAgB,wBAAwB,oDAAoD,gBAAgB,wBAAwB,4BAA4B,gBAAgB,6BAA6B,gDAAgD,gBAAgB,6BAA6B,2CAA2C,gBAAgB,0BAA0B,uCAAuC,gBAAgB,wBAAwB,kCAAkC,gBAAgB,6BAA6B,iDAAiD,gBAAgB,6BAA6B,oDAAoD,gBAAgB,wBAAwB,gDAAgD,gBAAgB,wBAAwB,oDAAoD,gBAAgB,wBAAwB,4BAA4B,gBAAgB,6BAA6B,gDAAgD,gBAAgB,6BAA6B,2BAA2B,gBAAgB,wBAAwB,uBAAuB,KAAK,kBAAkB,gBAAgB,6BAA6B,iDAAiD,gBAAgB,6BAA6B,oDAAoD,gBAAgB,wBAAwB,gDAAgD,gBAAgB,wBAAwB,oDAAoD,gBAAgB,wBAAwB,4BAA4B,gBAAgB,6BAA6B,sDAAsD,gBAAgB,6BAA6B,oDAAoD,gBAAgB,wBAAwB,gDAAgD,gBAAgB,wBAAwB,oDAAoD,gBAAgB,wBAAwB,4BAA4B,gBAAgB,6BAA6B,iDAAiD,gBAAgB,6BAA6B,oDAAoD,gBAAgB,wBAAwB,gDAAgD,gBAAgB,wBAAwB,oDAAoD,gBAAgB,wBAAwB,4BAA4B,gBAAgB,6BAA6B,+CAA+C,gBAAgB,6BAA6B,2CAA2C,gBAAgB,0BAA0B,uCAAuC,gBAAgB,wBAAwB,kCAAkC,gBAAgB,6BAA6B,iDAAiD,gBAAgB,6BAA6B,oDAAoD,gBAAgB,wBAAwB,gDAAgD,gBAAgB,wBAAwB,oDAAoD,gBAAgB,wBAAwB,4BAA4B,gBAAgB,6BAA6B,gDAAgD,gBAAgB,6BAA6B,2BAA2B,gBAAgB,wBAAwB,sBAAsB,KAAK,kBAAkB,gBAAgB,6BAA6B,iDAAiD,gBAAgB,6BAA6B,oDAAoD,gBAAgB,wBAAwB,gDAAgD,gBAAgB,wBAAwB,oDAAoD,gBAAgB,wBAAwB,4BAA4B,gBAAgB,6BAA6B,sDAAsD,gBAAgB,6BAA6B,oDAAoD,gBAAgB,wBAAwB,gDAAgD,gBAAgB,wBAAwB,oDAAoD,gBAAgB,wBAAwB,4BAA4B,gBAAgB,6BAA6B,iDAAiD,gBAAgB,6BAA6B,oDAAoD,gBAAgB,wBAAwB,gDAAgD,gBAAgB,wBAAwB,oDAAoD,gBAAgB,wBAAwB,4BAA4B,gBAAgB,6BAA6B,iDAAiD,gBAAgB,6BAA6B,0CAA0C,gBAAgB,6BAA6B,iDAAiD,gBAAgB,6BAA6B,oDAAoD,gBAAgB,wBAAwB,gDAAgD,gBAAgB,wBAAwB,oDAAoD,gBAAgB,wBAAwB,4BAA4B,gBAAgB,6BAA6B,gDAAgD,gBAAgB,6BAA6B,2BAA2B,gBAAgB,wBAAwB,wBAAwB,KAAK,kBAAkB,gBAAgB,6BAA6B,iDAAiD,gBAAgB,6BAA6B,oDAAoD,gBAAgB,wBAAwB,gDAAgD,gBAAgB,wBAAwB,oDAAoD,gBAAgB,wBAAwB,4BAA4B,gBAAgB,6BAA6B,4DAA4D,mCAAmC,aAAa,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,qCAAqC,0BAA0B,qCAAqC,0BAA0B,qCAAqC,0BAA0B,ilCAAilC,8CAA8C,YAAY,gBAAgB,yBAAyB,qCAAqC,gBAAgB,0BAA0B,qDAAqD,gBAAgB,wBAAwB,0FAA0F,gBAAgB,6BAA6B,4CAA4C,gBAAgB,wBAAwB,gDAAgD,gBAAgB,wBAAwB,6BAA6B,gBAAgB,6BAA6B,oEAAoE,gBAAgB,6BAA6B,4CAA4C,gBAAgB,wBAAwB,gDAAgD,gBAAgB,wBAAwB,6BAA6B,gBAAgB,6BAA6B,yCAAyC,gBAAgB,6BAA6B,0CAA0C,gBAAgB,6BAA6B,0FAA0F,gBAAgB,6BAA6B,4CAA4C,gBAAgB,wBAAwB,gDAAgD,gBAAgB,wBAAwB,6BAA6B,gBAAgB,6BAA6B,uCAAuC,gBAAgB,6BAA6B,WAAW,yDAAyD,gBAAgB,6BAA6B,4CAA4C,gBAAgB,wBAAwB,gDAAgD,gBAAgB,wBAAwB,6BAA6B,gBAAgB,6BAA6B,sDAAsD,gBAAgB,6BAA6B,uCAAuC,gBAAgB,wBAAwB,6JAA6J,oRAAoR,gBAAgB,6BAA6B,4CAA4C,gBAAgB,wBAAwB,gDAAgD,gBAAgB,wBAAwB,6BAA6B,gBAAgB,6BAA6B,oEAAoE,gBAAgB,6BAA6B,4CAA4C,gBAAgB,wBAAwB,gDAAgD,gBAAgB,wBAAwB,6BAA6B,gBAAgB,6BAA6B,iDAAiD,gBAAgB,6BAA6B,4CAA4C,gBAAgB,6BAA6B,uCAAuC,gBAAgB,6BAA6B,WAAW,yDAAyD,gBAAgB,6BAA6B,4CAA4C,gBAAgB,wBAAwB,gDAAgD,gBAAgB,wBAAwB,6BAA6B,gBAAgB,6BAA6B,uDAAuD,gBAAgB,6BAA6B,iFAAiF,gBAAgB,6BAA6B,4CAA4C,gBAAgB,wBAAwB,gDAAgD,gBAAgB,wBAAwB,6BAA6B,gBAAgB,6BAA6B,uDAAuD,mCAAmC,aAAa,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,qCAAqC,0BAA0B,qCAAqC,0BAA0B,qCAAqC,0BAA0B,qCAAqC,0BAA0B,mLAAmL,OAAO,aAAa,UAAU,mCAAmC,gBAAgB,4vBAA4vB,8CAA8C,YAAY,gBAAgB,yBAAyB,qCAAqC,gBAAgB,0BAA0B,yDAAyD,gBAAgB,0BAA0B,uDAAuD,gBAAgB,0BAA0B,sEAAsE,gBAAgB,wBAAwB,yDAAyD,gBAAgB,oCAAoC,sDAAsD,gBAAgB,6BAA6B,8EAA8E,gBAAgB,6BAA6B,8EAA8E,mCAAmC,aAAa,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,uSAAuS,8CAA8C,YAAY,gBAAgB,yBAAyB,qCAAqC,gBAAgB,0BAA0B,iEAAiE,gBAAgB,wBAAwB,yDAAyD,gBAAgB,oCAAoC,sDAAsD,gBAAgB,6BAA6B,8EAA8E,gBAAgB,6BAA6B,yEAAyE,mCAAmC,aAAa,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,gLAAgL,8CAA8C,YAAY,gBAAgB,yBAAyB,qCAAqC,gBAAgB,0BAA0B,sLAAsL,gBAAgB,0BAA0B,yDAAyD,gBAAgB,0BAA0B,wDAAwD,gBAAgB,wBAAwB,wCAAwC,gBAAgB,wBAAwB,8CAA8C,gBAAgB,wBAAwB,wMAAwM,mCAAmC,aAAa,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,oCAAoC,0BAA0B,mLAAmL,8CAA8C,YAAY,gBAAgB,yBAAyB,qCAAqC,gBAAgB,0BAA0B,sEAAsE,mCAAmC,aAAa,0BAA0B,kVAAkV,8CAA8C,YAAY,gBAAgB,yBAAyB,qCAAqC,gBAAgB,0BAA0B,mEAAmE,gBAAgB,0BAA0B,kFAAkF,mCAAmC,aAAa,0BAA0B,oCAAoC,0BAA0B;AACzrqB","file":"assets/js/524.c8233c58.js","sourcesContent":["import { render, staticRenderFns } from \"./10.md?vue&type=template&id=2421c594&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/@vuepress/core/node_modules/.cache/vuepress\\\",\\\"cacheIdentifier\\\":\\\"2e9acca5-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??ref--1-1!../../../node_modules/@vuepress/markdown-loader/index.js??ref--1-2!./10.md?vue&type=template&id=2421c594&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{\"slot-key\":_vm.$parent.slotKey}},[_c('h1',{attrs:{\"id\":\"使用-git-调试\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#使用-git-调试\"}},[_vm._v(\"#\")]),_vm._v(\" 使用 Git 调试\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Git 也提供了两个工具来辅助你调试项目中的问题。 由于 Git 被设计成适用于几乎所有类型的项目，这些工具是比较通用的，但它们可以在出现问题的时候帮助你找到 bug 或者错误。\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"文件标注\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#文件标注\"}},[_vm._v(\"#\")]),_vm._v(\" 文件标注\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"如果你在追踪代码中的一个 bug\")]),_vm._v(\" ，并且 \"),_c('strong',[_vm._v(\"想知道是什么时候以及为何会引入\")]),_vm._v(\"，\"),_c('strong',[_vm._v(\"文件标注\")]),_vm._v(\" 通常是最好用的工具。 它\"),_c('strong',[_vm._v(\"展示了文件中每一行最后一次修改的提交\")]),_vm._v(\" 。 所以，如果你在代码中看到一个有问题的方法，你可以使用  \"),_c('code',[_vm._v(\"git blame\")]),_vm._v(\"  标注这个文件，查看这个方法每一行的最后修改时间以及是被谁修改的。 这个例子使用 \"),_c('code',[_vm._v(\"-L\")]),_vm._v(\" 选项来限制输出范围在第 12 至 22 行：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" blame -L \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"12,22\")]),_vm._v(\" simplegit.rb\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"# 最后一次提交 SHA-1 , 作者以及时间 ,                行号  文件内容\")]),_vm._v(\"\\n^4832fe2 \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"Scott Chacon  \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2008\")]),_vm._v(\"-03-15 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"10\")]),_vm._v(\":31:28 -0700 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"12\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"  def show\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"tree \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'master'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n^4832fe2 \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"Scott Chacon  \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2008\")]),_vm._v(\"-03-15 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"10\")]),_vm._v(\":31:28 -0700 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"13\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"   command\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"git show #{tree}\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n^4832fe2 \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"Scott Chacon  \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2008\")]),_vm._v(\"-03-15 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"10\")]),_vm._v(\":31:28 -0700 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"14\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"  end\\n^4832fe2 \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"Scott Chacon  \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2008\")]),_vm._v(\"-03-15 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"10\")]),_vm._v(\":31:28 -0700 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"15\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n9f6560e4 \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"Scott Chacon  \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2008\")]),_vm._v(\"-03-17 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"21\")]),_vm._v(\":52:20 -0700 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"16\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"  def log\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"tree \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'master'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n79eaf55d \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"Scott Chacon  \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2008\")]),_vm._v(\"-04-06 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"10\")]),_vm._v(\":15:08 -0700 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"17\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"   command\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"git log #{tree}\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n9f6560e4 \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"Scott Chacon  \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2008\")]),_vm._v(\"-03-17 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"21\")]),_vm._v(\":52:20 -0700 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"18\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"  end\\n9f6560e4 \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"Scott Chacon  \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2008\")]),_vm._v(\"-03-17 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"21\")]),_vm._v(\":52:20 -0700 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"19\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n42cf2861 \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"Magnus Chacon \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2008\")]),_vm._v(\"-04-13 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"10\")]),_vm._v(\":45:01 -0700 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"20\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"  def blame\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"path\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n42cf2861 \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"Magnus Chacon \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2008\")]),_vm._v(\"-04-13 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"10\")]),_vm._v(\":45:01 -0700 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"21\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"   command\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"git blame #{path}\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n42cf2861 \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"Magnus Chacon \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2008\")]),_vm._v(\"-04-13 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"10\")]),_vm._v(\":45:01 -0700 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"22\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"  end\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"8\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"9\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"10\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"11\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"12\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"13\")]),_c('br')])]),_c('p',[_vm._v(\"请注意，第一个字段是最后一次修改该行的提交的部分 SHA-1 值。 接下来两个字段的值是 \"),_c('strong',[_vm._v(\"从提交中提取出来的——作者的名字以及提交的时间\")]),_vm._v(\" ——所以你就可以很轻易地找到是谁在什么时候修改了那一行。 接下来就是行号和文件内容。 注意一下 \"),_c('code',[_vm._v(\"^4832fe2\")]),_vm._v(\"  这个提交的那些行，\"),_c('strong',[_vm._v(\"这些指的是这个文件第一次提交的那些行\")]),_vm._v(\"。 \"),_c('strong',[_vm._v(\"这个提交是这个文件第一次加入到这个项目时的提交\")]),_vm._v(\"，\"),_c('strong',[_vm._v(\"并且这些行从未被修改过\")]),_vm._v(\"。 这会带来小小的困惑，因为你已经至少看到三种 Git 使用 \"),_c('code',[_vm._v(\"^\")]),_vm._v(\"  来修饰一个提交的 SHA-1 值的不同含义，但这里确实就是这个意思。\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"另一件比较酷的事情是 Git 不会显式地记录文件的重命名\")]),_vm._v(\"。 它会记录快照，然后在事后尝试计算出重命名的动作。 这其中有一个很有意思的特性就是你可以让 Git 找出所有的代码移动。 如果你在 \"),_c('code',[_vm._v(\"git blame\")]),_vm._v(\"  后面加上一个  \"),_c('code',[_vm._v(\"-C\")]),_vm._v(\" ，Git 会分析你正在标注的文件，并且尝试找出文件中从别的地方复制过来的代码片段的原始出处。 比如，你将  \"),_c('code',[_vm._v(\"GITServerHandler.m\")]),_vm._v(\"   这个文件拆分为数个文件，其中一个文件是 \"),_c('code',[_vm._v(\"GITPackUpload.m\")]),_vm._v(\"。 对  \"),_c('code',[_vm._v(\"GITPackUpload.m\")]),_vm._v(\"  执行带  \"),_c('code',[_vm._v(\"-C\")]),_vm._v(\"  参数的 blame 命令，你就可以看到代码块的原始出处：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" blame -C -L \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"141,153\")]),_vm._v(\" GITPackUpload.m\\nf344f58d GITServerHandler.m \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"Scott \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2009\")]),_vm._v(\"-01-04 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"141\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\nf344f58d GITServerHandler.m \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"Scott \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2009\")]),_vm._v(\"-01-04 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"142\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" - \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"void\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" gatherObjectShasFromC\\nf344f58d GITServerHandler.m \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"Scott \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2009\")]),_vm._v(\"-01-04 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"143\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n70befddd GITServerHandler.m \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"Scott \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2009\")]),_vm._v(\"-03-22 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"144\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"         //NSLog\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"@\"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"GATHER COMMI\\nad11ac80 GITPackUpload.m    (Scott 2009-03-24 145)\\nad11ac80 GITPackUpload.m    (Scott 2009-03-24 146)         NSString *parentSha;\\nad11ac80 GITPackUpload.m    (Scott 2009-03-24 147)         GITCommit *commit = [g\\nad11ac80 GITPackUpload.m    (Scott 2009-03-24 148)\\nad11ac80 GITPackUpload.m    (Scott 2009-03-24 149)         //NSLog(@\\\"\")]),_vm._v(\"GATHER COMMI\\nad11ac80 GITPackUpload.m    \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"Scott \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2009\")]),_vm._v(\"-03-24 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"150\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n56ef2caf GITServerHandler.m \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"Scott \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2009\")]),_vm._v(\"-01-05 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"151\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"         if\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"commit\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n56ef2caf GITServerHandler.m \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"Scott \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2009\")]),_vm._v(\"-01-05 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"152\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"                 \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_vm._v(\"refDict setOb\\n56ef2caf GITServerHandler.m \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"Scott \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2009\")]),_vm._v(\"-01-05 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"153\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"8\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"9\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"10\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"11\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"12\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"13\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"14\")]),_c('br')])]),_c('p',[_vm._v(\"这个功能很有用。 通常来说，你会认为复制代码过来的那个提交是最原始的提交，因为那是你第一次在这个文件中修改了这几行。 但 Git 会告诉你，你第一次写这几行代码的那个提交才是原始提交，即使这是在另外一个文件里写的。\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"二分查找\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#二分查找\"}},[_vm._v(\"#\")]),_vm._v(\" 二分查找\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"当你知道问题是在哪里引入的情况下文件标注可以帮助你查找问题\")]),_vm._v(\"。 如果你不知道哪里出了问题，并且自从上次可以正常运行到现在已经有数十个或者上百个提交，这个时候你可以使用 \"),_c('code',[_vm._v(\"git bisect\")]),_vm._v(\"  来帮助查找。 \"),_c('strong',[_vm._v(\"bisect 命令会对你的提交历史进行二分查找来帮助你尽快找到是哪一个提交引入了问题\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"假设你刚刚在线上环境部署了你的代码，接着收到一些 bug 反馈，但这些 bug 在你之前的开发环境里没有出现过，这让你百思不得其解。 你重新查看了你的代码，发现这个问题是可以被重现的，但是你不知道哪里出了问题。 你可以用二分法来找到这个问题。 首先执行 \"),_c('code',[_vm._v(\"git bisect start\")]),_vm._v(\"  来启动，接着执行  \"),_c('code',[_vm._v(\"git bisect bad\")]),_vm._v(\"  来告诉系统当前你所在的提交是有问题的。 然后你必须告诉  \"),_c('code',[_vm._v(\"bisect\")]),_vm._v(\"  已知的最后一次正常状态是哪次提交，使用  \"),_c('code',[_vm._v(\"git bisect good [good_commit]\")]),_vm._v(\"：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" bisect start\\n$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" bisect bad\\n$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" bisect good v1.0\\nBisecting: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"6\")]),_vm._v(\" revisions left to \"),_c('span',{pre:true,attrs:{\"class\":\"token builtin class-name\"}},[_vm._v(\"test\")]),_vm._v(\" after this\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_vm._v(\"ecb6e1bc347ccecc5f9350d878ce677feb13d3b2\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\" error handling on repo\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br')])]),_c('p',[_vm._v(\"Git 发现在你标记为正常的提交(v1.0)和当前的错误版本之间有大约 12 次提交，于是 Git 检出中间的那个提交。 现在你可以执行测试，看看在这个提交下问题是不是还是存在。 如果还存在，说明问题是在这个提交之前引入的；如果问题不存在，说明问题是在这个提交之后引入的。 假设测试结果是没有问题的，你可以通过 \"),_c('code',[_vm._v(\"git bisect good\")]),_vm._v(\"  来告诉 Git，然后继续寻找。\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" bisect good\\nBisecting: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"3\")]),_vm._v(\" revisions left to \"),_c('span',{pre:true,attrs:{\"class\":\"token builtin class-name\"}},[_vm._v(\"test\")]),_vm._v(\" after this\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_vm._v(\"b047b02ea83310a70fd603dc8cd7a6cd13d15c04\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\" secure this thing\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br')])]),_c('p',[_vm._v(\"这个提交是正常的，现在 Git 拥有的信息已经可以确定引入问题的位置在哪里。 它会告诉你第一个错误提交的 SHA-1 值并显示一些提交说明，以及哪些文件在那次提交里修改过，这样你可以找出引入 bug 的根源：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" bisect good\\nb047b02ea83310a70fd603dc8cd7a6cd13d15c04 is first bad commit\\ncommit b047b02ea83310a70fd603dc8cd7a6cd13d15c04\\nAuthor: PJ Hyett \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"<\")]),_vm._v(\"pjhyett@example.com\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\">\")]),_vm._v(\"\\nDate:   Tue Jan \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"27\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"14\")]),_vm._v(\":48:32 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2009\")]),_vm._v(\" -0800\\n\\n    secure this thing\\n\\n:040000 040000 40ee3e7821b895e52c1695092db9bdc4c61d1730\\nf24d3c6ebcfc639b1a3814550e62d60b8e68a8e4 M  config\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"8\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"9\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"10\")]),_c('br')])]),_c('p',[_vm._v(\"当你完成这些操作之后，你应该执行 \"),_c('code',[_vm._v(\"git bisect reset\")]),_vm._v(\"  重置你的 HEAD 指针到最开始的位置，否则你会停留在一个很奇怪的状态：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" bisect reset\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('p',[_vm._v(\"这是一个可以帮助你在几分钟内从数百个提交中找到 bug 的强大工具。 事实上，如果你有一个脚本在项目是正常的情况下返回 0，在不正常的情况下返回非 0，你可以使  \"),_c('code',[_vm._v(\"git bisect\")]),_vm._v(\"  自动化这些操作。 首先，你设定好项目正常以及不正常所在提交的二分查找范围。 你可以通过  \"),_c('code',[_vm._v(\"bisect start\")]),_vm._v(\"  命令的参数来设定这两个提交，第一个参数是项目不正常的提交，第二个参数是项目正常的提交：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" bisect start HEAD v1.0\\n$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" bisect run test-error.sh\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br')])]),_c('p',[_vm._v(\"Git 会自动在每个被检出的提交里执行 test-error.sh 直到找到第一个项目不正常的提交。 你也可以执行 make 或者 make tests 或者其他东西来进行自动化测试。\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"sourceRoot":""}