{"version":3,"sources":["webpack:///./docs/git-scm/10/07.md","webpack:///./docs/git-scm/10/07.md?10f3","webpack:///./docs/git-scm/10/07.md?4e37"],"names":[],"mappings":"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","file":"assets/js/542.54776ce8.js","sourcesContent":["import { render, staticRenderFns } from \"./07.md?vue&type=template&id=104ede64&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/@vuepress/core/node_modules/.cache/vuepress\\\",\\\"cacheIdentifier\\\":\\\"2e9acca5-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??ref--1-1!../../../node_modules/@vuepress/markdown-loader/index.js??ref--1-2!./07.md?vue&type=template&id=104ede64&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{\"slot-key\":_vm.$parent.slotKey}},[_c('h1',{attrs:{\"id\":\"维护与数据恢复\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#维护与数据恢复\"}},[_vm._v(\"#\")]),_vm._v(\" 维护与数据恢复\")]),_vm._v(\" \"),_c('p',[_vm._v(\"有的时候，\"),_c('strong',[_vm._v(\"你需要对仓库进行清理 – 使它的结构变得更紧凑\")]),_vm._v(\"，或是 \"),_c('strong',[_vm._v(\"对导入的仓库进行清理\")]),_vm._v(\"，或是 \"),_c('strong',[_vm._v(\"恢复丢失的内容\")]),_vm._v(\"。 这个小节将会介绍这些情况中的一部分。\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"维护\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#维护\"}},[_vm._v(\"#\")]),_vm._v(\" 维护\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Git 会不定时地自动运行一个叫做 \"),_c('code',[_vm._v(\"auto gc\")]),_vm._v(\" 的命令。 大多数时候，这个命令并不会产生效果。 然而，\"),_c('strong',[_vm._v(\"如果有太多松散对象（不在包文件中的对象）或者太多包文件，Git 会运行一个完整的  \"),_c('code',[_vm._v(\"git gc\")]),_vm._v(\"  命令\")]),_vm._v(\"。 \"),_c('code',[_vm._v(\"gc\")]),_vm._v(\"  代表垃圾回收，这个命令会做以下事情：\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"收集所有松散对象并将它们放置到包文件中\")]),_vm._v(\" \"),_c('li',[_vm._v(\"将多个包文件合并为一个大的包文件\")]),_vm._v(\" \"),_c('li',[_vm._v(\"移除与任何提交都不相关的陈旧对象。\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"可以像下面一样手动执行自动垃圾回收：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" gc --auto\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br')])]),_c('p',[_vm._v(\"就像上面提到的，这个命令通常并不会产生效果。 大约需要 7000 个以上的松散对象或超过 50 个的包文件才能让 Git 启动一次真正的 gc 命令。 你可以通过修改 \"),_c('code',[_vm._v(\"gc.auto\")]),_vm._v(\"  与  \"),_c('code',[_vm._v(\"gc.autopacklimit\")]),_vm._v(\"  的设置来改动这些数值。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"gc 将会做的另一件事是打包你的引用到一个单独的文件。 假设你的仓库包含以下分支与标签：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"find\")]),_vm._v(\" .git/refs -type f\\n.git/refs/heads/experiment\\n.git/refs/heads/master\\n.git/refs/tags/v1.0\\n.git/refs/tags/v1.1\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br')])]),_c('p',[_vm._v(\"如果你执行了 \"),_c('code',[_vm._v(\"git gc\")]),_vm._v(\"  命令，refs 目录中将不会再有这些文件。 为了保证效率 Git 会将它们移动到名为 \"),_c('code',[_vm._v(\".git/packed-refs\")]),_vm._v(\"  的文件中，就像这样：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"cat\")]),_vm._v(\" .git/packed-refs\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"# pack-refs with: peeled fully-peeled\")]),_vm._v(\"\\ncac0cab538b970a37ea1e769cbbde608743bc96d refs/heads/experiment\\nab1afef80fac8e34258ff41fc1b867c702daa24b refs/heads/master\\ncac0cab538b970a37ea1e769cbbde608743bc96d refs/tags/v1.0\\n9585191f37f7b0fb9444f35a9bf50de191beadc2 refs/tags/v1.1\\n^1a410efbd13591db07496601ebc7a059dd55cfe9\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br')])]),_c('p',[_vm._v(\"如果你更新了引用，Git 并不会修改这个文件，而是向 \"),_c('code',[_vm._v(\"refs/heads\")]),_vm._v(\"  创建一个新的文件。 为了获得指定引用的正确 SHA-1 值，Git 会首先在 refs 目录中查找指定的引用，然后再到 packed-refs 文件中查找。 所以，如果你在 refs 目录中找不到一个引用，那么它或许在 packed-refs 文件中。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"注意这个文件的最后一行，它会以  \"),_c('code',[_vm._v(\"^\")]),_vm._v(\"  开头。 这个符号表示它上一行的标签是附注标签，那一行是附注标签指向的那个提交。\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"据恢复\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#据恢复\"}},[_vm._v(\"#\")]),_vm._v(\" 据恢复\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在你使用 Git 的时候，你可能会意外丢失一次提交。 通常这是因为你强制删除了正在工作的分支，但是最后却发现你还需要这个分支；亦或者硬重置了一个分支，放弃了你想要的提交。 如果这些事情已经发生，该如何找回你的提交呢？\")]),_vm._v(\" \"),_c('p',[_vm._v(\"下面的例子将硬重置你的测试仓库中的 master 分支到一个旧的提交，以此来恢复丢失的提交。 首先，让我们看看你的仓库现在在什么地方：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" log --pretty\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"oneline\\nab1afef80fac8e34258ff41fc1b867c702daa24b modified repo a bit\\n484a59275031909e19aadb7c92262719cfcdf19a added repo.rb\\n1a410efbd13591db07496601ebc7a059dd55cfe9 third commit\\ncac0cab538b970a37ea1e769cbbde608743bc96d second commit\\nfdf4fc3344e67ab068f836878b6c4951e3b15f3d first commit\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br')])]),_c('p',[_vm._v(\"现在，我们将 master 分支硬重置到第三次提：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" reset --hard 1a410efbd13591db07496601ebc7a059dd55cfe9\\nHEAD is now at 1a410ef third commit\\n\\n$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" log --pretty\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"oneline\\n1a410efbd13591db07496601ebc7a059dd55cfe9 third commit\\ncac0cab538b970a37ea1e769cbbde608743bc96d second commit\\nfdf4fc3344e67ab068f836878b6c4951e3b15f3d first commit\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br')])]),_c('p',[_c('strong',[_vm._v(\"现在顶部的两个提交已经丢失了 – 没有分支指向这些提交\")]),_vm._v(\"。 你需要找出最后一次提交的 SHA-1 然后增加一个指向它的分支。 窍门就是找到最后一次的提交的 SHA-1 – 但是估计你记不起来了，对吗？\")]),_vm._v(\" \"),_c('p',[_vm._v(\"最方便，也是最常用的方法，是使用一个名叫  \"),_c('code',[_vm._v(\"git reflog\")]),_vm._v(\"  的工具。 当你正在工作时，Git 会默默地记录每一次你改变 HEAD 时它的值。 每一次你提交或改变分支，引用日志都会被更新。 引用日志（reflog）也可以通过 \"),_c('code',[_vm._v(\"git update-ref\")]),_vm._v(\"  命令更新，我们在 \"),_c('RouterLink',{attrs:{\"to\":\"/git-scm/10/03.html\"}},[_vm._v(\"Git 引用\")]),_vm._v(\" 有提到使用这个命令而不是是直接将 SHA-1 的值写入引用文件中的原因。 你可以在任何时候通过执行 \"),_c('code',[_vm._v(\"git reflog\")]),_vm._v(\" 命令来了解你曾经做过什么：\")],1),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" reflog\\n1a410ef HEAD@\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\": reset: moving to 1a410ef\\nab1afef HEAD@\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\": commit: modified repo.rb a bit\\n484a592 HEAD@\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\": commit: added repo.rb\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br')])]),_c('p',[_vm._v(\"这里可以看到我们已经检出的两次提交，然而并没有足够多的信息。 为了使显示的信息更加有用，我们可以执行 \"),_c('code',[_vm._v(\"git log -g\")]),_vm._v(\"，这个命令会以标准日志的格式输出引用日志。\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" log -g\\ncommit 1a410efbd13591db07496601ebc7a059dd55cfe9\\nReflog: HEAD@\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"Scott Chacon \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"<\")]),_vm._v(\"schacon@gmail.com\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\">\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\nReflog message: updating HEAD\\nAuthor: Scott Chacon \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"<\")]),_vm._v(\"schacon@gmail.com\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\">\")]),_vm._v(\"\\nDate:   Fri May \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"22\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"18\")]),_vm._v(\":22:37 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2009\")]),_vm._v(\" -0700\\n\\n\\t\\tthird commit\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"# 这种情况下，一般第一个是你当前的最后一个提交对象，下一个就是重置前的提交对象\")]),_vm._v(\"\\ncommit ab1afef80fac8e34258ff41fc1b867c702daa24b\\nReflog: HEAD@\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"Scott Chacon \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"<\")]),_vm._v(\"schacon@gmail.com\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\">\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\nReflog message: updating HEAD\\nAuthor: Scott Chacon \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"<\")]),_vm._v(\"schacon@gmail.com\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\">\")]),_vm._v(\"\\nDate:   Fri May \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"22\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"18\")]),_vm._v(\":15:24 \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2009\")]),_vm._v(\" -0700\\n\\n       modified repo.rb a bit  \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"# 最好就是记住你的提交历史信息，来做对比\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"8\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"9\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"10\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"11\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"12\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"13\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"14\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"15\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"16\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"17\")]),_c('br')])]),_c('p',[_vm._v(\"看起来下面的那个就是你丢失的提交，你可以通过创建一个新的分支指向这个提交来恢复它。 例如，你可以创建一个名为 \"),_c('code',[_vm._v(\"recover-branch\")]),_vm._v(\"  的分支指向这个提交（ab1afef）：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" branch recover-branch ab1afef\\n$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" log --pretty\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\"oneline recover-branch\\nab1afef80fac8e34258ff41fc1b867c702daa24b modified repo a bit\\n484a59275031909e19aadb7c92262719cfcdf19a added repo.rb\\n1a410efbd13591db07496601ebc7a059dd55cfe9 third commit\\ncac0cab538b970a37ea1e769cbbde608743bc96d second commit\\nfdf4fc3344e67ab068f836878b6c4951e3b15f3d first commit\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br')])]),_c('p',[_vm._v(\"不错，现在有一个名为 recover-branch 的分支是你的 master 分支曾经指向的地方，再一次使得前两次提交可到达了。 接下来，假设你丢失的提交因为某些原因不在引用日志中 – 我们可以通过移除 \"),_c('code',[_vm._v(\"recover-branch\")]),_vm._v(\"  分支并删除引用日志来模拟这种情况。 现在前两次提交又不被任何分支指向了：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" branch -D recover-branch\\n$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"rm\")]),_vm._v(\" -Rf .git/logs/\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br')])]),_c('p',[_vm._v(\"由于 \"),_c('strong',[_vm._v(\"引用日志数据存放在  \"),_c('code',[_vm._v(\".git/logs/\")]),_vm._v(\"  目录中\")]),_vm._v(\"，现在你已经没有引用日志了。 这时该如何恢复那次提交？ 一种方式是使用 \"),_c('code',[_vm._v(\"git fsck\")]),_vm._v(\" 实用工具，将会检查数据库的完整性。 如果使用一个  \"),_c('code',[_vm._v(\"–full\")]),_vm._v(\"  选项运行它，它会向你显示出所有没有被其他对象指向的对象：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"fsck\")]),_vm._v(\" --full\\nChecking object directories: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"100\")]),_vm._v(\"% \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"256\")]),_vm._v(\"/256\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\", done.\\nChecking objects: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"100\")]),_vm._v(\"% \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"18\")]),_vm._v(\"/18\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\", done.\\ndangling blob d670460b4b4aece5915caf5c68d12f560a9fe3e4\\ndangling commit ab1afef80fac8e34258ff41fc1b867c702daa24b\\ndangling tree aea790b9a58f6cf6f2804eeac9f0abbe9631e4c9\\ndangling blob 7108f7ecb345ee9d0084193f147cdad4d2998293\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br')])]),_c('p',[_vm._v(\"在这个例子中，你可以在  \"),_c('code',[_vm._v(\"dangling commit\")]),_vm._v(\"  后看到你丢失的提交。 现在你可以用和之前相同的方法恢复这个提交，也就是添加一个指向这个提交的分支。\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"移除对象\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#移除对象\"}},[_vm._v(\"#\")]),_vm._v(\" 移除对象\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Git 有很多很棒的功能，但是其中一个特性会导致问题，\"),_c('strong',[_c('code',[_vm._v(\"git clone\")]),_vm._v(\"  会下载整个项目的历史\")]),_vm._v(\"，包括每一个文件的每一个版本。 如果所有的东西都是源代码那么这很好，因为 Git 被高度优化来有效地存储这种数据。 然而，如果某个人在之前向项目添加了一个大小特别大的文件，即使你将这个文件从项目中移除了，每次克隆还是都要强制的下载这个大文件。 之所以会产生这个问题，是因为这个文件在历史中是存在的，它会永远在那里。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"当你迁移 Subversion 或 Perforce 仓库到 Git 的时候，这会是一个严重的问题。 因为这些版本控制系统并不下载所有的历史文件，所以这种文件所带来的问题比较少。 如果你从其他的版本控制系统迁移到 Git 时发现仓库比预期的大得多，那么你就需要找到并移除这些大文件。\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"警告：这个操作对提交历史的修改是破坏性的。\")])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"它会从你必须修改或移除一个大文件引用最早的树对象开始重写每一次提交\")]),_vm._v(\"。 如果你在导入仓库后，在任何人开始基于这些提交工作前执行这个操作，那么将不会有任何问题 – 否则，你必须通知所有的贡献者他们需要将他们的成果变基到你的新提交上。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"为了演示，我们将添加一个大文件到测试仓库中，并在下一次提交中删除它，现在我们需要找到它，并将它从仓库中永久删除。 首先，添加一个大文件到仓库中：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"curl\")]),_vm._v(\" https://www.kernel.org/pub/software/scm/git/git-2.1.0.tar.gz \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\">\")]),_vm._v(\" git.tgz\\n$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"add\")]),_vm._v(\" git.tgz\\n$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" commit -m \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'add git tarball'\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_vm._v(\"master 7b30847\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"add\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" tarball\\n \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"file\")]),_vm._v(\" changed, \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_vm._v(\" insertions\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"+\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\", \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_vm._v(\" deletions\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"-\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n create mode \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"100644\")]),_vm._v(\" git.tgz\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br')])]),_c('p',[_vm._v(\"哎呀 – 其实这个项目并不需要这个巨大的压缩文件。 现在我们将它移除：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"rm\")]),_vm._v(\" git.tgz\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"rm\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'git.tgz'\")]),_vm._v(\"\\n$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" commit -m \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'oops - removed large tarball'\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_vm._v(\"master dadf725\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\" oops - removed large tarball\\n \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"file\")]),_vm._v(\" changed, \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_vm._v(\" insertions\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"+\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\", \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_vm._v(\" deletions\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"-\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n delete mode \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"100644\")]),_vm._v(\" git.tgz\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br')])]),_c('p',[_vm._v(\"现在，我们执行 gc 来查看数据库占用了多少空间：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" gc\\nCounting objects: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"17\")]),_vm._v(\", done.\\nDelta compression using up to \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"8\")]),_vm._v(\" threads.\\nCompressing objects: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"100\")]),_vm._v(\"% \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"13\")]),_vm._v(\"/13\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\", done.\\nWriting objects: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"100\")]),_vm._v(\"% \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"17\")]),_vm._v(\"/17\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\", done.\\nTotal \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"17\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"delta \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\", reused \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"10\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"delta \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br')])]),_c('p',[_vm._v(\"你也可以执行 count-objects 命令来快速的查看占用空间大小：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" count-objects -v\\ncount: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"7\")]),_vm._v(\"\\nsize: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"32\")]),_vm._v(\"\\nin-pack: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"17\")]),_vm._v(\"\\npacks: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_vm._v(\"\\nsize-pack: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"4868\")]),_vm._v(\"\\nprune-packable: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_vm._v(\"\\ngarbage: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_vm._v(\"\\nsize-garbage: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"8\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"9\")]),_c('br')])]),_c('p',[_vm._v(\"size-pack 的数值指的是你的包文件以 KB 为单位计算的大小，所以你大约占用了 5MB 的空间。 在最后一次提交前，使用了不到 2KB – 显然，从之前的提交中移除文件并不能从历史中移除它。 每一次有人克隆这个仓库时，他们将必须克隆所有的 5MB 来获得这个微型项目，只因为你意外地添加了一个大文件。 \"),_c('strong',[_vm._v(\"现在来让我们彻底的移除这个文件\")]),_vm._v(\"。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"首先你必须找到它。 在本例中，你已经知道是哪个文件了。 但是假设你不知道；该如何找出哪个文件或哪些文件占用了如此多的空间？ 如果你执行 \"),_c('code',[_vm._v(\"git gc\")]),_vm._v(\"  命令，所有的对象将被放入一个包文件中，你可以通过运行  \"),_c('code',[_vm._v(\"git verify-pack\")]),_vm._v(\"  命令，然后对输出内容的第三列（即文件大小）进行排序，从而找出这个大文件。 你也可以将这个命令的执行结果通过管道传送给 \"),_c('code',[_vm._v(\"tail\")]),_vm._v(\"  命令，因为你只需要找到列在最后的几个大对象。\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" verify-pack -v .git/objects/pack/pack-29…69.idx \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"\\\\\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"sort\")]),_vm._v(\" -k \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"3\")]),_vm._v(\" -n \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"\\\\\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"tail\")]),_vm._v(\" -3\\ndadf7258d699da2c8d89b09ef6670edb7d5f91b4 commit \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"229\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"159\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"12\")]),_vm._v(\"\\n033b4468fa6b2a9547a70d88d1bbe8bf3f9ed0d5 blob   \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"22044\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"5792\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"4977696\")]),_vm._v(\"\\n82c99a3e86bb1267b236a4b6eff7868d97489af1 blob   \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"4975916\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"4976258\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"1438\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br')])]),_c('p',[_vm._v(\"你可以看到这个大对象出现在返回结果的最底部：占用 5MB 空间。 为了找出具体是哪个文件，可以使用 \"),_c('code',[_vm._v(\"rev-list\")]),_vm._v(\"  命令，我们在 \"),_c('RouterLink',{attrs:{\"to\":\"/git-scm/08/04.html\"}},[_vm._v(\"指定特殊的提交信息格式\")]),_vm._v(\" 中曾提到过。 如果你传递  \"),_c('code',[_vm._v(\"–objects\")]),_vm._v(\"  参数给 \"),_c('code',[_vm._v(\"rev-list\")]),_vm._v(\"  命令，它就会列出所有提交的 SHA-1、数据对象的 SHA-1 和与它们相关联的文件路径。 可以使用以下命令来找出你的数据对象的名字：\")],1),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" rev-list --objects --all \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"grep\")]),_vm._v(\" 82c99a3\\n82c99a3e86bb1267b236a4b6eff7868d97489af1 git.tgz\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br')])]),_c('p',[_vm._v(\"现在，\"),_c('strong',[_vm._v(\"你只需要从过去所有的树中移除这个文件\")]),_vm._v(\"。 使用以下命令可以轻松地 \"),_c('strong',[_vm._v(\"查看哪些提交对这个文件产生改动\")]),_vm._v(\"：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" log --oneline --branches -- git.tgz\\ndadf725 oops - removed large tarball\\n7b30847 \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"add\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" tarball\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br')])]),_c('p',[_vm._v(\"现在，你必须重写 7b30847 提交之后的所有提交来从 Git 历史中完全移除这个文件。 为了执行这个操作，我们要使用 \"),_c('code',[_vm._v(\"filter-branch\")]),_vm._v(\"  命令，这个命令在 \"),_c('RouterLink',{attrs:{\"to\":\"/git-scm/07/06.html\"}},[_vm._v(\"重写历史\")]),_vm._v(\" 中也使用过：\")],1),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" filter-branch --index-filter \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"\\\\\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'git rm --ignore-unmatch --cached git.tgz'\")]),_vm._v(\" -- 7b30847^\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"..\")]),_vm._v(\"\\nRewrite 7b30847d080183a1ab7d18fb202473b3096e9f34 \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_vm._v(\"/2\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"rm \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'git.tgz'\")]),_vm._v(\"\\nRewrite dadf7258d699da2c8d89b09ef6670edb7d5f91b4 \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2\")]),_vm._v(\"/2\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\nRef \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'refs/heads/master'\")]),_vm._v(\" was rewritten\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br')])]),_c('p',[_c('code',[_vm._v(\"–index-filter\")]),_vm._v(\"  选项类似于在 \"),_c('RouterLink',{attrs:{\"to\":\"/git-scm/07/06.html\"}},[_vm._v(\"重写历史\")]),_vm._v(\" 中提到的的 \"),_c('code',[_vm._v(\"–tree-filter\")]),_vm._v(\" 选项，不过这个选项并不会让命令将修改在硬盘上检出的文件，而只是修改在暂存区或索引中的文件。\")],1),_vm._v(\" \"),_c('p',[_vm._v(\"你必须使用 \"),_c('code',[_vm._v(\"git rm –cached\")]),_vm._v(\"  命令来移除文件，而不是通过类似 \"),_c('code',[_vm._v(\"rm file\")]),_vm._v(\"  的命令 – 因为你需要从索引中移除它，而不是磁盘中。 还有一个原因是速度 – Git 在运行过滤器时，并不会检出每个修订版本到磁盘中，所以这个过程会非常快。 如果愿意的话，你也可以通过 \"),_c('code',[_vm._v(\"–tree-filter\")]),_vm._v(\"  选项来完成同样的任务。 \"),_c('code',[_vm._v(\"git rm\")]),_vm._v(\"  命令的  \"),_c('code',[_vm._v(\"–ignore-unmatch\")]),_vm._v(\"  选项告诉命令：如果尝试删除的模式不存在时，不提示错误。 最后，使用 \"),_c('code',[_vm._v(\"filter-branch\")]),_vm._v(\"  选项来重写自 7b30847 提交以来的历史，也就是这个问题产生的地方。 否则，这个命令会从最旧的提交开始，这将会花费许多不必要的时间。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"你的历史中将不再包含对那个文件的引用。 不过，你的引用日志和你在  \"),_c('code',[_vm._v(\".git/refs/original\")]),_vm._v(\"  通过 \"),_c('code',[_vm._v(\"filter-branch\")]),_vm._v(\"  选项添加的新引用中还存有对这个文件的引用，所以你必须移除它们然后重新打包数据库。 在重新打包前需要移除任何包含指向那些旧提交的指针的文件：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"rm\")]),_vm._v(\" -Rf .git/refs/original\\n$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"rm\")]),_vm._v(\" -Rf .git/logs/\\n$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" gc\\nCounting objects: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"15\")]),_vm._v(\", done.\\nDelta compression using up to \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"8\")]),_vm._v(\" threads.\\nCompressing objects: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"100\")]),_vm._v(\"% \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"11\")]),_vm._v(\"/11\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\", done.\\nWriting objects: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"100\")]),_vm._v(\"% \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"15\")]),_vm._v(\"/15\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\", done.\\nTotal \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"15\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"delta \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\", reused \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"12\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"delta \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"8\")]),_c('br')])]),_c('p',[_vm._v(\"让我们看看你省了多少空间。\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" count-objects -v\\ncount: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"11\")]),_vm._v(\"\\nsize: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"4904\")]),_vm._v(\"\\nin-pack: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"15\")]),_vm._v(\"\\npacks: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_vm._v(\"\\nsize-pack: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"8\")]),_vm._v(\"\\nprune-packable: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_vm._v(\"\\ngarbage: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_vm._v(\"\\nsize-garbage: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"8\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"9\")]),_c('br')])]),_c('p',[_vm._v(\"打包的仓库大小下降到了 8K，比 5MB 好很多。 可以从 size 的值看出，这个大文件还在你的松散对象中，并没有消失；但是它不会在推送或接下来的克隆中出现，这才是最重要的。 如果真的想要删除它，可以通过有 \"),_c('code',[_vm._v(\"–expire\")]),_vm._v(\"  选项的 \"),_c('code',[_vm._v(\"git prune\")]),_vm._v(\"  命令来完全地移除那个对象：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_vm._v(\"$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" prune --expire now\\n$ \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"git\")]),_vm._v(\" count-objects -v\\ncount: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_vm._v(\"\\nsize: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_vm._v(\"\\nin-pack: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"15\")]),_vm._v(\"\\npacks: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_vm._v(\"\\nsize-pack: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"8\")]),_vm._v(\"\\nprune-packable: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_vm._v(\"\\ngarbage: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_vm._v(\"\\nsize-garbage: \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"8\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"9\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"10\")]),_c('br')])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"sourceRoot":""}